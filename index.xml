<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title>Jinyun's Notes</title><link>https://imajinyun.xyz/</link><description>进一寸有进一寸的欢喜，退一步有退一步的从容</description><generator>Hugo -- gohugo.io</generator><language>zh-CN</language><lastBuildDate>Wed, 30 Nov 2022 13:26:09 +0800</lastBuildDate><atom:link href="https://imajinyun.xyz/index.xml" rel="self" type="application/rss+xml"/><item><title>Linux SSH 免密码登录</title><link>https://imajinyun.xyz/2022/11/30/linux-ssh-password-free-login/</link><pubDate>Wed, 30 Nov 2022 13:26:09 +0800</pubDate><author>作者</author><guid>https://imajinyun.xyz/2022/11/30/linux-ssh-password-free-login/</guid><description>在维护多台机器时，传统的用户名密码登录存在一些弊端，所以就分出一台当跳板机，从跳板机上登录其它机器。 SSH 服务 安装 SSH 服务 1 2 3 4 5 6 7 8 // CentOS $ yum</description></item><item><title>Android 问题集锦</title><link>https://imajinyun.xyz/2022/11/08/android-issues/</link><pubDate>Tue, 08 Nov 2022 13:52:45 +0800</pubDate><author>作者</author><guid>https://imajinyun.xyz/2022/11/08/android-issues/</guid><description>收集一些遇到的安卓问题解决方案。 安卓常见问题 Android SDK - reposit: 1 2 3 $ touch ~/.android/repositories.cfg $ ./Android/Sdk/tools/bin/sdkmanager --update $ ./Android/Sdk/tools/bin/sdkmanager --licenses Expiring Daemon because JVM heap space is exhausted: 1 2 3 4 // gradle.properties org.gradle.daemon=true org.gradle.configureondemand=true org.gradle.jvmargs=-Xmx4g -XX:MaxPermSize=2048m -XX:+HeapDumpOnOutOfMemoryError -Dfile.encoding=UTF-8 Expiring Daemon because JVM heap space is exhausted Could not find com.jakewharton:butterknife-compiler:7.0.1:</description></item><item><title>Linux Go 运行环境搭建</title><link>https://imajinyun.xyz/2022/11/08/linux-go-env/</link><pubDate>Tue, 08 Nov 2022 13:52:45 +0800</pubDate><author>作者</author><guid>https://imajinyun.xyz/2022/11/08/linux-go-env/</guid><description>Linux 服务器配置 鉴于目前大部分服务器使用 CentOS 系统，本文将介绍在 CentOS 上搭建 Go 环境。 用 root 用户登录 Linux 系统，并创建普通用户： 1 2 3 4 5 // 添加用户 $ useradd -m -s /bin/bash golang</description></item><item><title>Go GPM 模型</title><link>https://imajinyun.xyz/2022/10/15/go-gpm-model/</link><pubDate>Sat, 15 Oct 2022 21:31:32 +0800</pubDate><author>作者</author><guid>https://imajinyun.xyz/2022/10/15/go-gpm-model/</guid><description>基本概念 普通栈：需要调度的 Goroutine 组成的函数栈，是可增长的栈，因为 Goroutine 可以越开越多； 线程栈：需要将 Goroutine 放置到线程上的 M 们组成，实质上 M 也是由 Goroutine 生成的，</description></item><item><title>线程模型之 Reactor 模型</title><link>https://imajinyun.xyz/2022/10/07/linux-reactor/</link><pubDate>Fri, 07 Oct 2022 16:58:05 +0800</pubDate><author>作者</author><guid>https://imajinyun.xyz/2022/10/07/linux-reactor/</guid><description>线程模型 目前存在的线程模型： 传统阻塞 IO 服务模型。 Reactor 模型。 传统阻塞 IO 服务模型的特点： 采用阻塞 IO 模式获取输入的数据。 每个连接都需要独立的线程完成</description></item><item><title>Go gRPC</title><link>https://imajinyun.xyz/2022/06/20/go-grpc/</link><pubDate>Mon, 20 Jun 2022 21:02:02 +0800</pubDate><author>作者</author><guid>https://imajinyun.xyz/2022/06/20/go-grpc/</guid><description><![CDATA[<p><code>gRPC</code> 是一个现代的开源高性能远程过程调用（<code>RPC - Remote Procedure Call</code>）框架，可以在任何环境中运行。它可以通过对负载平衡、跟踪、健康检查和身份验证的可插拔支持，有效地连接数据中心内和跨数据中心的服务。它也适用于分布式计算的最后一英里，将设备、移动应用程序和浏览器连接到后端服务。</p>]]></description></item><item><title>栈和队列</title><link>https://imajinyun.xyz/2022/05/14/ds-stack-queue/</link><pubDate>Sat, 14 May 2022 11:31:12 +0800</pubDate><author>作者</author><guid>https://imajinyun.xyz/2022/05/14/ds-stack-queue/</guid><description>&lt;p>栈和队列可看作是特殊的线性表。它们的特殊性表现在它们的基本运算是线性表运算的子集，它们是运算受限的线性表。&lt;/p></description></item><item><title>线性表</title><link>https://imajinyun.xyz/2022/05/04/ds-linear-list/</link><pubDate>Wed, 04 May 2022 11:56:17 +0800</pubDate><author>作者</author><guid>https://imajinyun.xyz/2022/05/04/ds-linear-list/</guid><description>&lt;p>线性表是最基本、最简单、也是最常用的一种数据结构。线性表（linear list）是数据结构的一种，一个线性表是 &lt;strong>n&lt;/strong> 个具有相同特性的数据元素的有限序列。&lt;/p></description></item><item><title>数据结构与算法起步</title><link>https://imajinyun.xyz/2022/05/04/ds-get-started/</link><pubDate>Wed, 04 May 2022 11:32:50 +0800</pubDate><author>作者</author><guid>https://imajinyun.xyz/2022/05/04/ds-get-started/</guid><description>&lt;p>整理一下数据结构与算法方面的概念和代码。&lt;/p></description></item><item><title>AWS Get Started</title><link>https://imajinyun.xyz/2022/01/17/aws-get-started/</link><pubDate>Mon, 17 Jan 2022 18:25:53 +0800</pubDate><author>作者</author><guid>https://imajinyun.xyz/2022/01/17/aws-get-started/</guid><description>&lt;p>AWS 在部署容器时提供了很多选项。但是知道哪种服务能做什么，即使是经验丰富的专业人士也会感到头痛。&lt;/p></description></item></channel></rss>