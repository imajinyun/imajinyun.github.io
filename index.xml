<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title>Jinyun's Notes</title><link>https://imajinyun.xyz/</link><description>进一寸有进一寸的欢喜，退一步有退一步的从容</description><generator>Hugo -- gohugo.io</generator><language>zh-CN</language><lastBuildDate>Mon, 20 Jun 2022 21:02:02 +0800</lastBuildDate><atom:link href="https://imajinyun.xyz/index.xml" rel="self" type="application/rss+xml"/><item><title>Go gRPC</title><link>https://imajinyun.xyz/2022/06/20/go-grpc/</link><pubDate>Mon, 20 Jun 2022 21:02:02 +0800</pubDate><author>作者</author><guid>https://imajinyun.xyz/2022/06/20/go-grpc/</guid><description>gRPC 是一个现代的开源高性能远程过程调用（RPC - Remote Procedure Call）框架，可以在任何环境中运行。它可以通过对负载平衡、跟踪、健康检查和身份验证的可插</description></item><item><title>栈和队列</title><link>https://imajinyun.xyz/2022/05/14/ds-stack-queue/</link><pubDate>Sat, 14 May 2022 11:31:12 +0800</pubDate><author>作者</author><guid>https://imajinyun.xyz/2022/05/14/ds-stack-queue/</guid><description>&lt;p>栈和队列可看作是特殊的线性表。它们的特殊性表现在它们的基本运算是线性表运算的子集，它们是运算受限的线性表。&lt;/p></description></item><item><title>线性表</title><link>https://imajinyun.xyz/2022/05/04/ds-linear-list/</link><pubDate>Wed, 04 May 2022 11:56:17 +0800</pubDate><author>作者</author><guid>https://imajinyun.xyz/2022/05/04/ds-linear-list/</guid><description>&lt;p>线性表是最基本、最简单、也是最常用的一种数据结构。线性表（linear list）是数据结构的一种，一个线性表是 &lt;strong>n&lt;/strong> 个具有相同特性的数据元素的有限序列。&lt;/p></description></item><item><title>数据结构与算法起步</title><link>https://imajinyun.xyz/2022/05/04/ds-get-started/</link><pubDate>Wed, 04 May 2022 11:32:50 +0800</pubDate><author>作者</author><guid>https://imajinyun.xyz/2022/05/04/ds-get-started/</guid><description>&lt;p>整理一下数据结构与算法方面的概念和代码。&lt;/p></description></item><item><title>AWS Get Started</title><link>https://imajinyun.xyz/2022/01/17/aws-get-started/</link><pubDate>Mon, 17 Jan 2022 18:25:53 +0800</pubDate><author>作者</author><guid>https://imajinyun.xyz/2022/01/17/aws-get-started/</guid><description>&lt;p>AWS 在部署容器时提供了很多选项。但是知道哪种服务能做什么，即使是经验丰富的专业人士也会感到头痛。&lt;/p></description></item><item><title>PHP 源码学习二</title><link>https://imajinyun.xyz/2021/09/13/php-src-learning2/</link><pubDate>Mon, 13 Sep 2021 08:52:15 +0800</pubDate><author>作者</author><guid>https://imajinyun.xyz/2021/09/13/php-src-learning2/</guid><description><![CDATA[<p>通过 GDB 跟踪调试来了解一下 <code>Zend String</code> 和 <code>Zend Array</code>。</p>]]></description></item><item><title>PHP 源码学习一</title><link>https://imajinyun.xyz/2021/09/12/php-src-learning1/</link><pubDate>Sun, 12 Sep 2021 13:02:17 +0000</pubDate><author>作者</author><guid>https://imajinyun.xyz/2021/09/12/php-src-learning1/</guid><description>&lt;p>看到慕课网有大佬讲解 PHP 源码，既然来了，那就看看吧，以下为整理的笔记。&lt;/p></description></item><item><title>Go 连接字符串</title><link>https://imajinyun.xyz/2021/07/25/go-concat-string/</link><pubDate>Sun, 25 Jul 2021 20:41:09 +0800</pubDate><author>作者</author><guid>https://imajinyun.xyz/2021/07/25/go-concat-string/</guid><description>&lt;p>Go 中连接字符串的方法有很多种，其实掌握一两种较为高效的方法就足够了，其它权当看热闹。&lt;/p></description></item><item><title>Go 正确姿势</title><link>https://imajinyun.xyz/2021/07/24/go-correct-posture/</link><pubDate>Sat, 24 Jul 2021 22:28:17 +0800</pubDate><author>作者</author><guid>https://imajinyun.xyz/2021/07/24/go-correct-posture/</guid><description>&lt;p>在编写 Go 代码之时，我跟很多新手一样踩了不少坑，感觉非常有必要将那些踩过的坑记录下来以避免下次犯错。很多人说 Go 简单易学，上手容易，可惜我不是那些很多人中的一个，天资愚钝如此，我只能反复学习了。&lt;/p></description></item><item><title>Go 其它测试</title><link>https://imajinyun.xyz/2021/07/22/go-other-test/</link><pubDate>Thu, 22 Jul 2021 08:43:23 +0800</pubDate><author>作者</author><guid>https://imajinyun.xyz/2021/07/22/go-other-test/</guid><description>&lt;p>Go 的 testing 包除了测试，还提供了运行并验证示例的功能。一方面是文档的效果，是关于某个功能的使用例子；另一方面，可以被当做测试运行。&lt;/p></description></item></channel></rss>