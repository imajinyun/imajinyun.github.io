<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>AWS 起步</title>
    <url>/2022/01/17/aws-get-started/</url>
    <content><![CDATA[<p>🌈 AWS 在部署容器时提供了很多选项。但是知道哪种服务能做什么，即使是经验丰富的专业人士也会感到头痛。</p>
<h2 id="了解每个服务的角色"><a href="#了解每个服务的角色" class="headerlink" title="了解每个服务的角色"></a>了解每个服务的角色</h2><p>本质上，每个服务都是编排层（管理容器）或宿主层（运行容器）的一部分：</p>
<ul>
<li>ECS、EK 和 Kuberneretes 是编排层的一部分；</li>
<li>EC2 和 Fargate 是宿主层的一部分；</li>
</ul>
<h2 id="EKS-vs-ECS-vs-Kuberneretes-编排层"><a href="#EKS-vs-ECS-vs-Kuberneretes-编排层" class="headerlink" title="EKS vs ECS vs Kuberneretes - 编排层"></a>EKS vs ECS vs Kuberneretes - 编排层</h2><p><img src="https://prof.justaftermidnight247.com/wp-content/uploads/2021/03/2-768x512.png" alt="aws-eks-ecs"></p>
<p>容器编排服务自动化管理容器的手动工作。编排的主要好处是：</p>
<ul>
<li>Simplifying Operations - 自动部署和创建新容器；</li>
<li>Adding Resilience - 自动管理故障和容器生命周期；</li>
<li>Adding Security - 消除由于用户错误而造成的违规行为，并自动化安全最佳实践；</li>
</ul>
<h3 id="ECS-Elastic-Container-Service"><a href="#ECS-Elastic-Container-Service" class="headerlink" title="ECS - Elastic Container Service"></a>ECS - Elastic Container Service</h3><p>AWS 自己的容器服务。它在集群中管理容器，被称为 ECS 集群。</p>
<h3 id="EKS-Elastic-Kuberneretes-Service"><a href="#EKS-Elastic-Kuberneretes-Service" class="headerlink" title="EKS - Elastic Kuberneretes Service"></a>EKS - Elastic Kuberneretes Service</h3><p>EKS 是一种 AWS 容器服务，它与 ECS 的不同之处在于它用于管理 AWS 基础设施上的 Kubernetes 集群。还可以将现有的 Kubernetes 工作负载迁移到 EKS 上。</p>
<h3 id="Kubernetes"><a href="#Kubernetes" class="headerlink" title="Kubernetes"></a>Kubernetes</h3><p>Kubernetes 是开源的容器编排服务，非常流行，但要在 AWS 上部署 Kubernetes，可以说必须使用 EKS 来实现。</p>
<h3 id="ECS-vs-EKS"><a href="#ECS-vs-EKS" class="headerlink" title="ECS vs EKS"></a>ECS vs EKS</h3><h4 id="ECS-pros"><a href="#ECS-pros" class="headerlink" title="ECS pros"></a>ECS pros</h4><ul>
<li>ECS 是 AWS 自己的容器服务，因此它与 AWS 生态系统，包括 CloudTrail，CloudWatch 和 Amazon ECR（弹性容器注册）进行了更好的集成，以实现对 Docker 映像的无缝管理；</li>
<li>ECS 控制面板完全自由，而 EKS 需要充值；</li>
</ul>
<h4 id="EKS-pros"><a href="#EKS-pros" class="headerlink" title="EKS pros"></a>EKS pros</h4><ul>
<li>由于 EKS 使用 Kubernetes，所以它更加灵活，这意味着可以比 ECS 更轻松地将工作迁移到另一个平台，使其更适合复杂的多云工作负载；</li>
<li>EKS 更适合复杂的应用；</li>
<li>EKS 最终提供了比 ECS 更多的控制（对集群的管理和调度）；</li>
</ul>
<h4 id="结论"><a href="#结论" class="headerlink" title="结论"></a>结论</h4><p>如果需要一个更简单的应用程序，并且希望合并许多 AWS 服务，ECS 可能是比较好的选择。如果有一个更复杂的项目，特别是如果想要使用多云方法，EKS 是正确的选择——显然，如果想要使用 Kubernetes 时。</p>
<h2 id="Fargate-vs-EC2-–-宿主层"><a href="#Fargate-vs-EC2-–-宿主层" class="headerlink" title="Fargate vs EC2 – 宿主层"></a>Fargate vs EC2 – 宿主层</h2><p><img src="https://prof.justaftermidnight247.com/wp-content/uploads/2021/03/1-768x512.png" alt="aws-fargate-ec2"></p>
<p>容器部署的宿主层表示容器将实际运行的虚拟机（或承载的虚拟机，因此得名）。</p>
<h3 id="EC2"><a href="#EC2" class="headerlink" title="EC2"></a>EC2</h3><p>EC2 是部署容器的传统方式。在 EC2 中，通过实际的 VM 进行运行。</p>
<h3 id="Fargate"><a href="#Fargate" class="headerlink" title="Fargate"></a>Fargate</h3><p>Fargate 带来了一种无服务器的方式，Fargate 不是自己配置服务器，而是根据每个请求自动为容器配置基础设施。</p>
<h3 id="EC2-vs-Fargate"><a href="#EC2-vs-Fargate" class="headerlink" title="EC2 vs Fargate"></a>EC2 vs Fargate</h3><h4 id="EC2-pros"><a href="#EC2-pros" class="headerlink" title="EC2 pros"></a>EC2 pros</h4><ul>
<li>EC2 意味着更多的手工工作，但是有更多的控制力和透明度（因为你自己需要配置基础设施）；</li>
<li>需要熟悉 EC2；</li>
</ul>
<h4 id="Fargate-pros"><a href="#Fargate-pros" class="headerlink" title="Fargate pros"></a>Fargate pros</h4><ul>
<li>Fargate 意味着更少的工作，通常成本更低（需要你为消耗的资源付费），对应的控制力和透明度更低；</li>
<li>Fargate 是无服务器的，这种方式是以后的常态；</li>
</ul>
<h4 id="结论-1"><a href="#结论-1" class="headerlink" title="结论"></a>结论</h4><p>如果有时间和预算，并且需要额外的监督和控制，EC2 是更好的选择。如果想要降低成本和减轻负担，Fargate 是个不错的选择。</p>
]]></content>
      <categories>
        <category>aws</category>
      </categories>
      <tags>
        <tag>aws</tag>
      </tags>
  </entry>
  <entry>
    <title>设计模式六大原则</title>
    <url>/2018/01/31/basic-design-pattern-principle/</url>
    <content><![CDATA[<h2 id="单一职责原则"><a href="#单一职责原则" class="headerlink" title="单一职责原则"></a>单一职责原则</h2><p>单一职责原则 - <code>SRP: Single Responsibility Principle</code></p>
<blockquote>
<p>实现类要职责单一。</p>
</blockquote>
<h3 id="单一职责定义"><a href="#单一职责定义" class="headerlink" title="单一职责定义"></a>单一职责定义</h3><p>不要存在多于一个导致类变更的原因。通俗的说，即一个类只负责一项职责。</p>
<h3 id="单一职责问题由来"><a href="#单一职责问题由来" class="headerlink" title="单一职责问题由来"></a>单一职责问题由来</h3><p>类 <code>T</code> 负责两个不同的职责：职责 <code>P1</code>，职责 <code>P2</code>。当由于职责 <code>P1</code> 需求发生改变而需要修改类 <code>T</code> 时，有可能会导致原本运行正常的职责 <code>P2</code> 功能发生故障。</p>
<h3 id="单一职责注意点"><a href="#单一职责注意点" class="headerlink" title="单一职责注意点"></a>单一职责注意点</h3><ul>
<li>可以降低类的复杂度，一个类只负责一项职责，其逻辑肯定要比负责多项职责简单的多</li>
<li>提高类的可读性，提高系统的可维护性</li>
<li>变更引起的风险降低，变更是必然的，如果单一职责原则遵守的好，当修改一个功能时，可以显著降低对其他功能的影响</li>
</ul>
<h2 id="里氏替换原则"><a href="#里氏替换原则" class="headerlink" title="里氏替换原则"></a>里氏替换原则</h2><p>里氏替换原则 - <code>LSP: Liskov Substitution Principle</code></p>
<blockquote>
<p>不要破坏继承体系。</p>
</blockquote>
<h3 id="里氏替换定义"><a href="#里氏替换定义" class="headerlink" title="里氏替换定义"></a>里氏替换定义</h3><p>所有引用基类的地方必须能透明地使用其子类的对象。</p>
<h3 id="里氏替换问题由来"><a href="#里氏替换问题由来" class="headerlink" title="里氏替换问题由来"></a>里氏替换问题由来</h3><p>有一功能 <code>P1</code>，由类 <code>A</code> 完成。现需要将功能 <code>P1</code> 进行扩展，扩展后的功能为 <code>P</code>，其中 <code>P</code> 由原有功能 <code>P1</code> 与新功能 <code>P2</code> 组成。新功能 <code>P</code> 由类 <code>A</code> 的子类 <code>B</code> 来完成，则子类 <code>B</code> 在完成新功能 <code>P2</code> 的同时，有可能会导致原有功能 <code>P1</code> 发生故障。</p>
<h3 id="里氏替换注意点"><a href="#里氏替换注意点" class="headerlink" title="里氏替换注意点"></a>里氏替换注意点</h3><blockquote>
<p>里氏替换原则通俗的来讲就是：子类可以扩展父类的功能，但不能改变父类原有的功能。</p>
</blockquote>
<ul>
<li>子类可以实现父类的抽象方法，但不能覆盖父类的非抽象方法</li>
<li>子类中可以增加自己特有的方法</li>
<li>当子类的方法重载父类的方法时，方法的前置条件（即方法的形参）要比父类方法的输入参数更宽松</li>
<li>当子类的方法实现父类的抽象方法时，方法的后置条件（即方法的返回值）要比父类更严格</li>
</ul>
<h2 id="依赖倒置原则"><a href="#依赖倒置原则" class="headerlink" title="依赖倒置原则"></a>依赖倒置原则</h2><p>依赖倒置原则 - <code>DIP: Dependence Inversion Principle</code></p>
<blockquote>
<p>面向接口编程。</p>
</blockquote>
<h3 id="依赖倒置定义"><a href="#依赖倒置定义" class="headerlink" title="依赖倒置定义"></a>依赖倒置定义</h3><p>高层模块不应该依赖低层模块，二者都应该依赖其抽象；抽象不应该依赖细节，细节应该依赖抽象。</p>
<h3 id="依赖倒置问题由来"><a href="#依赖倒置问题由来" class="headerlink" title="依赖倒置问题由来"></a>依赖倒置问题由来</h3><p>类 <code>A</code> 直接依赖类 <code>B</code>，假如要将类 <code>A</code> 改为依赖类 <code>C</code>，则必须通过修改类 <code>A</code> 的代码来达成。这种场景下，类 <code>A</code> 一般是高层模块，负责复杂的业务逻辑；类 <code>B</code> 和类 <code>C</code> 是低层模块，负责基本的原子操作；假如修改类 <code>A</code>，会给程序带来不必要的风险。</p>
<h3 id="依赖倒置注意点"><a href="#依赖倒置注意点" class="headerlink" title="依赖倒置注意点"></a>依赖倒置注意点</h3><ul>
<li>低层模块尽量都要有抽象类或接口，或者两者都有</li>
<li>变量的声明类型尽量是抽象类或接口</li>
<li>使用继承时遵循里氏替换原则</li>
</ul>
<h2 id="接口隔离原则"><a href="#接口隔离原则" class="headerlink" title="接口隔离原则"></a>接口隔离原则</h2><p>接口隔离原则 - <code>ISP: Interface Segregation Principle</code></p>
<blockquote>
<ul>
<li>设计接口的时候要精简单一</li>
<li>多用组合，少用继承，<code>Has</code> 关系组合，<code>Is</code> 关系继承</li>
</ul>
</blockquote>
<h3 id="接口隔离定义"><a href="#接口隔离定义" class="headerlink" title="接口隔离定义"></a>接口隔离定义</h3><p>客户端不应该依赖它不需要的接口，一个类对另一个类的依赖应该建立在最小的接口上。</p>
<h3 id="接口隔离问题由来"><a href="#接口隔离问题由来" class="headerlink" title="接口隔离问题由来"></a>接口隔离问题由来</h3><p>类 <code>A</code> 通过接口 <code>I</code> 依赖类 <code>B</code>，类 <code>C</code> 通过接口 <code>I</code> 依赖类 <code>D</code>，如果接口 <code>I</code> 对于类 <code>A</code> 和类 <code>B</code> 来说不是最小接口，则类 <code>B</code> 和类 <code>D</code> 必须去实现他们不需要的方法。</p>
<p>将臃肿的接口 <code>I</code> 拆分为独立的几个接口，类 <code>A</code> 和类 <code>C</code> 分别与他们需要的接口建立依赖关系。也就是采用接口隔离原则。</p>
<h3 id="接口隔离注意点"><a href="#接口隔离注意点" class="headerlink" title="接口隔离注意点"></a>接口隔离注意点</h3><ul>
<li>接口尽量小，但是要有限度。对接口进行细化可以提高程序设计灵活性是不争的事实，但是如果过小，则会造成接口数量过多，使设计复杂化。所以一定要适度</li>
<li>为依赖接口的类定制服务，只暴露给调用的类它需要的方法，它不需要的方法则隐藏起来。只有专注地为一个模块提供定制服务，才能建立最小的依赖关系</li>
<li>提高内聚，减少对外交互。使接口用最少的方法去完成最多的事情</li>
</ul>
<h2 id="迪米特法则"><a href="#迪米特法则" class="headerlink" title="迪米特法则"></a>迪米特法则</h2><p>迪米特法则 - <code>LKP: Least Knowledge Principle</code></p>
<blockquote>
<p>降低耦合只与直接的朋友通信。</p>
</blockquote>
<h3 id="迪米特法则定义"><a href="#迪米特法则定义" class="headerlink" title="迪米特法则定义"></a>迪米特法则定义</h3><p>一个对象应该对其他对象保持最少的了解。</p>
<h3 id="迪米特法则问题由来"><a href="#迪米特法则问题由来" class="headerlink" title="迪米特法则问题由来"></a>迪米特法则问题由来</h3><p>类与类之间的关系越密切，耦合度越大，当一个类发生改变时，对另一个类的影响也越大。</p>
<p>尽量降低类与类之间的耦合。</p>
<h3 id="迪米特法则注意点"><a href="#迪米特法则注意点" class="headerlink" title="迪米特法则注意点"></a>迪米特法则注意点</h3><ul>
<li>过分的使用迪米特原则，会产生大量这样的中介和传递类，导致系统复杂度变大</li>
<li>在采用迪米特法则时要反复权衡，既做到结构清晰，又要高内聚低耦合</li>
</ul>
<h2 id="开闭原则"><a href="#开闭原则" class="headerlink" title="开闭原则"></a>开闭原则</h2><p>开闭原则 - <code>OCP: Open Closed Principle</code></p>
<blockquote>
<p>扩展开放，对修改关闭。</p>
</blockquote>
<h3 id="开闭原则定义"><a href="#开闭原则定义" class="headerlink" title="开闭原则定义"></a>开闭原则定义</h3><p>一个软件实体如类 / 模块和函数应该对扩展开放，对修改关闭。</p>
<h3 id="开闭原则问题由来"><a href="#开闭原则问题由来" class="headerlink" title="开闭原则问题由来"></a>开闭原则问题由来</h3><p>在软件的生命周期内，因为变化 / 升级和维护等原因需要对软件原有代码进行修改时，可能会给旧代码中引入错误，也可能会使我们不得不对整个功能进行重构，并且需要原有代码经过重新测试。</p>
<p>当软件需要变化时，尽量通过扩展软件实体的行为来实现变化，而不是通过修改已有的代码来实现变化。</p>
<h3 id="开闭原则注意点"><a href="#开闭原则注意点" class="headerlink" title="开闭原则注意点"></a>开闭原则注意点</h3><ul>
<li>用抽象构建框架，用实现扩展细节</li>
<li>抽象灵活性好，适应性广，只要抽象的合理，可以基本保持软件架构的稳定</li>
<li>而软件中易变的细节，我们用从抽象派生的实现类来进行扩展，当软件需要发生变化时，我们只需要根据需求重新派生一个实现类来扩展就可以了</li>
</ul>
]]></content>
      <categories>
        <category>basic</category>
      </categories>
      <tags>
        <tag>basic</tag>
      </tags>
  </entry>
  <entry>
    <title>浅谈 RESTful API</title>
    <url>/2018/04/22/basic-restful-api/</url>
    <content><![CDATA[<h1 id="什么是-RESTful"><a href="#什么是-RESTful" class="headerlink" title="什么是 RESTful"></a>什么是 RESTful</h1><blockquote>
<ul>
<li><a href="https://github.com/aisuhua/restful-api-design-references">RESTful API 设计参考文献列表</a></li>
<li><a href="http://www.restapitutorial.com/lessons/whatisrest.html">What Is REST?</a></li>
</ul>
</blockquote>
<p><code>RESTful</code> 是一种软件设计风格，由 <a href="https://en.wikipedia.org/wiki/Roy_Fielding">Roy Thomas Fielding</a> 在他 <code>2000</code> 年的<a href="http://www.ics.uci.edu/~fielding/pubs/dissertation/top.htm">论文</a>中提出，<code>Fielding</code> 将他对互联网软件的架构原则，定名为 <code>REST</code>，即 <code>Representational State Transfer</code> 的缩写，译为表现层状态转化，也可理解为用 <code>URL</code> 定位资源，用 <code>HTTP</code> 方法描述操作。</p>
<p><code>REST</code> 的核心是可编辑的资源及其集合，用符合 <code>Atom</code> 文档标准的 <code>Feed</code> 和 <code>Entry</code> 表示。每个资源或者集合有一个惟一的 <code>URI</code>。系统以资源为中心，构建并提供一系列的 <code>Web</code> 服务。<code>REST</code> 的基本概念和原则包括：系统上的所有事物都被抽象为资源；每个资源对应唯一的资源标识；对资源的操作不会改变资源标识本身；所有的操作都是无状态的；等等。</p>
<h1 id="为何要用-RESTful"><a href="#为何要用-RESTful" class="headerlink" title="为何要用 RESTful"></a>为何要用 RESTful</h1><p>按照 <code>RESTful</code> 架构可以充分的利用 <code>HTTP</code> 协议带给我们的各种功能，算是对 <code>HTTP</code> 协议使用的最佳实践，还有一点就是可以使软件架构设计更加清晰，可维护性更好</p>
<h1 id="如何做-RESTful"><a href="#如何做-RESTful" class="headerlink" title="如何做 RESTful"></a>如何做 RESTful</h1><h2 id="RESTful-架构"><a href="#RESTful-架构" class="headerlink" title="RESTful 架构"></a>RESTful 架构</h2><p>如果一个架构符合 <code>REST</code> 原则，就称它为 <code>RESTful</code> 架构</p>
<p>从以下三个方面理解 <code>RESTful</code> 架构：</p>
<ul>
<li>资源 - <code>Resources</code>：所谓资源，就是网络上的一个实体，或者说是网络上的一个具体信息</li>
<li>表现层 - <code>Representation</code>：资源是一种信息实体，它可以有多种外在表现形式。我们把『资源』具体呈现出来的形式，叫做它的『表现层』</li>
<li>状态转化 - <code>State Transfer</code>：互联网通信协议 <code>HTTP协议</code>，是一个无状态协议。这意味着，所有的状态都保存在服务器端。因此，如果客户端想要操作服务器，必须通过某种手段，让服务器端发生『状态转化 - <code>State Transfer</code>』。而这种转化是建立在表现层之上的，所以就是『表现层状态转化』</li>
</ul>
<p>也主就是说，遵循 <code>REST</code> 原则，设计出来的一个架构就称为 <code>RESTful</code> 架构，比如：<code>GitHub API</code> 就是一个典型的 <code>RESTful</code> 架构</p>
<h2 id="RESTful-API-设计"><a href="#RESTful-API-设计" class="headerlink" title="RESTful API 设计"></a>RESTful API 设计</h2><h3 id="使用-URL-定位资源"><a href="#使用-URL-定位资源" class="headerlink" title="使用 URL 定位资源"></a>使用 URL 定位资源</h3><blockquote>
<p><a href="https://developer.github.com/v3/">GitHub REST API v3</a></p>
</blockquote>
<p>很大程度上，定义的 <code>API</code> 地址要对程序员友好，并且能在浏览器地址栏容易输入。是的，这两个指标也能检验出那些合格的 <code>API</code> 设计者，我就是这样认为的</p>
<ul>
<li>应该将 <code>API</code> 部署在专用域名之下，比如：<code>api.example.com</code></li>
<li>不用大写</li>
<li>用中杠 <code>-</code> 而不是 <code>_</code></li>
<li>参数列表要 <code>encode</code></li>
<li><code>URI</code> 中尽量使用名词而不是动词</li>
<li><code>URI</code> 中的名词表示资源集合，使用复数形式</li>
<li>虽然 <code>/</code> 在 <code>URI</code> 中表达层级，但是避免为了追求 <code>REST</code> 导致层级过深，适当使用参数表示，比如：<code>GET /animals?zoo=1&amp;area=3&amp;page=1</code></li>
</ul>
<h3 id="版本控制"><a href="#版本控制" class="headerlink" title="版本控制"></a>版本控制</h3><ul>
<li>将版本号直接加入 <code>URL</code> 中</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">https://api.example.com/v1</span><br><span class="line">https://api.example.com/v2</span><br></pre></td></tr></table></figure>
<ul>
<li>使用 <code>HTTP</code> 请求头的 <code>Accept</code> 字段进行区分</li>
</ul>
<p>在这种方式中，客户端在 <code>Accept Header</code> 中存放 <code>Accept: application/vnd.example.v1+json</code>，服务器自定义 <code>Header</code> 返回当前版本信息 <code>X-Example-Media-Type: example.v3; format=json</code></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">https://api.example.com/</span><br><span class="line">    Accept: application/vnd.example.v1+json</span><br><span class="line">    Accept: application/vnd.example.v2+json</span><br></pre></td></tr></table></figure>
<p>请求 <code>GitHub</code> 查看头中自定义的 <code>X-GitHub-Media-Type</code></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ curl -i https://api.github.com/users/octocat/orgs</span><br><span class="line">HTTP/1.1 200 OK</span><br><span class="line">Date: Sun, 22 Apr 2018 03:43:57 GMT</span><br><span class="line">Content-Type: application/json; charset=utf-8</span><br><span class="line">Content-Length: 5</span><br><span class="line">Server: GitHub.com</span><br><span class="line">Status: 200 OK</span><br><span class="line">X-RateLimit-Limit: 60 <span class="comment"># 最大访问次数</span></span><br><span class="line">X-RateLimit-Remaining: 50 <span class="comment"># 剩余的访问次数</span></span><br><span class="line">X-RateLimit-Reset: 1524369179 <span class="comment"># 到该时间点，访问次数会重置为 X-RateLimit-Limit</span></span><br><span class="line">Cache-Control: public, max-age=60, s-maxage=60</span><br><span class="line">Vary: Accept</span><br><span class="line">ETag: <span class="string">&quot;98f0c1b396a4e5d54f4d5fe561d54b44&quot;</span></span><br><span class="line">X-GitHub-Media-Type: github.v3; format=json <span class="comment"># GitHub 服务端自定义 Header 返回当前版本信息</span></span><br><span class="line">Access-Control-Expose-Headers: ETag, Link, Retry-After, X-GitHub-OTP, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Reset, X-OAuth-Scopes, X-Accepted-OAuth-Scopes, X-Poll-Interval</span><br><span class="line">Access-Control-Allow-Origin: *</span><br><span class="line">Strict-Transport-Security: max-age=31536000; includeSubdomains; preload</span><br><span class="line">X-Frame-Options: deny</span><br><span class="line">X-Content-Type-Options: nosniff</span><br><span class="line">X-XSS-Protection: 1; mode=block</span><br><span class="line">Referrer-Policy: origin-when-cross-origin, strict-origin-when-cross-origin</span><br><span class="line">Content-Security-Policy: default-src <span class="string">&#x27;none&#x27;</span></span><br><span class="line">X-Runtime-rack: 0.010912</span><br><span class="line">Vary: Accept-Encoding</span><br><span class="line">X-GitHub-Request-Id: E5BC:17C8:C2B264:1064F09:5ADC04FD</span><br><span class="line"></span><br><span class="line">[</span><br><span class="line"></span><br><span class="line">]</span><br></pre></td></tr></table></figure>
<p>请求 <code>GitHub</code> 接口超过限制次数后的响应</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">// 当请求到第 61 次时的响应结果</span><br><span class="line">$ <span class="keyword">for</span> (( i=0; i&lt;61; i=i+1 )); <span class="keyword">do</span> curl -i https://api.github.com/users/octocat/orgs; <span class="keyword">done</span></span><br><span class="line">HTTP/1.1 403 Forbidden <span class="comment"># 服务器拒绝了</span></span><br><span class="line">Date: Sun, 22 Apr 2018 04:04:15 GMT</span><br><span class="line">Content-Type: application/json; charset=utf-8</span><br><span class="line">Content-Length: 258</span><br><span class="line">Server: GitHub.com</span><br><span class="line">Status: 403 Forbidden <span class="comment"># 返回的状态码</span></span><br><span class="line">X-RateLimit-Limit: 60</span><br><span class="line">X-RateLimit-Remaining: 0 <span class="comment"># 剩余次数为 0 了</span></span><br><span class="line">X-RateLimit-Reset: 1524372880</span><br><span class="line">X-GitHub-Media-Type: github.v3; format=json</span><br><span class="line">Access-Control-Expose-Headers: ETag, Link, Retry-After, X-GitHub-OTP, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Reset, X-OAuth-Scopes, X-Accepted-OAuth-Scopes, X-Poll-Interval</span><br><span class="line">Access-Control-Allow-Origin: *</span><br><span class="line">Strict-Transport-Security: max-age=31536000; includeSubdomains; preload</span><br><span class="line">X-Frame-Options: deny</span><br><span class="line">X-Content-Type-Options: nosniff</span><br><span class="line">X-XSS-Protection: 1; mode=block</span><br><span class="line">Referrer-Policy: origin-when-cross-origin, strict-origin-when-cross-origin</span><br><span class="line">Content-Security-Policy: default-src <span class="string">&#x27;none&#x27;</span></span><br><span class="line">X-Runtime-rack: 0.012239</span><br><span class="line">X-GitHub-Request-Id: E756:2E0E:75FBFF:A0DA73:5ADC09BF</span><br><span class="line"></span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">&quot;message&quot;</span>: <span class="string">&quot;API rate limit exceeded for 221.223.47.129. (But here&#x27;s the good news: Authenticated requests get a higher rate limit. Check out the documentation for more details.)&quot;</span>,</span><br><span class="line">  <span class="string">&quot;documentation_url&quot;</span>: <span class="string">&quot;https://developer.github.com/v3/#rate-limiting&quot;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<ul>
<li>自定义 <code>Header</code> 头</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">X-Api-Version: 1</span><br></pre></td></tr></table></figure>
<h3 id="使用-HTTP-方法"><a href="#使用-HTTP-方法" class="headerlink" title="使用 HTTP 方法"></a>使用 HTTP 方法</h3><div class="note info">
            <ul><li>安全性：不会改变资源状态，可以理解为只读的</li><li>幂等性：执行 <code>1</code> 次和执行 <code>N</code> 次，对资源状态改变的效果是等价的，也就是说无论你执行多少次重复的操作都不会给资源造成变更</li></ul>
          </div>
<table>
<thead>
<tr>
<th>方法</th>
<th>描述</th>
<th>是否安全</th>
<th>是否幂等</th>
</tr>
</thead>
<tbody>
<tr>
<td><code>GET</code></td>
<td>获取资源，单个或多个</td>
<td>是</td>
<td>是</td>
</tr>
<tr>
<td><code>POST</code></td>
<td>创建资源</td>
<td>否</td>
<td>否</td>
</tr>
<tr>
<td><code>PUT</code></td>
<td>更新资源，客户端提供完整的资源数据</td>
<td>否</td>
<td>是</td>
</tr>
<tr>
<td><code>PATCH</code></td>
<td>更新资源，客户端提供部分的资源数据</td>
<td>否</td>
<td>否</td>
</tr>
<tr>
<td><code>DELETE</code></td>
<td>删除资源</td>
<td>否</td>
<td>是</td>
</tr>
</tbody>
</table>
<h3 id="使用-HTTP-响应代码"><a href="#使用-HTTP-响应代码" class="headerlink" title="使用 HTTP 响应代码"></a>使用 HTTP 响应代码</h3><h4 id="请求成功"><a href="#请求成功" class="headerlink" title="请求成功"></a>请求成功</h4><table>
<thead>
<tr>
<th>状态码</th>
<th>描述</th>
</tr>
</thead>
<tbody>
<tr>
<td><code>200 OK</code></td>
<td>已创建，请求成功且服务器已创建了新的资源，也可以被用在不创建新资源的 <code>POST</code> 操作上</td>
</tr>
<tr>
<td><code>201 Created</code></td>
<td>对象创建成功并返回相应资源数据，如：<code>POST</code> 成功；创建完成后响应头中应该携带头标 <code>Location</code>，指向新建资源的地址</td>
</tr>
<tr>
<td><code>202 Accepted</code></td>
<td>服务器接受了请求，但是还未处理，响应中应该包含相应的指示信息，告诉客户端该去哪里查询关于本次请求的信息</td>
</tr>
<tr>
<td><code>204 No Content</code></td>
<td>请求执行成功，不返回相应资源数据，如：<code>PATCH</code>、<code>DELETE</code> 成功</td>
</tr>
</tbody>
</table>
<h4 id="重定向"><a href="#重定向" class="headerlink" title="重定向"></a>重定向</h4><table>
<thead>
<tr>
<th>状态码</th>
<th>说明</th>
</tr>
</thead>
<tbody>
<tr>
<td><code>301 Moved Permanently</code></td>
<td>被请求的资源已永久移动到新位置</td>
</tr>
<tr>
<td><code>302 Found</code></td>
<td>请求的资源现在临时从不同的 <code>URI</code> 响应请求</td>
</tr>
<tr>
<td><code>303 See Other</code></td>
<td>对应当前请求的响应可以在另一个 <code>URI</code> 上被找到，客户端应该使用 <code>GET</code> 方法进行请求。比如在创建已经被创建的资源时，可以返回 <code>303</code></td>
</tr>
<tr>
<td><code>307 Temporary Redirect</code></td>
<td>对应当前请求的响应可以在另一个 <code>URI</code> 上被找到，客户端应该保持原有的请求方法进行请求</td>
</tr>
</tbody>
</table>
<h4 id="条件请求"><a href="#条件请求" class="headerlink" title="条件请求"></a>条件请求</h4><table>
<thead>
<tr>
<th>状态码</th>
<th>说明</th>
</tr>
</thead>
<tbody>
<tr>
<td><code>304 Not Modified</code></td>
<td>资源自从上次请求后没有再次发生变化，主要使用场景在于实现数据缓存</td>
</tr>
<tr>
<td><code>409 Conflict</code></td>
<td>请求操作和资源的当前状态存在冲突。主要使用场景在于实现并发控制</td>
</tr>
<tr>
<td><code>412 Precondition Failed</code></td>
<td>服务器在验证在请求的头字段中给出先决条件时，没能满足其中的一个或多个。主要使用场景在于实现并发控制</td>
</tr>
</tbody>
</table>
<h4 id="客户端错误"><a href="#客户端错误" class="headerlink" title="客户端错误"></a>客户端错误</h4><table>
<thead>
<tr>
<th>状态码</th>
<th>说明</th>
</tr>
</thead>
<tbody>
<tr>
<td><code>400 Bad Request</code></td>
<td>求体包含语法错误</td>
</tr>
<tr>
<td><code>401 Unauthorized</code></td>
<td>未授权，请求要求进行身份验证，如果服务器就算是身份验证后也不允许客户访问资源，应该响应 <code>403 Forbidden</code>。如果请求里有 <code>Authorization</code> 头，那么必须返回一个 <a href="https://tools.ietf.org/html/rfc7235#section-4.1"><code>WWW-Authenticate</code></a> 头</td>
</tr>
<tr>
<td><code>403 Forbidden</code></td>
<td>已禁止，服务器拒绝请求</td>
</tr>
<tr>
<td><code>404 Not Found</code></td>
<td>未找到，请求一个不存在的资源</td>
</tr>
<tr>
<td><code>405 Method Not Allowed</code></td>
<td>方法禁用，禁用请求中所指定的方法</td>
</tr>
<tr>
<td><code>406 Not Acceptable</code></td>
<td>服务器不支持客户端请求的内容格式，但响应里会包含服务端能够给出的格式的数据，并在 <code>Content-Type</code> 中声明格式名称</td>
</tr>
<tr>
<td><code>410 Gone</code></td>
<td>已删除，如果请求的资源已被永久删除，那么，服务器会返回此响应</td>
</tr>
<tr>
<td><code>413 Payload Too Large</code></td>
<td><code>POST</code> 或者 <code>PUT</code> 请求的消息实体过大</td>
</tr>
<tr>
<td><code>415 Unsupported Media Type</code></td>
<td>服务器不支持请求中提交的数据的格式</td>
</tr>
<tr>
<td><code>422 Unprocessable Entity</code></td>
<td>请求格式正确，但是由于含有语义错误，无法响应</td>
</tr>
<tr>
<td><code>428 Precondition Required</code></td>
<td>要求先决条件，如果想要请求能成功必须满足一些预设的条件</td>
</tr>
<tr>
<td><code>429 Too Many Requests</code></td>
<td>由于请求频次达到上限而被拒绝访问</td>
</tr>
</tbody>
</table>
<h4 id="服务端错误"><a href="#服务端错误" class="headerlink" title="服务端错误"></a>服务端错误</h4><table>
<thead>
<tr>
<th>状态码</th>
<th>说明</th>
</tr>
</thead>
<tbody>
<tr>
<td><code>500 Internal Server Error</code></td>
<td>服务器遇到了一个未曾预料的状况，导致了它无法完成对请求的处理</td>
</tr>
<tr>
<td><code>501 Not Implemented</code></td>
<td>服务器不支持当前请求所需要的某个功能</td>
</tr>
<tr>
<td><code>502 Bad Gateway</code></td>
<td>作为网关或者代理工作的服务器尝试执行请求时，从上游服务器接收到无效的响应</td>
</tr>
<tr>
<td><code>503 Service Unavailable</code></td>
<td>由于临时的服务器维护或者过载，服务器当前无法处理请求</td>
</tr>
</tbody>
</table>
<h3 id="响应数据格式"><a href="#响应数据格式" class="headerlink" title="响应数据格式"></a>响应数据格式</h3><blockquote>
<p><a href="https://www.zhihu.com/question/25636060">为什么都反对 XML 而支持使用 JSON？</a></p>
</blockquote>
<blockquote>
<p>当然轮子哥是这样说的『在我长时间使用 <code>XML</code> 和 <code>JSON</code> 的过程中我发现，其实他们是不可互相替代的。我们只能说如今大部分适合 <code>XML</code> 的程序要么都写完了要么都不时髦了，现在需要 <code>JSON</code> 的还没写的程序多一点』</p>
</blockquote>
<p><code>GitHub</code> 是在请求的 <code>body</code> 体中使用 <code>JSON</code> 格式来返回数据的</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ curl -i https://api.github.com -u foo:bar</span><br><span class="line"></span><br><span class="line">...</span><br><span class="line"></span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">&quot;message&quot;</span>: <span class="string">&quot;Bad credentials&quot;</span>,</span><br><span class="line">  <span class="string">&quot;documentation_url&quot;</span>: <span class="string">&quot;https://developer.github.com/v3&quot;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="编写文档"><a href="#编写文档" class="headerlink" title="编写文档"></a>编写文档</h3><p>一个好的文档也反应出接口开发者的素养（当然那些赶项目进度的除外，笔者确实也经历过这种场景，项目急吼吼的上，就感觉明天做不出来，后天公司就要倒闭的这种，不要说写文档，就自己写的代码 <code>Review</code> 一下都是浪费时间。如果条件允许，我个人还是愿意把程序和文档都写好的）。当然，通过这些，你也看到了我的素养确实也不高，找了一个赶进度的借口不写文档，你愿意这么理解我也就不说什么了</p>
<p>文档的一些原则</p>
<ul>
<li>每一个接口的请求参数，每个参数的类型限制，是否必填，可选的值等都进行明确</li>
<li>响应结果集中的每个参数都有明确的解释</li>
<li>对于特定场景和专门适配的接口，提供详细的说明，怎么的场景下调用之类等等</li>
</ul>
<p>显然，这么宏大的标题可不是写一篇文章就能搞定的，以上这些就是我对 <code>RESTful API</code> 的一些理解和总结，后期会补充和完善</p>
<p>未完待续…</p>
]]></content>
      <categories>
        <category>basic</category>
      </categories>
      <tags>
        <tag>basic</tag>
      </tags>
  </entry>
  <entry>
    <title>TCP 的三次握手</title>
    <url>/2018/05/12/basic-tcp-three-handshake/</url>
    <content><![CDATA[<h1 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h1><h2 id="TCP-协议"><a href="#TCP-协议" class="headerlink" title="TCP 协议"></a>TCP 协议</h2><p>传输控制协议 - <code>Transmission Control Protocol</code>，缩写为 <code>TCP</code>，是一种面向连接的、可靠的、基于字节流的传输层通信协议，由 <code>IETF</code> 的 <code>RFC 793</code> 定义。在简化的计算机网络 <code>OSI</code> 模型中，它完成第四层传输层所指定的功能，用户数据包协议 <code>UDP</code> 是同一层内另一个重要的传输协议。</p>
<h2 id="运行方式"><a href="#运行方式" class="headerlink" title="运行方式"></a>运行方式</h2><p><code>TCP</code> 协议的运行可划分为三个阶段：连接创建（<code>connection establishment</code>）、数据传送（<code>data transfer</code>）和连接终止<code>connection termination</code>。操作系统将 <code>TCP</code> 连接抽象为套接字表示的本地端点（<code>local end-point</code>），作为编程接口给程序使用。在 <code>TCP</code> 连接的生命期内，本地端点要经历一系列的状态改变。</p>
<h2 id="TCP-特性"><a href="#TCP-特性" class="headerlink" title="TCP 特性"></a>TCP 特性</h2><ul>
<li><code>TCP</code> 提供一种面向连接的、可靠的字节流服务</li>
<li>在一个 <code>TCP</code> 连接中，仅有两方进行彼此通信。广播和多播不能用于 <code>TCP</code></li>
<li><code>TCP</code> 使用校验和，确认和重传机制来保证可靠传输</li>
<li><code>TCP</code> 给数据分节进行排序，并使用累积确认保证数据的顺序不变和非重复</li>
<li><code>TCP</code> 使用滑动窗口机制来实现流量控制，通过动态改变窗口的大小进行拥塞控制</li>
</ul>
<div class="note danger">
            <p><code>TCP</code> 并不能保证数据一定会被对方接收到。<code>TCP</code> 能够做到的是，如果有可能，就把数据递送到接收方，否则就（通过放弃重传并且中断连接这一手段）通知用户。因此准确说 <code>TCP</code> 也不是 <code>100%</code> 可靠的协议，它所能提供的是数据的可靠递送或故障的可靠通知。</p>
          </div>
<h2 id="OSI-模型"><a href="#OSI-模型" class="headerlink" title="OSI` 模型"></a>OSI` 模型</h2><p>开放式系统互联通信参考模型 - <code>Open System Interconnection Reference Model</code>，缩写为 <code>OSI</code>。一种概念模型，由国际标准化组织提出，一个试图使各种计算机在世界范围内互连为网络的标准框架。定义于 <code>ISO/IEC 7498-1</code></p>
<table>
<thead>
<tr>
<th>OSI 层（从上到下）</th>
<th>功能</th>
<th>协议</th>
</tr>
</thead>
<tbody>
<tr>
<td>应用层 - <code>Application Layer</code></td>
<td>提供为应用软件而设的接口，以设置与另一应用软件之间的通信</td>
<td><code>HTTP(S)</code>、<code>FTP</code>、<br><code>TELNET</code>、<code>SSH</code>、<br><code>SMTP</code>、<code>POP3</code>、<br><code>NFS</code></td>
</tr>
<tr>
<td>表示层 - <code>Presentation Layer</code></td>
<td>把数据转换为能与接收者的系统格式兼容并适合传输的格式，以确保以一个系统应用层发送的信息可以被另一个系统应用层识别，即定义数据格式及加密</td>
<td>无</td>
</tr>
<tr>
<td>会话层 - <code>Session Layer</code></td>
<td>负责在数据传输中设置和维护电脑网络中两台电脑之间的通信连接，建立、管理和终止表示层与实体之间的通信会话</td>
<td>无</td>
</tr>
<tr>
<td>传输层 - <code>Transport Layer</code></td>
<td>提供可靠的端到端的网络数据流服务</td>
<td><code>TCP</code>、<code>UDP</code></td>
</tr>
<tr>
<td>网络层 - <code>Network Layer</code></td>
<td>决定数据的路径选择和转寄，将网络表头（<code>NH</code>）加至数据包，以形成分组。在源和终点之间建立连接</td>
<td><code>IPv4</code>、<code>IPv6</code></td>
</tr>
<tr>
<td>数据链路层 - <code>Data Link Layer</code></td>
<td>不同的数据链路层定义了不同的网络和协议，包括网络寻址、错误侦测和改错。分为逻辑链路控制和介质访问控制两个子层</td>
<td><code>ARP</code>、<code>RARP</code></td>
</tr>
<tr>
<td>物理层 - <code>Physical Layer</code></td>
<td>局部局域网上传送数据帧。将信息编码成电流脉冲或其它信号用于网上传输</td>
<td><code>IEEE 802</code>、<br><code>IEEE 802.2</code></td>
</tr>
</tbody>
</table>
<p><img src="https://inotes.oss-cn-beijing.aliyuncs.com/network/201812/basic-osi-model.gif" alt="basic-osi-model.gif"></p>
<h1 id="TCP-报文格式"><a href="#TCP-报文格式" class="headerlink" title="TCP 报文格式"></a>TCP 报文格式</h1><h2 id="序号"><a href="#序号" class="headerlink" title="序号"></a>序号</h2><p>序号 - <code>Sequence Number</code>：<code>Seq</code> 序号，占 <code>32</code> 位，用来标识从 <code>TCP</code> 源端向目的端发送的字节流，发起方发送数据时对此进行标记。</p>
<h2 id="确认序号"><a href="#确认序号" class="headerlink" title="确认序号"></a>确认序号</h2><p>确认序号，也称应答号 - <code>Acknowledgment Number</code>：<code>Ack</code> 序号，占 <code>32</code> 位，只有 <code>ACK</code> 标志位为 <code>1</code> 时，确认序号字段才有效，<code>Ack=Seq+1</code></p>
<h2 id="标志位"><a href="#标志位" class="headerlink" title="标志位"></a>标志位</h2><ul>
<li><code>SYN</code> - <code>Synchronize Sequence Numbers</code>，同步标志：发起一起新连接，该标志仅在三次握手建立 <code>TCP</code> 连接时有效</li>
<li><code>ACK</code> - <code>Acknowledgement Number</code>，确认标志：确认序号有效</li>
<li><code>RST</code> - <code>Reset</code>，复位标志：重置连接</li>
<li><code>URG</code> - <code>Urgent Pointer</code>，紧急指针标志：紧急指针有效</li>
<li><code>PSH</code> - <code>Push</code>，推标志：接收方应该尽快将这个报文交给应用层</li>
<li><code>FIN</code> - <code>Finish</code>，结束标志：释放一个连接</li>
</ul>
<h1 id="抓包工具"><a href="#抓包工具" class="headerlink" title="抓包工具"></a>抓包工具</h1><blockquote>
<p><a href="https://www.wireshark.org/#download"><code>Wireshark</code></a></p>
</blockquote>
<h2 id="封包详细信息"><a href="#封包详细信息" class="headerlink" title="封包详细信息"></a>封包详细信息</h2><ul>
<li><code>Frame</code>：物理层的数据帧概况</li>
<li><code>Ethernet II</code>：数据链路层以太网帧头部信息</li>
<li><code>Internet Protocol Version 4</code>：互联网层 <code>IP</code> 包头部信息</li>
<li><code>Transmission Control Protocol</code>：传输层T的数据段头部信息，此处是 <code>TCP</code></li>
<li><code>Hypertext Transfer Protocol</code>：应用层的信息，此处是 <code>HTTP</code></li>
</ul>
<h2 id="Wireshark-与对应的-OSI-模型"><a href="#Wireshark-与对应的-OSI-模型" class="headerlink" title="Wireshark 与对应的 OSI 模型"></a>Wireshark 与对应的 OSI 模型</h2><table>
<thead>
<tr>
<th><code>Wireshark</code></th>
<th><code>OSI</code></th>
<th><code>Protocol</code></th>
</tr>
</thead>
<tbody>
<tr>
<td><code>Hypertext Transfer Protocol</code></td>
<td>应用层 - <code>Application Layer</code></td>
<td><code>HTTP</code>、<code>FTP</code>、<br><code>TFTP</code>、<code>SMTP</code>、<br><code>SNMP</code>、<code>DNS</code></td>
</tr>
<tr>
<td><code>Transmission Control Protocol</code></td>
<td>传输层 - <code>Transport Layer</code></td>
<td><code>TCP</code>、<code>UDP</code>，<br>数据包一旦离开网卡即进入网络传输层</td>
</tr>
<tr>
<td><code>Internet Protocol Version 4</code></td>
<td>网络层 - <code>Network Layer</code></td>
<td><code>ICMP</code>、<code>IGMP</code>、<br><code>IPv4/IPv6</code>、<br><code>ARP</code>、<code>RARP</code></td>
</tr>
<tr>
<td><code>Ethernet II</code></td>
<td>数据链路层 - <code>Data Link Layer</code></td>
<td></td>
</tr>
<tr>
<td><code>Frame</code></td>
<td>物理层 - <code>Physical Layer</code></td>
<td><br></td>
</tr>
</tbody>
</table>
<h1 id="三次握手"><a href="#三次握手" class="headerlink" title="三次握手"></a>三次握手</h1><blockquote>
<ul>
<li><a href="https://www.zhihu.com/question/24853633">TCP 为什么是三次握手，而不是两次或四次？</a></li>
<li>不要将确认序号 <code>Ack</code> 与标志位中的 <code>ACK</code> 搞混了</li>
<li>确认方 <code>Ack</code> 等于发起方 <code>Seq+1</code>，两端配对</li>
</ul>
</blockquote>
<p><img src="https://inotes.oss-cn-beijing.aliyuncs.com/network/201812/basic-tcp-handshake.gif" alt="建立 TCP 需要三次握手才能建立，而断开连接则需要四次握手"></p>
<h2 id="过滤请求"><a href="#过滤请求" class="headerlink" title="过滤请求"></a>过滤请求</h2><p><img src="https://inotes.oss-cn-beijing.aliyuncs.com/network/201812/basic-wireshark-filter.jpg" alt="basic-wireshark-filter.jpg"></p>
<h2 id="定位到三次握手的-TCP-流"><a href="#定位到三次握手的-TCP-流" class="headerlink" title="定位到三次握手的 TCP 流"></a>定位到三次握手的 TCP 流</h2><p><img src="https://inotes.oss-cn-beijing.aliyuncs.com/network/201812/basic-wireshark-three-handshake.jpg" alt="basic-wireshark-three-handshake.jpg"></p>
<h2 id="三次握手详情"><a href="#三次握手详情" class="headerlink" title="三次握手详情"></a>三次握手详情</h2><h3 id="第一次握手"><a href="#第一次握手" class="headerlink" title="第一次握手"></a>第一次握手</h3><p><img src="https://inotes.oss-cn-beijing.aliyuncs.com/network/201812/basic-wireshark-first.jpg" alt="basic-wireshark-first.jpg"></p>
<p><code>Client</code> 将标志位 <code>SYN</code> 置为 <code>1</code>，随机产生一个值 <code>Seq=X</code>，并将该数据包发送给 <code>Server</code>，<code>Client</code> 进入 <code>SYN_SENT</code> 状态，等待 <code>Server</code> 确认</p>
<h3 id="第二次握手"><a href="#第二次握手" class="headerlink" title="第二次握手"></a>第二次握手</h3><p><img src="https://inotes.oss-cn-beijing.aliyuncs.com/network/201812/basic-wireshark-second.jpg" alt="basic-wireshark-second.jpg"></p>
<p><code>Server</code> 收到数据包后由标志位 <code>SYN</code> 为 <code>1</code> 知道 <code>Client</code> 请求建立连接，<code>Server</code> 将标志位 <code>SYN</code> 和 <code>ACK</code> 都置为 <code>1</code>，<code>Ack=X+1</code>，随机产生一个值 <code>Seq=Y</code>，并将该数据包发送给 <code>Client</code> 以确认连接请求，<code>Server</code> 进入 <code>SYN_RCVD</code> 状态</p>
<h3 id="第三次握手"><a href="#第三次握手" class="headerlink" title="第三次握手"></a>第三次握手</h3><p><img src="https://inotes.oss-cn-beijing.aliyuncs.com/network/201812/basic-wireshark-third.jpg" alt="basic-wireshark-third.jpg"></p>
<p><code>Client</code> 收到确认后，检查 <code>Ack</code> 是否为 <code>X+1</code>，<code>ACK</code> 是否置为 <code>1</code>，如果正确则将标志位 <code>ACK</code> 置为 <code>1</code>，<code>Ack=Y+1</code>，并将数据包发送给 <code>Server</code>，<code>Server</code> 检查 <code>Ack</code> 是否为 <code>Y+1</code>，<code>ACK</code> 是否为 <code>1</code>，如果正确则连接建立成功，<code>Client</code> 和 <code>Server</code> 进入 <code>ESTABLISHED</code> 状态，完成三次握手，随后 <code>Client</code> 与 <code>Server</code> 之间可以开始传输数据了</p>
<h1 id="SYN-攻击"><a href="#SYN-攻击" class="headerlink" title="SYN 攻击"></a>SYN 攻击</h1><p>在三次握手过程中，<code>Server</code> 发送 <code>SYN-ACK</code> 之后，收到 <code>Client</code> 的 <code>ACK</code> 之前的 <code>TCP</code> 连接称为半连接（<code>half-open connect</code>），此时 <code>Server</code> 处于 <code>SYN_RCVD</code> 状态，当收到 <code>ACK</code> 后，<code>Server</code> 转入 <code>ESTABLISHED</code> 状态. <code>SYN</code> 攻击就是 <code>Client</code> 在短时间内伪造大量不存在的 <code>IP</code> 地址，并向 <code>Server</code> 不断地发送 <code>SYN</code> 包，<code>Server</code> 回复确认包，并等待 <code>Client</code> 的确认，由于源地址是不存在的，因此，<code>Server</code> 需要不断重发直至超时，这些伪造的 <code>SYN</code> 包将长时间占用未连接队列，导致正常的 <code>SYN</code> 请求因为队列满而被丢弃，从而引起网络堵塞甚至系统瘫痪. <code>SYN</code> 攻击时一种典型的 <code>DDOS</code> 攻击，检测 <code>SYN</code> 攻击的方式非常简单，即当 <code>Server</code> 上有大量半连接状态且源 <code>IP</code> 地址是随机的，则可以断定遭到 <code>SYN</code> 攻击了。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">// 查看 SYN_RECV 状态</span><br><span class="line">$ netstat -nap | grep SYN_RECV</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>basic</category>
      </categories>
      <tags>
        <tag>basic</tag>
      </tags>
  </entry>
  <entry>
    <title>技术术语知多少</title>
    <url>/2019/12/05/basic-technical-terms/</url>
    <content><![CDATA[<p><img src="/images/2019/201912051818.jpeg" alt="201912051818.jpeg"></p>
<p>🧸 你是否和我一样在看一些技术文章时，作者通篇把一些技术名词缩写化，碰到这种要么查阅要么跳过。高频出现的可能还能猜个大概，但是总有那么一些是猜不着，记不住，没见过的，正如很多 Linux 命令或者 Git 命令一样，需要弄个印有命令大全的桌面或者鼠标垫以备不时之需。如果大脑是一块内存，我当然需要一块很大的硬盘去记录内存装载不了的东西，譬如，把这些记不住的东西记录起来。</p>
<span id="more"></span>
<h1 id="基本"><a href="#基本" class="headerlink" title="基本"></a>基本</h1><table>
<thead>
<tr>
<th>简称</th>
<th>全称</th>
<th>描述</th>
</tr>
</thead>
<tbody>
<tr>
<td><code>ANSI</code></td>
<td><code>American National Standards Institute</code></td>
<td>美国国家标准学会</td>
</tr>
<tr>
<td><code>ASCII</code></td>
<td><code>American Standard Code for Information Interchange</code></td>
<td>美国信息交换标准代码</td>
</tr>
<tr>
<td><code>CPU</code></td>
<td><code>Central Processing Unit</code></td>
<td>中央处理器</td>
</tr>
<tr>
<td><code>EBCDIC</code></td>
<td><code>Extended Binary Coded Decimal Interchange Code</code></td>
<td>扩增二进式十进交换码</td>
</tr>
<tr>
<td><code>RAM</code></td>
<td><code>Random Access Memory</code></td>
<td>随机存取存储器</td>
</tr>
<tr>
<td><code>ROM</code></td>
<td><code>Read Only Memory</code></td>
<td>只读存储器</td>
</tr>
<tr>
<td><code>FAQ</code></td>
<td><code>Frequently Asked Questions</code></td>
<td>常见问题集</td>
</tr>
<tr>
<td><code>FDD</code></td>
<td><code>Floppy Disk Drive</code></td>
<td>软盘驱动器</td>
</tr>
<tr>
<td><code>GIF</code></td>
<td><code>Graphics Interchange Format</code></td>
<td>图像互换格式，一种位图图形文件格式</td>
</tr>
<tr>
<td><code>GUID</code></td>
<td><code>Globally Unique Identifier</code></td>
<td>全局唯一标识符</td>
</tr>
<tr>
<td><code>GUI</code></td>
<td><code>Graphical User Interface</code></td>
<td>图形用户界面</td>
</tr>
<tr>
<td><code>GDI</code></td>
<td><code>Graphics Device Interface</code></td>
<td>图形设备接口</td>
</tr>
<tr>
<td><code>HDD</code></td>
<td><code>Hard Disk Drive</code></td>
<td>硬盘驱动器</td>
</tr>
<tr>
<td><code>JPEG</code></td>
<td><code>Joint Photographic Experts Group</code></td>
<td>联合图像专家小组，一种针对照片影像而广泛使用的有损压缩标准方法</td>
</tr>
<tr>
<td><code>LSP</code></td>
<td><code>Liskov Substitution Principle</code></td>
<td>里氏替换原则</td>
</tr>
<tr>
<td><code>RESTful</code></td>
<td><code>Representational State Transfer</code></td>
<td>一种架构规约，符合就称其 RESTful 架构</td>
</tr>
<tr>
<td><code>OS</code></td>
<td><code>Operating System</code></td>
<td>操作系统</td>
</tr>
<tr>
<td><code>OOA</code></td>
<td><code>Object Oriented Analysis</code></td>
<td>面向对象分析方法</td>
</tr>
<tr>
<td><code>OOD</code></td>
<td><code>Object Oriented Design</code></td>
<td>面向对象设计</td>
</tr>
<tr>
<td><code>OOP</code></td>
<td><code>Object Oriented Programming</code></td>
<td>面向对象程序设计</td>
</tr>
<tr>
<td><code>PDF</code></td>
<td><code>Portable Document Format</code></td>
<td>便携式文档格式</td>
</tr>
<tr>
<td><code>PC</code></td>
<td><code>Personal Computer</code></td>
<td>个人计算机</td>
</tr>
<tr>
<td><code>PC</code></td>
<td><code>Program Counter</code></td>
<td>程序计数器</td>
</tr>
<tr>
<td><code>PNG</code></td>
<td><code>Portable Network Graphics</code></td>
<td>便携式网络图形，一种无损压缩的位图图形格式</td>
</tr>
<tr>
<td><code>SVG</code></td>
<td><code>Scalable Vector Graphics</code></td>
<td>可缩放矢量图形</td>
</tr>
<tr>
<td><code>SRP</code></td>
<td><code>Single Responsibility Principle</code></td>
<td>单一职责原则</td>
</tr>
<tr>
<td><code>I/O</code></td>
<td><code>Input/Output</code></td>
<td>输入输出</td>
</tr>
<tr>
<td><code>IT</code></td>
<td><code>Internet Technology</code></td>
<td>信息技术或互联网技术</td>
</tr>
<tr>
<td><code>IETF</code></td>
<td><code>Internet Engineering Task Force</code></td>
<td>互联网工程任务组</td>
</tr>
<tr>
<td><code>REST</code></td>
<td><code>Representational State Transfer</code></td>
<td>表述性状态传递</td>
</tr>
<tr>
<td><code>UTF-8</code></td>
<td><code>8-bit Unicode Transformation Format</code></td>
<td>一种针对 Unicode 的可变长度字符编码，也是一种前缀码</td>
</tr>
<tr>
<td><code>VM</code></td>
<td><code>Virtual Machine</code></td>
<td>虚拟机</td>
</tr>
<tr>
<td><code>W3C</code></td>
<td><code>Word Wide Web Consortium</code></td>
<td>万维网协会</td>
</tr>
</tbody>
</table>
<h1 id="网络"><a href="#网络" class="headerlink" title="网络"></a>网络</h1><table>
<thead>
<tr>
<th>简称</th>
<th>全称</th>
<th>描述</th>
</tr>
</thead>
<tbody>
<tr>
<td><code>IP</code></td>
<td><code>Internet Protocol</code></td>
<td>网际互连协议</td>
</tr>
<tr>
<td><code>WWW</code></td>
<td><code>World Wide Web</code></td>
<td>万维网</td>
</tr>
<tr>
<td><code>DNS</code></td>
<td><code>Domain Name Server</code></td>
<td>域名服务器</td>
</tr>
<tr>
<td><code>CDN</code></td>
<td><code>Content Delivery Network</code></td>
<td>内容分发网络</td>
</tr>
<tr>
<td><code>ISP</code></td>
<td><code>Internet Service Provider</code></td>
<td>因特网服务提供商</td>
</tr>
<tr>
<td><code>NAT</code></td>
<td><code>Network Address Translation</code></td>
<td>网络地址转换</td>
</tr>
<tr>
<td><code>ARP</code></td>
<td><code>Address Resolution Protoco</code></td>
<td>地址解析协议</td>
</tr>
<tr>
<td><code>IPS</code></td>
<td><code>Internet Protocol Suite</code></td>
<td>互联网协议族</td>
</tr>
<tr>
<td><code>PS</code></td>
<td><code>Packet Switching</code></td>
<td>分组交换</td>
</tr>
<tr>
<td><code>IPv4</code></td>
<td><code>Internet Protocol version 4</code></td>
<td>互联网通信协议第四版</td>
</tr>
<tr>
<td><code>IPv6</code></td>
<td><code>Internet Protocol version 6</code></td>
<td>互联网通信协议第六版</td>
</tr>
<tr>
<td><code>ICMPv6</code></td>
<td><code>Internet Control Message Protocol Version 6</code></td>
<td>互联网控制消息协议第六版</td>
</tr>
<tr>
<td><code>HTTP</code></td>
<td><code>HyperText Transfer Protocol</code></td>
<td>超文本传输协议</td>
</tr>
<tr>
<td><code>HTTPS</code></td>
<td><code>Hyper Text Transfer Protocol over SecureSocket Layer</code></td>
<td>超文本传输安全协议</td>
</tr>
<tr>
<td><code>TCP</code></td>
<td><code>Transmission Control Protocol</code></td>
<td>传输控制协议</td>
</tr>
<tr>
<td><code>UDP</code></td>
<td><code>User Datagram Protocol</code></td>
<td>用户数据报协议</td>
</tr>
<tr>
<td><code>FTP</code></td>
<td><code>File Transfer Protocol</code></td>
<td>文件传输协议</td>
</tr>
<tr>
<td><code>NDP</code></td>
<td><code>Neighbor Discovery Protocol</code></td>
<td>邻居发现协议</td>
</tr>
<tr>
<td><code>ICMP</code></td>
<td><code>Internet Control Message Protocol</code></td>
<td>互联网控制消息协议</td>
</tr>
<tr>
<td><code>OSI</code></td>
<td><code>Open System Interconnection</code></td>
<td>开放式系统互联</td>
</tr>
<tr>
<td><code>SSL</code></td>
<td><code>Secure Sockets Layer</code></td>
<td>安全套接层</td>
</tr>
<tr>
<td><code>TLS</code></td>
<td><code>Transport Layer Security</code></td>
<td>传输层安全性协议</td>
</tr>
<tr>
<td><code>IoT</code></td>
<td><code>Internet of Things</code></td>
<td>物联网</td>
</tr>
<tr>
<td><code>GPS</code></td>
<td><code>Global Positioning System</code></td>
<td>全球定位系统</td>
</tr>
<tr>
<td><code>GNU</code></td>
<td><code>GNU is Not Unix</code></td>
<td>一个自由的操作系统，其内容软件完全以 GPL 方式发布</td>
</tr>
<tr>
<td><code>SNS</code></td>
<td><code>Social Networking Services</code></td>
<td>社交网络服务</td>
</tr>
<tr>
<td><code>SMS</code></td>
<td><code>Short Message Service</code></td>
<td>短信息服务</td>
</tr>
<tr>
<td><code>RFC</code></td>
<td><code>Request For Comments</code></td>
<td>请求评论，即一系列以编号排定的文件</td>
</tr>
<tr>
<td><code>CAS</code></td>
<td><code>Central Authentication Service</code></td>
<td>中央认证服务</td>
</tr>
<tr>
<td><code>DAU</code></td>
<td><code>Daily Active User</code></td>
<td>日活跃用户数</td>
</tr>
<tr>
<td><code>MAU</code></td>
<td><code>Monthly Active Users</code></td>
<td>月活跃用户数</td>
</tr>
<tr>
<td><code>CTR</code></td>
<td><code>Click Through Rate</code></td>
<td>点击通过率</td>
</tr>
<tr>
<td><code>PV</code></td>
<td><code>Page View</code></td>
<td>网站被浏览总次数</td>
</tr>
<tr>
<td><code>URL</code></td>
<td><code>Uniform Resource Locator</code></td>
<td>统一资源定位符</td>
</tr>
<tr>
<td><code>URI</code></td>
<td><code>Uniform Resource Identifier</code></td>
<td>统一资源标识符</td>
</tr>
<tr>
<td><code>UV</code></td>
<td><code>Unique Visitor</code></td>
<td>独立访客，唯一身份访问网站的数字</td>
</tr>
<tr>
<td><code>TP</code></td>
<td><code>Time On Page</code></td>
<td>页面停留时间</td>
</tr>
<tr>
<td><code>LBS</code></td>
<td><code>Location Based Services</code></td>
<td>基于位置的服务</td>
</tr>
<tr>
<td><code>LVS</code></td>
<td><code>Linux Virtual Server</code></td>
<td>Linux 虚拟服务器</td>
</tr>
<tr>
<td><code>VPN</code></td>
<td><code>Virtual Private Network</code></td>
<td>虛拟私有网络</td>
</tr>
<tr>
<td><code>VIP</code></td>
<td><code>Virtual Private Network</code></td>
<td>虛拟私有网络</td>
</tr>
</tbody>
</table>
<h1 id="编程"><a href="#编程" class="headerlink" title="编程"></a>编程</h1><table>
<thead>
<tr>
<th>简称</th>
<th>全称</th>
<th>描述</th>
</tr>
</thead>
<tbody>
<tr>
<td><code>API</code></td>
<td><code>Application Programming Interface</code></td>
<td>应用程序接口</td>
</tr>
<tr>
<td><code>COM</code></td>
<td><code>Component Object Model</code></td>
<td>组件对象模型</td>
</tr>
<tr>
<td><code>JVM</code></td>
<td><code>Java Virtual Machine</code></td>
<td>Java 虚拟机</td>
</tr>
<tr>
<td><code>JIT</code></td>
<td><code>Just In Time (Compiler)</code></td>
<td>即时编译</td>
</tr>
<tr>
<td><code>JDK</code></td>
<td><code>Java Development Kit</code></td>
<td>Java 语言的软件开发工具包</td>
</tr>
<tr>
<td><code>JRE</code></td>
<td><code>Java Runtime Environment</code></td>
<td>Java 运行时环境</td>
</tr>
<tr>
<td><code>GC</code></td>
<td><code>Gabage Collection</code></td>
<td>垃圾回收器</td>
</tr>
<tr>
<td><code>JS</code></td>
<td><code>JavaScript</code></td>
<td>JavaScript 编程语言</td>
</tr>
<tr>
<td><code>PHP</code></td>
<td><code>Hypertext Preprocessor</code></td>
<td>PHP 编程语言</td>
</tr>
<tr>
<td><code>CAS</code></td>
<td><code>Compare and Swap</code></td>
<td>比较并交换</td>
</tr>
<tr>
<td><code>JSON</code></td>
<td><code>JavaScript Object Notation</code></td>
<td>JavaScript 对象简谱，即一种轻量级的数据交换格式</td>
</tr>
<tr>
<td><code>ECMAScript</code></td>
<td><code>European Computer Manufacturers Association Script</code></td>
<td>Ecma 国际通过 ECMA-262 标准化的脚本程序设计语言</td>
</tr>
<tr>
<td><code>XML</code></td>
<td><code>Extensible Markup Language</code></td>
<td>可扩展标记语言</td>
</tr>
<tr>
<td><code>SGML</code></td>
<td><code>Standard Generalized Markup Language</code></td>
<td>标准通用标记语言</td>
</tr>
<tr>
<td><code>HTML</code></td>
<td><code>HyperText Markup Language</code></td>
<td>超级文本标记语言</td>
</tr>
<tr>
<td><code>AJAX</code></td>
<td><code>Asynchronous Javascript And XML</code></td>
<td>异步 JavaScript 和 XML</td>
</tr>
<tr>
<td><code>JWT</code></td>
<td><code>JSON Web Token</code></td>
<td>实现 Token 技术的一种解决方案</td>
</tr>
<tr>
<td><code>DP</code></td>
<td><code>Dynamic Programming</code></td>
<td>动态规划</td>
</tr>
<tr>
<td><code>MVC</code></td>
<td><code>Model View Controller</code></td>
<td>软件工程中的一种软件架构模式</td>
</tr>
<tr>
<td><code>MVVM</code></td>
<td><code>Model View View Model</code></td>
<td>软件工程中的一种软件架构模式</td>
</tr>
</tbody>
</table>
<h1 id="数据库"><a href="#数据库" class="headerlink" title="数据库"></a>数据库</h1><table>
<thead>
<tr>
<th>简称</th>
<th>全称</th>
<th>描述</th>
</tr>
</thead>
<tbody>
<tr>
<td><code>DB</code></td>
<td><code>Database</code></td>
<td>数据库</td>
</tr>
<tr>
<td><code>SQL</code></td>
<td><code>Structured Query Language</code></td>
<td>结构化查询语言</td>
</tr>
<tr>
<td><code>DDL</code></td>
<td><code>Data Definition Language</code></td>
<td>数据定义语言</td>
</tr>
<tr>
<td><code>DML</code></td>
<td><code>Data Manipulation Language</code></td>
<td>数据操纵语言</td>
</tr>
<tr>
<td><code>DD</code></td>
<td><code>Data Dictionary</code></td>
<td>数据字典</td>
</tr>
<tr>
<td><code>DBMS</code></td>
<td><code>Database Management System</code></td>
<td>数据库管理系统</td>
</tr>
<tr>
<td><code>RDBMS</code></td>
<td><code>Relational Database Management System</code></td>
<td>关系型数据库管理系统</td>
</tr>
<tr>
<td><code>NoSQL</code></td>
<td><code>Not Only SQL</code></td>
<td>非关系型的数据库</td>
</tr>
<tr>
<td><code>ACID</code></td>
<td><code>Atomicity, Consistency, Isolation, Durability</code></td>
<td>数据库事务正确执行的四个基本要素</td>
</tr>
<tr>
<td><code>WAL</code></td>
<td><code>Write Ahead Logging</code></td>
<td>预写日志系统</td>
</tr>
<tr>
<td><code>ID</code></td>
<td><code>Identity Document</code></td>
<td>身份标识号</td>
</tr>
<tr>
<td><code>ODBC</code></td>
<td><code>Open Database Connectivity</code></td>
<td>开放数据库互连</td>
</tr>
<tr>
<td><code>JDBC</code></td>
<td><code>Java Database Connectivity</code></td>
<td>Java 数据库连接</td>
</tr>
<tr>
<td><code>CAP</code></td>
<td><code>Consistency, Availability, Partition tolerance</code></td>
<td>一致性、可用性、分区容错性</td>
</tr>
<tr>
<td><code>1NF</code></td>
<td><code>First Normal Form</code></td>
<td>第一范式</td>
</tr>
<tr>
<td><code>2NF</code></td>
<td><code>Second Normal Form</code></td>
<td>第二范式</td>
</tr>
<tr>
<td><code>3NF</code></td>
<td><code>Third Normal Form</code></td>
<td>第三范式</td>
</tr>
</tbody>
</table>
]]></content>
      <categories>
        <category>basic</category>
      </categories>
      <tags>
        <tag>basic</tag>
      </tags>
  </entry>
  <entry>
    <title>使用 Satis 搭建 Composer 私有源</title>
    <url>/2019/06/22/composer-satis-private-source/</url>
    <content><![CDATA[<p><img src="/images/2019/201906221121.jpg" alt="201906221121.jpg"></p>
<p>有时候我们不想公开业务开发中封装的一些工具或者开发包，想通过搭建自己专属的 Composer 源来安装这些包，那么就得使用 Satis 这种工具搭建 Composer 私有源，当然，Satis 并不是唯一的方式。</p>
<span id="more"></span>
<h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p>Satis 是一个静态的 Composer 库生成器。它有点像 packagist 的超轻量级、基于静态文件的版本，可以用来托管公司的私有包或自己的包的元数据。它基本上是一个微型容器。可以从 <a href="https://github.com/composer/satis">GitHub</a> 获取它，或者通过命令行界面安装。</p>
<h2 id="起步"><a href="#起步" class="headerlink" title="起步"></a>起步</h2><h3 id="准备安装包"><a href="#准备安装包" class="headerlink" title="准备安装包"></a>准备安装包</h3><p>本文中以托管到 <a href="https://gitee.com/">码云</a> 上的项目为例（相关配置本文暂略）。</p>
<h3 id="创建项目"><a href="#创建项目" class="headerlink" title="创建项目"></a>创建项目</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">// 切换指定目录</span><br><span class="line">$ <span class="built_in">cd</span> ~/Codes/laravel</span><br><span class="line"></span><br><span class="line">// 生成项目骨架</span><br><span class="line">$ composer create-project composer/satis package.test --stability=dev --keep-vcs</span><br><span class="line">Installing composer/satis (dev-master 735f6d4e0d933e3bd0263f96865a0e50b80f4257)</span><br><span class="line">  - Installing composer/satis (dev-master 735f6d4): Cloning 735f6d4e0d from cache</span><br><span class="line">Created project <span class="keyword">in</span> package.test</span><br><span class="line">Loading composer repositories with package information</span><br><span class="line">Installing dependencies (including require-dev) from lock file</span><br><span class="line">Package operations: 55 installs, 0 updates, 0 removals</span><br><span class="line">  - Installing symfony/process (v4.2.7): Loading from cache</span><br><span class="line">  - Installing symfony/finder (v4.2.7): Loading from cache</span><br><span class="line">  - Installing symfony/polyfill-ctype (v1.11.0): Loading from cache</span><br><span class="line">  - Installing symfony/filesystem (v4.2.7): Loading from cache</span><br><span class="line">  - Installing symfony/polyfill-mbstring (v1.11.0): Loading from cache</span><br><span class="line">  - Installing symfony/contracts (v1.0.2): Loading from cache</span><br><span class="line">  - Installing symfony/console (v4.2.7): Loading from cache</span><br><span class="line">  - Installing seld/phar-utils (1.0.1): Loading from cache</span><br><span class="line">  - Installing seld/jsonlint (1.7.1): Loading from cache</span><br><span class="line">  - Installing psr/<span class="built_in">log</span> (1.1.0): Loading from cache</span><br><span class="line">  - Installing justinrainbow/json-schema (5.2.8): Loading from cache</span><br><span class="line">  - Installing composer/xdebug-handler (1.3.2): Loading from cache</span><br><span class="line">  - Installing composer/spdx-licenses (1.5.1): Loading from cache</span><br><span class="line">  - Installing composer/semver (1.5.0): Loading from cache</span><br><span class="line">  - Installing composer/ca-bundle (1.1.4): Loading from cache</span><br><span class="line">  - Installing composer/composer (1.8.5): Loading from cache</span><br><span class="line">  - Installing twig/twig (v2.8.1): Loading from cache</span><br><span class="line">  - Installing doctrine/lexer (v1.0.1): Loading from cache</span><br><span class="line">  - Installing symfony/stopwatch (v4.2.7): Loading from cache</span><br><span class="line">  - Installing symfony/polyfill-php72 (v1.11.0): Loading from cache</span><br><span class="line">  - Installing paragonie/random_compat (v9.99.99): Loading from cache</span><br><span class="line">  - Installing symfony/polyfill-php70 (v1.11.0): Loading from cache</span><br><span class="line">  - Installing symfony/options-resolver (v4.2.7): Loading from cache</span><br><span class="line">  - Installing symfony/event-dispatcher (v4.2.7): Loading from cache</span><br><span class="line">  - Installing php-cs-fixer/diff (v1.3.0): Loading from cache</span><br><span class="line">  - Installing doctrine/annotations (v1.6.1): Loading from cache</span><br><span class="line">  - Installing friendsofphp/php-cs-fixer (v2.14.2): Loading from cache</span><br><span class="line">  - Installing mikey179/vfsstream (v1.6.6): Loading from cache</span><br><span class="line">  - Installing webmozart/assert (1.4.0): Loading from cache</span><br><span class="line">  - Installing phpdocumentor/reflection-common (1.0.1): Loading from cache</span><br><span class="line">  - Installing phpdocumentor/type-resolver (0.4.0): Loading from cache</span><br><span class="line">  - Installing phpdocumentor/reflection-docblock (4.3.0): Loading from cache</span><br><span class="line">  - Installing phpunit/php-token-stream (3.0.1): Loading from cache</span><br><span class="line">  - Installing sebastian/version (2.0.1): Loading from cache</span><br><span class="line">  - Installing sebastian/resource-operations (2.0.1): Loading from cache</span><br><span class="line">  - Installing sebastian/recursion-context (3.0.0): Loading from cache</span><br><span class="line">  - Installing sebastian/object-reflector (1.1.1): Loading from cache</span><br><span class="line">  - Installing sebastian/object-enumerator (3.0.3): Loading from cache</span><br><span class="line">  - Installing sebastian/global-state (3.0.0): Loading from cache</span><br><span class="line">  - Installing sebastian/exporter (3.1.0): Loading from cache</span><br><span class="line">  - Installing sebastian/environment (4.2.0): Loading from cache</span><br><span class="line">  - Installing sebastian/diff (3.0.2): Loading from cache</span><br><span class="line">  - Installing sebastian/comparator (3.0.2): Loading from cache</span><br><span class="line">  - Installing phpunit/php-timer (2.1.1): Loading from cache</span><br><span class="line">  - Installing phpunit/php-text-template (1.2.1): Loading from cache</span><br><span class="line">  - Installing phpunit/php-file-iterator (2.0.2): Loading from cache</span><br><span class="line">  - Installing theseer/tokenizer (1.1.2): Loading from cache</span><br><span class="line">  - Installing sebastian/code-unit-reverse-lookup (1.0.1): Loading from cache</span><br><span class="line">  - Installing phpunit/php-code-coverage (7.0.3): Loading from cache</span><br><span class="line">  - Installing doctrine/instantiator (1.2.0): Loading from cache</span><br><span class="line">  - Installing phpspec/prophecy (1.8.0): Loading from cache</span><br><span class="line">  - Installing phar-io/version (2.0.1): Loading from cache</span><br><span class="line">  - Installing phar-io/manifest (1.0.3): Loading from cache</span><br><span class="line">  - Installing myclabs/deep-copy (1.9.1): Loading from cache</span><br><span class="line">  - Installing phpunit/phpunit (8.1.3): Loading from cache</span><br><span class="line">symfony/contracts suggests installing psr/cache (When using the Cache contracts)</span><br><span class="line">symfony/contracts suggests installing psr/container (When using the Service contracts)</span><br><span class="line">symfony/contracts suggests installing symfony/cache-contracts-implementation</span><br><span class="line">symfony/contracts suggests installing symfony/service-contracts-implementation</span><br><span class="line">symfony/contracts suggests installing symfony/translation-contracts-implementation</span><br><span class="line">symfony/console suggests installing symfony/lock</span><br><span class="line">paragonie/random_compat suggests installing ext-libsodium (Provides a modern crypto API that can be used to generate random bytes.)</span><br><span class="line">symfony/event-dispatcher suggests installing symfony/dependency-injection</span><br><span class="line">symfony/event-dispatcher suggests installing symfony/http-kernel</span><br><span class="line">friendsofphp/php-cs-fixer suggests installing php-cs-fixer/phpunit-constraint-isidenticalstring (For IsIdenticalString constraint.)</span><br><span class="line">friendsofphp/php-cs-fixer suggests installing php-cs-fixer/phpunit-constraint-xmlmatchesxsd (For XmlMatchesXsd constraint.)</span><br><span class="line">sebastian/global-state suggests installing ext-uopz (*)</span><br><span class="line">phpunit/phpunit suggests installing phpunit/php-invoker (^2.0)</span><br><span class="line">Generating <span class="built_in">autoload</span> files</span><br></pre></td></tr></table></figure>
<h3 id="私有源项目配置"><a href="#私有源项目配置" class="headerlink" title="私有源项目配置"></a>私有源项目配置</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">// 切换到项目目录</span><br><span class="line">$ <span class="built_in">cd</span> ~/Codes/laravel/package.test</span><br><span class="line"></span><br><span class="line">// 创建 satis.json 文件，并填入以下内容</span><br><span class="line">$ touch satis.json</span><br><span class="line">&#123;</span><br><span class="line">    <span class="string">&quot;name&quot;</span>: <span class="string">&quot;xiaohe/packages&quot;</span>,</span><br><span class="line">    <span class="string">&quot;description&quot;</span>: <span class="string">&quot;Xiaohe PHP Development Package&quot;</span>,</span><br><span class="line">    <span class="string">&quot;homepage&quot;</span>: <span class="string">&quot;http://package.test&quot;</span>,</span><br><span class="line">    <span class="string">&quot;repositories&quot;</span>: [</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="string">&quot;type&quot;</span>: <span class="string">&quot;vcs&quot;</span>,</span><br><span class="line">            <span class="string">&quot;url&quot;</span>: <span class="string">&quot;git@gitee.com:xiaoheinc/laravel-sms.git&quot;</span></span><br><span class="line">        &#125;</span><br><span class="line">    ],</span><br><span class="line">    <span class="string">&quot;repositories-dep&quot;</span>: [],</span><br><span class="line">    <span class="string">&quot;output-dir&quot;</span>: <span class="string">&quot;public&quot;</span>,</span><br><span class="line">    <span class="string">&quot;require-all&quot;</span>: <span class="literal">false</span>,</span><br><span class="line">    <span class="string">&quot;require&quot;</span>: &#123;</span><br><span class="line">        <span class="string">&quot;xiaohe/laravel-sms&quot;</span>: <span class="string">&quot;dev-master&quot;</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="string">&quot;require-dependencies&quot;</span>: <span class="literal">false</span>,</span><br><span class="line">    <span class="string">&quot;require-dev-dependencies&quot;</span>: <span class="literal">false</span>,</span><br><span class="line">    <span class="string">&quot;output-html&quot;</span>: <span class="literal">true</span>,</span><br><span class="line">    <span class="string">&quot;config&quot;</span>: &#123;</span><br><span class="line">        <span class="string">&quot;secure-http&quot;</span>: <span class="literal">false</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="私有源生成"><a href="#私有源生成" class="headerlink" title="私有源生成"></a>私有源生成</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ php -c ./php-cli.ini bin/satis build -vv --skip-errors satis.json public/</span><br><span class="line">Scanning packages</span><br><span class="line">Reading composer.json of xiaohe/laravel-sms (master)</span><br><span class="line">Importing branch master (dev-master)</span><br><span class="line">Selected xiaohe/laravel-sms (dev-master)</span><br><span class="line">wrote packages to public//include/all<span class="variable">$979ee73568f8982cf167859ee4a0d1d7e8679915</span>.json</span><br><span class="line">Writing packages.json</span><br><span class="line">Pruning include directories</span><br><span class="line">Deleted public//include/all<span class="variable">$ab346115d9b4c32b0da1504f27e7ed1ec29bbf73</span>.json</span><br><span class="line">Writing web view</span><br></pre></td></tr></table></figure>
<h3 id="让私有源项目可访问"><a href="#让私有源项目可访问" class="headerlink" title="让私有源项目可访问"></a>让私有源项目可访问</h3><p>配置私有源项目，并重启 Nginx 服务器：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">server &#123;</span><br><span class="line"></span><br><span class="line">    listen 80;</span><br><span class="line">    listen [::]:80;</span><br><span class="line"></span><br><span class="line">    <span class="comment"># For https</span></span><br><span class="line">    <span class="comment"># listen 443 ssl;</span></span><br><span class="line">    <span class="comment"># listen [::]:443 ssl ipv6only=on;</span></span><br><span class="line">    <span class="comment"># ssl_certificate /etc/nginx/ssl/default.crt;</span></span><br><span class="line">    <span class="comment"># ssl_certificate_key /etc/nginx/ssl/default.key;</span></span><br><span class="line"></span><br><span class="line">    server_name package.test;</span><br><span class="line">    root /var/www/package.test/public;</span><br><span class="line">    index index.php index.html index.htm;</span><br><span class="line"></span><br><span class="line">    location ~ \.php$ &#123;</span><br><span class="line">        try_files <span class="variable">$uri</span> /index.php =404;</span><br><span class="line">        fastcgi_pass php-upstream;</span><br><span class="line">        fastcgi_index index.php;</span><br><span class="line">        fastcgi_buffers 16 16k;</span><br><span class="line">        fastcgi_buffer_size 32k;</span><br><span class="line">        fastcgi_param SCRIPT_FILENAME $document_root<span class="variable">$fastcgi_script_name</span>;</span><br><span class="line">        <span class="comment"># fixes timeouts</span></span><br><span class="line">        fastcgi_read_timeout 600;</span><br><span class="line">        include fastcgi_params;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    location ~ /\.ht &#123;</span><br><span class="line">        deny all;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    error_log /var/<span class="built_in">log</span>/nginx/package-error.log;</span><br><span class="line">    access_log /var/<span class="built_in">log</span>/nginx/package-access.log;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>访问私有源项目：</p>
<p><img src="https://inotes.oss-cn-beijing.aliyuncs.com/php/201906/composer-package.jpg" alt="composer-package.jpg"></p>
<h2 id="私有源使用"><a href="#私有源使用" class="headerlink" title="私有源使用"></a>私有源使用</h2><h3 id="项目中配置"><a href="#项目中配置" class="headerlink" title="项目中配置"></a>项目中配置</h3><blockquote>
<p>此处以 Laravel 项目为例。</p>
</blockquote>
<p>将以下内容添加到项目的 <code>composer.json</code> 文件中：</p>
<figure class="highlight json"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    .</span><br><span class="line">    .</span><br><span class="line">    .</span><br><span class="line">    <span class="attr">&quot;repositories&quot;</span>: [</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="attr">&quot;type&quot;</span>: <span class="string">&quot;composer&quot;</span>,</span><br><span class="line">            <span class="attr">&quot;url&quot;</span>: <span class="string">&quot;http://package.test/&quot;</span></span><br><span class="line">        &#125;</span><br><span class="line">    ]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="安装测试"><a href="#安装测试" class="headerlink" title="安装测试"></a>安装测试</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ composer require xiaohe/laravel-sms</span><br><span class="line">Warning: Accessing package.test over http <span class="built_in">which</span> is an insecure protocol.</span><br><span class="line">    1/3:        https://packagist.laravel-china.org/p/provider-latest<span class="variable">$dfdf6692476db7cc6ba617894e2d61d7b41970cc0e5e2aa0d79f14e5c0c0b526</span>.json</span><br><span class="line">    2/3:        https://packagist.laravel-china.org/p/provider-2018-10<span class="variable">$4bfb9a1a71d8062fdf36b1dd4d35635da47e70cf04f2d8978668127e70c43dcf</span>.json</span><br><span class="line">    3/3:        https://packagist.laravel-china.org/p/provider-2019-04<span class="variable">$e201694c08014f9b374db1cbcfc61a971eb80d8965069a87a7d557efb338aaf6</span>.json</span><br><span class="line">    Finished: success: 3, skipped: 0, failure: 0, total: 3</span><br><span class="line">Using version dev-master <span class="keyword">for</span> xiaohe/laravel-sms</span><br><span class="line">./composer.json has been updated</span><br><span class="line">Warning: Accessing package.test over http <span class="built_in">which</span> is an insecure protocol.</span><br><span class="line">Loading composer repositories with package information</span><br><span class="line">Updating dependencies (including require-dev)</span><br><span class="line">Package operations: 1 install, 0 updates, 0 removals</span><br><span class="line">  - Installing xiaohe/laravel-sms (dev-master 9fdc80d): Cloning 9fdc80d63d from cache</span><br><span class="line">Writing lock file</span><br><span class="line">Generating optimized <span class="built_in">autoload</span> files</span><br><span class="line">&gt; Illuminate\Foundation\ComposerScripts::postAutoloadDump</span><br><span class="line">&gt; @php artisan package:discover --ansi</span><br><span class="line">Discovered Package: barryvdh/laravel-ide-helper</span><br><span class="line">Discovered Package: beyondcode/laravel-dump-server</span><br><span class="line">Discovered Package: dingo/api</span><br><span class="line">Discovered Package: fideloper/proxy</span><br><span class="line">Discovered Package: intervention/image</span><br><span class="line">Discovered Package: jenssegers/mongodb</span><br><span class="line">Discovered Package: laravel/horizon</span><br><span class="line">Discovered Package: laravel/slack-notification-channel</span><br><span class="line">Discovered Package: laravel/tinker</span><br><span class="line">Discovered Package: liyu/dingo-serializer-switch</span><br><span class="line">Discovered Package: mews/captcha</span><br><span class="line">Discovered Package: nesbot/carbon</span><br><span class="line">Discovered Package: nunomaduro/collision</span><br><span class="line">Discovered Package: nunomaduro/larastan</span><br><span class="line">Discovered Package: nunomaduro/phpinsights</span><br><span class="line">Discovered Package: nwidart/laravel-modules</span><br><span class="line">Discovered Package: tymon/jwt-auth</span><br><span class="line">Discovered Package: xiaohe/laravel-sms</span><br><span class="line">Package manifest generated successfully.</span><br><span class="line">ocramius/package-versions:  Generating version class...</span><br><span class="line">ocramius/package-versions: ...<span class="keyword">done</span> generating version class</span><br></pre></td></tr></table></figure>
<h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><ul>
<li><a href="https://getcomposer.org/doc/articles/handling-private-packages-with-satis.md">Handling private packages</a></li>
<li><a href="https://composer.github.io/satis/">For full private Composer repo use Private Packagist</a></li>
</ul>
]]></content>
      <categories>
        <category>composer</category>
      </categories>
      <tags>
        <tag>php</tag>
        <tag>composer</tag>
      </tags>
  </entry>
  <entry>
    <title>Git 分支</title>
    <url>/2018/01/25/git-branch/</url>
    <content><![CDATA[<p>🧬 分支几乎是 git 的必杀技，倒不是说其他的版本控制没有分支这个特性，而是 git 分支早已把其它的版本控制系统分支功能甩了好几条街。这么说不是夸张，因为 git 的实现与项目复杂度无关，它永远可以在几毫秒的时间内完成分支的创建和切换。同时，因为每次提交时都记录了祖先信息，将来要合并分支时，寻找恰当的合并基础的工作其实已经很显然的摆在那里，所以实现起来非常容易。git 鼓励开发者频繁使用分支，正是仗着这些特性作保障。</p>
<span id="more"></span>
<ul>
<li><a href="https://imajinyun.xyz/2018/01/22/git-started/"><code>Git 起步</code></a></li>
<li><a href="https://imajinyun.xyz/2018/01/23/git-basic/"><code>Git 基本操作</code></a></li>
<li><a href="https://imajinyun.xyz/2018/01/24/git-log/"><code>Git 查看日志</code></a></li>
<li><a href="https://imajinyun.xyz/2018/01/25/git-branch/"><strong>Git 分支</strong></a></li>
<li><a href="https://imajinyun.xyz/2018/01/27/git-multiple-accounts/"><code>Git 中一个客户端设置多个账号</code></a></li>
<li><a href="https://imajinyun.xyz/2018/05/01/git-workflow/"><code>Git Workflow</code></a></li>
<li><a href="https://imajinyun.xyz/2020/09/07/git-collection-command/"><code>Git 命令大全</code></a></li>
</ul>
<h1 id="本地分支"><a href="#本地分支" class="headerlink" title="本地分支"></a>本地分支</h1><h2 id="创建分支"><a href="#创建分支" class="headerlink" title="创建分支"></a>创建分支</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">// 创建一个名称为 develop 的分支</span><br><span class="line">$ git checkout -b develop</span><br><span class="line">Switched to a new branch <span class="string">&#x27;develop&#x27;</span></span><br><span class="line">等价于</span><br><span class="line">$ git branch develop</span><br><span class="line">$ git checkout develop</span><br></pre></td></tr></table></figure>
<h2 id="删除分支"><a href="#删除分支" class="headerlink" title="删除分支"></a>删除分支</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">// 删除一个已经有提交记录但还没有合并到 master 的分支</span><br><span class="line">$ git branch -d develop</span><br><span class="line">error: The branch <span class="string">&#x27;develop&#x27;</span> is not fully merged.</span><br><span class="line">If you are sure you want to delete it, run <span class="string">&#x27;git branch -D develop&#x27;</span>.</span><br><span class="line"></span><br><span class="line">// 确定不合并 develop 分支的任何提交并删除此分支</span><br><span class="line">$ git branch -D develop</span><br><span class="line">Deleted branch develop (was 833b688).</span><br></pre></td></tr></table></figure>
<h2 id="查看分支"><a href="#查看分支" class="headerlink" title="查看分支"></a>查看分支</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">// 查看分支列表</span><br><span class="line">$ git branch</span><br><span class="line">* develop</span><br><span class="line">  feature</span><br><span class="line">  master</span><br><span class="line"></span><br><span class="line">// 查看每一个分支的最后一次提交</span><br><span class="line">$ git branch -v</span><br><span class="line">* develop 9ad35ee Add index.js</span><br><span class="line">  feature 992122d Add .editorconfig</span><br><span class="line">  master  23a0a9e Rename index.php to index.html</span><br><span class="line"></span><br><span class="line">// 查看哪些分支已经合并到当前分支</span><br><span class="line">$ git branch --merged</span><br><span class="line">  develop</span><br><span class="line">* master</span><br><span class="line"></span><br><span class="line">// 查看所有包含未合并工作的分支</span><br><span class="line">$ git branch --no-merged</span><br><span class="line">  feature</span><br></pre></td></tr></table></figure>
<h2 id="合并分支"><a href="#合并分支" class="headerlink" title="合并分支"></a>合并分支</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ git checkout master</span><br><span class="line">$ git merge --no-ff develop</span><br><span class="line">Merge made by the <span class="string">&#x27;recursive&#x27;</span> strategy.</span><br><span class="line"> README.md | 1 +</span><br><span class="line"> 1 file changed, 1 insertion(+)</span><br></pre></td></tr></table></figure>
<h2 id="分支变基"><a href="#分支变基" class="headerlink" title="分支变基"></a>分支变基</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">// 切换到要变基的分支</span><br><span class="line">$ git checkout feature</span><br><span class="line">Switched to branch <span class="string">&#x27;feature&#x27;</span></span><br><span class="line"></span><br><span class="line">// 进行变基</span><br><span class="line">$ git rebase master</span><br><span class="line">$ git rebase master</span><br><span class="line">First, rewinding head to replay your work on top of it...</span><br><span class="line">Applying: Add .editorconfig</span><br><span class="line">Applying: Add releases link</span><br><span class="line">Using index info to reconstruct a base tree...</span><br><span class="line">M  README.md</span><br><span class="line">Falling back to patching base and 3-way merge...</span><br><span class="line">Auto-merging README.md</span><br><span class="line">CONFLICT (content): Merge conflict <span class="keyword">in</span> README.md</span><br><span class="line">error: Failed to merge <span class="keyword">in</span> the changes.</span><br><span class="line">Patch failed at 0002 Add releases link</span><br><span class="line">Use <span class="string">&#x27;git am --show-current-patch&#x27;</span> to see the failed patch</span><br><span class="line"></span><br><span class="line">Resolve all conflicts manually, mark them as resolved with</span><br><span class="line"><span class="string">&quot;git add/rm &lt;conflicted_files&gt;&quot;</span>, <span class="keyword">then</span> run <span class="string">&quot;git rebase --continue&quot;</span>.</span><br><span class="line">You can instead skip this commit: run <span class="string">&quot;git rebase --skip&quot;</span>.</span><br><span class="line">To abort and get back to the state before <span class="string">&quot;git rebase&quot;</span>, run <span class="string">&quot;git rebase --abort&quot;</span>.</span><br><span class="line"></span><br><span class="line">// 查看当前的补丁</span><br><span class="line">$ git am --show-current-patch</span><br><span class="line">commit 15539736e18fe133f5916a55e8f38ce7b734113a (feature)</span><br><span class="line">Author: imajinyun &lt;imajinyun@gmail.com&gt;</span><br><span class="line">Date:   Mon Dec 31 21:24:59 2018 +0800</span><br><span class="line"></span><br><span class="line">    Add releases link</span><br><span class="line"></span><br><span class="line">diff --git a/README.md b/README.md</span><br><span class="line">index d467b4f..8ec2025 100644</span><br><span class="line">--- a/README.md</span><br><span class="line">+++ b/README.md</span><br><span class="line">@@ -2,3 +2,4 @@</span><br><span class="line"> [2]: https://symfony.com/projects</span><br><span class="line"> [3]: https://symfony.com/doc/current/reference/requirements.html</span><br><span class="line"> [4]: https://symfony.com/doc/current/setup.html</span><br><span class="line">+[5]: https://symfony.com/doc/current/contributing/community/releases.html</span><br><span class="line"></span><br><span class="line">// 解决冲突完成变基</span><br><span class="line">$ vim README.md</span><br><span class="line">冲突的文件内容：</span><br><span class="line">[1]: https://symfony.com</span><br><span class="line">[2]: https://symfony.com/projects</span><br><span class="line">[3]: https://symfony.com/doc/current/reference/requirements.html</span><br><span class="line">[4]: https://symfony.com/doc/current/setup.html</span><br><span class="line">&lt;&lt;&lt;&lt;&lt;&lt;&lt; <span class="string">HEAD</span></span><br><span class="line"><span class="string">[5]: http://semver.org</span></span><br><span class="line"><span class="string">=======</span></span><br><span class="line"><span class="string">[5]: https://symfony.com/doc/current/contributing/community/releases.html</span></span><br><span class="line"><span class="string">&gt;&gt;&gt;&gt;&gt;&gt;&gt; Add releases link</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">修复后的文件内容：</span></span><br><span class="line"><span class="string">[1]: https://symfony.com</span></span><br><span class="line"><span class="string">[2]: https://symfony.com/projects</span></span><br><span class="line"><span class="string">[3]: https://symfony.com/doc/current/reference/requirements.html</span></span><br><span class="line"><span class="string">[4]: https://symfony.com/doc/current/setup.html</span></span><br><span class="line"><span class="string">[5]: http://semver.org</span></span><br><span class="line"><span class="string">[6]: https://symfony.com/doc/current/contributing/community/releases.html</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">// 查看仓库状态</span></span><br><span class="line"><span class="string">$ git status</span></span><br><span class="line"><span class="string">rebase in progress; onto 4830059</span></span><br><span class="line"><span class="string">You are currently rebasing branch &#x27;feature&#x27; on &#x27;4830059&#x27;.</span></span><br><span class="line"><span class="string">  (fix conflicts and then run &quot;git rebase --continue&quot;)</span></span><br><span class="line"><span class="string">  (use &quot;git rebase --skip&quot; to skip this patch)</span></span><br><span class="line"><span class="string">  (use &quot;git rebase --abort&quot; to check out the original branch)</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">Unmerged paths:</span></span><br><span class="line"><span class="string">  (use &quot;git reset HEAD</span> &lt;file&gt;...<span class="string">&quot; to unstage)</span></span><br><span class="line"><span class="string">  (use &quot;</span>git add &lt;file&gt;...<span class="string">&quot; to mark resolution)</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    both modified:   README.md</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">no changes added to commit (use &quot;</span>git add<span class="string">&quot; and/or &quot;</span>git commit -a<span class="string">&quot;)</span></span><br><span class="line"><span class="string">$ git add README.md</span></span><br><span class="line"><span class="string">$ git rebase --continue</span></span><br><span class="line"><span class="string">Applying: Add releases link</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">// 合并此分支代码到 master 分支</span></span><br><span class="line"><span class="string">$ git checkout master</span></span><br><span class="line"><span class="string">$ git merge --no-ff feature</span></span><br><span class="line"><span class="string">Merge made by the &#x27;recursive&#x27; strategy.</span></span><br><span class="line"><span class="string"> .editorconfig | 0</span></span><br><span class="line"><span class="string"> README.md     | 1 +</span></span><br><span class="line"><span class="string"> 2 files changed, 1 insertion(+)</span></span><br><span class="line"><span class="string"> create mode 100644 .editorconfig</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">// 变基后的历史记录，可以看到变基使得提交历史更加整洁，日志就像是串行一样</span></span><br><span class="line"><span class="string">$ git log --oneline --graph</span></span><br><span class="line"><span class="string">*   f686948 (HEAD -&gt; master) Merge branch &#x27;feature&#x27; to master</span></span><br><span class="line"><span class="string">|\</span></span><br><span class="line"><span class="string">| * 78a6bfc (feature) Add releases link</span></span><br><span class="line"><span class="string">| * 34f8649 Add .editorconfig</span></span><br><span class="line"><span class="string">|/</span></span><br><span class="line"><span class="string">*   4830059 (develop) Merge branch &#x27;develop&#x27; to master</span></span><br><span class="line"><span class="string">|\</span></span><br><span class="line"><span class="string">| * 04a75c1 Add semver link</span></span><br><span class="line"><span class="string">* |   3bdd3fc Merge branch &#x27;develop&#x27; to master</span></span><br><span class="line"><span class="string">|\ \</span></span><br><span class="line"><span class="string">| |/</span></span><br><span class="line"><span class="string">| * d48ea11 Add setup link</span></span><br><span class="line"><span class="string">|/</span></span><br><span class="line"><span class="string">*   3513802 Merge branch &#x27;develop&#x27; to master</span></span><br><span class="line"><span class="string">|\</span></span><br><span class="line"><span class="string">| * 9ad35ee Add index.js</span></span><br><span class="line"><span class="string">| * 0bc04c2 Add index.css</span></span><br><span class="line"><span class="string">|/</span></span><br><span class="line"><span class="string">* 23a0a9e Rename index.php to index.html</span></span><br><span class="line"><span class="string">* da3c74c Add index.php</span></span><br><span class="line"><span class="string">* 7778db8 Add projects and requirements link</span></span><br><span class="line"><span class="string">* facc111 Add symfony website link</span></span><br><span class="line"><span class="string">* a384a2b Add README.md</span></span><br></pre></td></tr></table></figure>
<h1 id="其它操作"><a href="#其它操作" class="headerlink" title="其它操作"></a>其它操作</h1><h2 id="整合连续多次提交"><a href="#整合连续多次提交" class="headerlink" title="整合连续多次提交"></a>整合连续多次提交</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">// 查看提交日志</span><br><span class="line">$ git <span class="built_in">log</span> --oneline --graph --all</span><br><span class="line">*   f686948 (HEAD -&gt; master) Merge branch <span class="string">&#x27;feature&#x27;</span> to master</span><br><span class="line">|\</span><br><span class="line">| * 78a6bfc (feature) Add releases link</span><br><span class="line">| * 34f8649 Add .editorconfig</span><br><span class="line">|/</span><br><span class="line">*   4830059 (develop) Merge branch <span class="string">&#x27;develop&#x27;</span> to master</span><br><span class="line">|\</span><br><span class="line">| * 04a75c1 Add semver link</span><br><span class="line">* |   3bdd3fc Merge branch <span class="string">&#x27;develop&#x27;</span> to master</span><br><span class="line">|\ \</span><br><span class="line">| |/</span><br><span class="line">| * d48ea11 Add setup link</span><br><span class="line">|/</span><br><span class="line">*   3513802 Merge branch <span class="string">&#x27;develop&#x27;</span> to master</span><br><span class="line">|\</span><br><span class="line">| * 9ad35ee Add index.js</span><br><span class="line">| * 0bc04c2 Add index.css</span><br><span class="line">|/</span><br><span class="line">* 23a0a9e Rename index.php to index.html</span><br><span class="line">* da3c74c Add index.php</span><br><span class="line">* 7778db8 Add projects and requirements link</span><br><span class="line">* facc111 Add symfony website link</span><br><span class="line">* a384a2b Add README.md</span><br><span class="line"></span><br><span class="line">// 整合最近提交的 2 次记录，commit-id 使用第二次之前的</span><br><span class="line">$ git rebase -i 4830059</span><br><span class="line">弹出的编辑界面内容为：</span><br><span class="line">pick 34f8649 Add .editorconfig</span><br><span class="line">s 78a6bfc Add releases link <span class="comment"># 修改 pick 为 squash 或者 s</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Rebase 4830059..f686948 onto 4830059 (2 commands)</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># Commands:</span></span><br><span class="line"><span class="comment"># p, pick = use commit</span></span><br><span class="line"><span class="comment"># r, reword = use commit, but edit the commit message</span></span><br><span class="line"><span class="comment"># e, edit = use commit, but stop for amending</span></span><br><span class="line"><span class="comment"># s, squash = use commit, but meld into previous commit</span></span><br><span class="line"><span class="comment"># f, fixup = like &quot;squash&quot;, but discard this commit&#x27;s log message</span></span><br><span class="line"><span class="comment"># x, exec = run command (the rest of the line) using shell</span></span><br><span class="line"><span class="comment"># d, drop = remove commit</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># These lines can be re-ordered; they are executed from top to bottom.</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># If you remove a line here THAT COMMIT WILL BE LOST.</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># However, if you remove everything, the rebase will be aborted.</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># Note that empty commits are commented out</span></span><br><span class="line">保存后会弹出另一个编辑界面，内容为：</span><br><span class="line"><span class="comment"># This is a combination of 2 commits.</span></span><br><span class="line"></span><br><span class="line">Integrating submission logs <span class="comment"># 添加本次的提交日志信息</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># This is the 1st commit message:</span></span><br><span class="line"></span><br><span class="line">Add .editorconfig</span><br><span class="line"></span><br><span class="line"><span class="comment"># This is the commit message #2:</span></span><br><span class="line"></span><br><span class="line">Add releases link</span><br><span class="line"></span><br><span class="line"><span class="comment"># Please enter the commit message for your changes. Lines starting</span></span><br><span class="line"><span class="comment"># with &#x27;#&#x27; will be ignored, and an empty message aborts the commit.</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># Date:      Mon Dec 31 20:39:09 2018 +0800</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># interactive rebase in progress; onto 4830059</span></span><br><span class="line"><span class="comment"># Last commands done (2 commands done):</span></span><br><span class="line"><span class="comment">#    pick 34f8649 Add .editorconfig</span></span><br><span class="line"><span class="comment">#    squash 78a6bfc Add releases link</span></span><br><span class="line"><span class="comment"># No commands remaining.</span></span><br><span class="line"><span class="comment"># You are currently rebasing branch &#x27;master&#x27; on &#x27;4830059&#x27;.</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># Changes to be committed:</span></span><br><span class="line"><span class="comment">#    new file:   .editorconfig</span></span><br><span class="line"><span class="comment">#    modified:   README.md</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line">[detached HEAD f9fa04a] Integrating submission logs</span><br><span class="line"> Date: Mon Dec 31 20:39:09 2018 +0800</span><br><span class="line"> 2 files changed, 1 insertion(+)</span><br><span class="line"> create mode 100644 .editorconfig</span><br><span class="line">Successfully rebased and updated refs/heads/master.</span><br><span class="line"></span><br><span class="line">// 查看提交日志</span><br><span class="line">* f9fa04a (HEAD -&gt; master) Integrating submission logs</span><br><span class="line">*   4830059 (develop) Merge branch <span class="string">&#x27;develop&#x27;</span> to master</span><br><span class="line">|\</span><br><span class="line">| * 04a75c1 Add semver link</span><br><span class="line">* |   3bdd3fc Merge branch <span class="string">&#x27;develop&#x27;</span> to master</span><br><span class="line">|\ \</span><br><span class="line">| |/</span><br><span class="line">| * d48ea11 Add setup link</span><br><span class="line">|/</span><br><span class="line">*   3513802 Merge branch <span class="string">&#x27;develop&#x27;</span> to master</span><br><span class="line">|\</span><br><span class="line">| * 9ad35ee Add index.js</span><br><span class="line">| * 0bc04c2 Add index.css</span><br><span class="line">|/</span><br><span class="line">* 23a0a9e Rename index.php to index.html</span><br><span class="line">* da3c74c Add index.php</span><br><span class="line">* 7778db8 Add projects and requirements link</span><br><span class="line">* facc111 Add symfony website link</span><br><span class="line">* a384a2b Add README.md</span><br></pre></td></tr></table></figure>
<h2 id="整合间歇多次提交"><a href="#整合间歇多次提交" class="headerlink" title="整合间歇多次提交"></a>整合间歇多次提交</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ git <span class="built_in">log</span> --oneline --graph</span><br><span class="line">* f9fa04a (HEAD -&gt; master) Integrating submission logs</span><br><span class="line">*   4830059 (develop) Merge branch <span class="string">&#x27;develop&#x27;</span> to master</span><br><span class="line">|\</span><br><span class="line">| * 04a75c1 Add semver link</span><br><span class="line">* |   3bdd3fc Merge branch <span class="string">&#x27;develop&#x27;</span> to master</span><br><span class="line">|\ \</span><br><span class="line">| |/</span><br><span class="line">| * d48ea11 Add setup link</span><br><span class="line">|/</span><br><span class="line">*   3513802 Merge branch <span class="string">&#x27;develop&#x27;</span> to master</span><br><span class="line">|\</span><br><span class="line">| * 9ad35ee Add index.js</span><br><span class="line">| * 0bc04c2 Add index.css</span><br><span class="line">|/</span><br><span class="line">* 23a0a9e Rename index.php to index.html</span><br><span class="line">* da3c74c Add index.php</span><br><span class="line">* 7778db8 Add projects and requirements link</span><br><span class="line">* facc111 Add symfony website link</span><br><span class="line">* a384a2b Add README.md</span><br><span class="line"></span><br><span class="line">// 变基</span><br><span class="line">$ git rebase -i 23a0a9e</span><br><span class="line">弹出的编辑界面内容为：</span><br><span class="line">pick 23a0a9e</span><br><span class="line">s 0bc04c2 Add index.css <span class="comment"># 修改 pick 为 squash 或 s</span></span><br><span class="line">s 9ad35ee Add index.js <span class="comment"># 修改 pick 为 squash 或 s</span></span><br><span class="line">s d48ea11 Add setup link <span class="comment"># 修改 pick 为 squash 或 s</span></span><br><span class="line">s 04a75c1 Add semver link <span class="comment"># 修改 pick 为 squash 或 s</span></span><br><span class="line">pick f9fa04a Integrating submission logs</span><br><span class="line"></span><br><span class="line"><span class="comment"># Rebase 23a0a9e..f9fa04a onto 23a0a9e (5 commands)</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># Commands:</span></span><br><span class="line"><span class="comment"># p, pick = use commit</span></span><br><span class="line"><span class="comment"># r, reword = use commit, but edit the commit message</span></span><br><span class="line"><span class="comment"># e, edit = use commit, but stop for amending</span></span><br><span class="line"><span class="comment"># s, squash = use commit, but meld into previous commit</span></span><br><span class="line"><span class="comment"># f, fixup = like &quot;squash&quot;, but discard this commit&#x27;s log message</span></span><br><span class="line"><span class="comment"># x, exec = run command (the rest of the line) using shell</span></span><br><span class="line"><span class="comment"># d, drop = remove commit</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># These lines can be re-ordered; they are executed from top to bottom.</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># If you remove a line here THAT COMMIT WILL BE LOST.</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># However, if you remove everything, the rebase will be aborted.</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># Note that empty commits are commented out</span></span><br><span class="line">正常情况下会提示成功，否则会出现如下情况：</span><br><span class="line">The previous cherry-pick is now empty, possibly due to conflict resolution.</span><br><span class="line">If you wish to commit it anyway, use:</span><br><span class="line"></span><br><span class="line">    git commit --allow-empty</span><br><span class="line"></span><br><span class="line">Otherwise, please use <span class="string">&#x27;git reset&#x27;</span></span><br><span class="line">interactive rebase <span class="keyword">in</span> progress; onto 23a0a9e</span><br><span class="line">Last <span class="built_in">command</span> <span class="keyword">done</span> (1 <span class="built_in">command</span> <span class="keyword">done</span>):</span><br><span class="line">   pick 23a0a9e Add links and static file</span><br><span class="line">Next commands to <span class="keyword">do</span> (5 remaining commands):</span><br><span class="line">   squash 0bc04c2 Add index.css</span><br><span class="line">   squash 9ad35ee Add index.js</span><br><span class="line">You are currently rebasing branch <span class="string">&#x27;master&#x27;</span> on <span class="string">&#x27;23a0a9e&#x27;</span>.</span><br><span class="line"></span><br><span class="line">nothing to commit, working tree clean</span><br><span class="line">Could not apply 23a0a9e... Add links and static file</span><br><span class="line"></span><br><span class="line">// 查看状态</span><br><span class="line">$ git status</span><br><span class="line">interactive rebase <span class="keyword">in</span> progress; onto 23a0a9e</span><br><span class="line">Last <span class="built_in">command</span> <span class="keyword">done</span> (1 <span class="built_in">command</span> <span class="keyword">done</span>):</span><br><span class="line">   pick 23a0a9e</span><br><span class="line">Next commands to <span class="keyword">do</span> (8 remaining commands):</span><br><span class="line">   squash 04a75c1 Add semver link</span><br><span class="line">   squash d48ea11 Add setup link</span><br><span class="line">   squash 9ad35ee Add index.js</span><br><span class="line">   squash 0bc04c2 Add index.css</span><br><span class="line">  (use <span class="string">&quot;git rebase --edit-todo&quot;</span> to view and edit)</span><br><span class="line">You are currently editing a commit <span class="keyword">while</span> rebasing branch <span class="string">&#x27;master&#x27;</span> on <span class="string">&#x27;23a0a9e&#x27;</span>.</span><br><span class="line">  (use <span class="string">&quot;git commit --amend&quot;</span> to amend the current commit)</span><br><span class="line">  (use <span class="string">&quot;git rebase --continue&quot;</span> once you are satisfied with your changes)</span><br><span class="line"></span><br><span class="line">nothing to commit, working tree clean</span><br><span class="line"></span><br><span class="line">// 继续变基</span><br><span class="line">$ git rebase --<span class="built_in">continue</span></span><br><span class="line">继续后弹出的编辑界面内容：</span><br><span class="line"><span class="comment"># This is a combination of 5 commits.</span></span><br><span class="line">Add links and static file <span class="comment"># 添加一行日志信息</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># This is the 1st commit message:</span></span><br><span class="line"></span><br><span class="line">Rename index.php to index.html</span><br><span class="line"></span><br><span class="line"><span class="comment"># This is the commit message #2:</span></span><br><span class="line"></span><br><span class="line">Add index.css</span><br><span class="line"></span><br><span class="line"><span class="comment"># This is the commit message #3:</span></span><br><span class="line"></span><br><span class="line">Add index.js</span><br><span class="line"></span><br><span class="line"><span class="comment"># This is the commit message #4:</span></span><br><span class="line"></span><br><span class="line">Add setup link</span><br><span class="line"></span><br><span class="line"><span class="comment"># This is the commit message #5:</span></span><br><span class="line"></span><br><span class="line">Add semver link</span><br><span class="line"></span><br><span class="line"><span class="comment"># Please enter the commit message for your changes. Lines starting</span></span><br><span class="line"><span class="comment"># with &#x27;#&#x27; will be ignored, and an empty message aborts the commit.</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># Date:      Mon Dec 31 20:05:25 2018 +0800</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># interactive rebase in progress; onto 23a0a9e</span></span><br><span class="line"><span class="comment"># Last commands done (5 commands done):</span></span><br><span class="line"><span class="comment">#    squash d48ea11 Add setup link</span></span><br><span class="line"><span class="comment">#    squash 04a75c1 Add semver link</span></span><br><span class="line"><span class="comment"># Next command to do (1 remaining command):</span></span><br><span class="line"><span class="comment">#    pick f9fa04a Integrating submission logs</span></span><br><span class="line"><span class="comment"># You are currently rebasing branch &#x27;master&#x27; on &#x27;23a0a9e&#x27;.</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># Changes to be committed:</span></span><br><span class="line"><span class="comment">#    modified:   README.md</span></span><br><span class="line"><span class="comment">#    renamed:    index.php -&gt; index.css</span></span><br><span class="line"><span class="comment">#    new file:   index.html</span></span><br><span class="line"><span class="comment">#    new file:   index.js</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line">[detached HEAD 688088f] Add links and static file</span><br><span class="line"> Date: Mon Dec 31 20:05:25 2018 +0800</span><br><span class="line"> 4 files changed, 2 insertions(+)</span><br><span class="line"> rename index.php =&gt; index.css (100%)</span><br><span class="line"> create mode 100644 index.html</span><br><span class="line"> create mode 100644 index.js</span><br><span class="line">Successfully rebased and updated refs/heads/master.</span><br><span class="line"></span><br><span class="line">// 查看日志信息</span><br><span class="line">$ git <span class="built_in">log</span> --oneline --graph</span><br><span class="line">* fe3b3cf (HEAD -&gt; master) Integrating submission logs</span><br><span class="line">* 688088f Add links and static file</span><br><span class="line">* da3c74c Add index.php</span><br><span class="line">* 7778db8 Add projects and requirements link</span><br><span class="line">* facc111 Add symfony website link</span><br><span class="line">* a384a2b Add README.md</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>git</category>
      </categories>
      <tags>
        <tag>git</tag>
      </tags>
  </entry>
  <entry>
    <title>Git 命令大全</title>
    <url>/2020/09/07/git-collection-command/</url>
    <content><![CDATA[<p><img src="/images/2020/202009071423.png" alt="202009071423.png"></p>
<p>🗳 通往 Git 的路上并不总是那么一帆风顺，你是否和我一样总是为了那么一条应景的命令抓狂，貌似记得大概是这么操作的，但总是敲不对头，在披荆斩棘的千钧一发利刃竟然还没出鞘，真特么气人，为了解燃眉之急，我垫了一块超大的 Git 命令大全，但那是别人家的，我要的是自己收集整理的这种，还好，我整理了一份，总算是出了口恶气。</p>
<span id="more"></span>
<ul>
<li><a href="https://imajinyun.xyz/2018/01/22/git-started/"><code>Git 起步</code></a></li>
<li><a href="https://imajinyun.xyz/2018/01/23/git-basic/"><code>Git 基本操作</code></a></li>
<li><a href="https://imajinyun.xyz/2018/01/24/git-log/"><code>Git 查看日志</code></a></li>
<li><a href="https://imajinyun.xyz/2018/01/25/git-branch/"><code>Git 分支</code></a></li>
<li><a href="https://imajinyun.xyz/2018/01/27/git-multiple-accounts/"><code>Git 中一个客户端设置多个账号</code></a></li>
<li><a href="https://imajinyun.xyz/2018/05/01/git-workflow/"><code>Git Workflow</code></a></li>
<li><a href="https://imajinyun.xyz/2020/09/07/git-collection-command/"><strong>Git 命令大全</strong></a></li>
</ul>
<p>Git 命令分类：</p>
<ul>
<li>配置操作；</li>
<li>基本操作；</li>
<li>分支操作；</li>
<li>合并操作；</li>
<li>标签操作；</li>
<li>回滚操作；</li>
<li>日志操作；</li>
<li>远程操作；</li>
<li>统计操作；</li>
</ul>
<iframe id="embed_dom" name="embed_dom" frameborder="0" style="display:block;width:525px; height:245px;" src="https://www.processon.com/embed/5b630fa4e4b0edb750f75076"></iframe>

<p>另外，这一篇写的太水了，见谅。</p>
]]></content>
      <categories>
        <category>git</category>
      </categories>
      <tags>
        <tag>git</tag>
      </tags>
  </entry>
  <entry>
    <title>Git 查看日志</title>
    <url>/2018/01/24/git-log/</url>
    <content><![CDATA[<p>😇 在提交了若干更新之后，又或者克隆了某个项目，想回顾下提交历史，可以使用 git log 命令查看。</p>
<span id="more"></span>
<ul>
<li><a href="https://imajinyun.xyz/2018/01/22/git-started/"><code>Git 起步</code></a></li>
<li><a href="https://imajinyun.xyz/2018/01/23/git-basic/"><code>Git 基本操作</code></a></li>
<li><a href="https://imajinyun.xyz/2018/01/24/git-log/"><strong>Git 查看日志</strong></a></li>
<li><a href="https://imajinyun.xyz/2018/01/25/git-branch/"><code>Git 分支</code></a></li>
<li><a href="https://imajinyun.xyz/2018/01/27/git-multiple-accounts/"><code>Git 中一个客户端设置多个账号</code></a></li>
<li><a href="https://imajinyun.xyz/2018/05/01/git-workflow/"><code>Git Workflow</code></a></li>
<li><a href="https://imajinyun.xyz/2020/09/07/git-collection-command/"><code>Git 命令大全</code></a></li>
</ul>
<h1 id="常用选项"><a href="#常用选项" class="headerlink" title="常用选项"></a>常用选项</h1><table>
<thead>
<tr>
<th>选项</th>
<th>说明</th>
</tr>
</thead>
<tbody>
<tr>
<td><code>-p</code></td>
<td>按补丁格式显示每个更新之间的差异</td>
</tr>
<tr>
<td><code>--word-diff</code></td>
<td>按 <code>word diff</code> 格式显示差异</td>
</tr>
<tr>
<td><code>--stat</code></td>
<td>显示每次更新的文件修改统计信息</td>
</tr>
<tr>
<td><code>--shortstat</code></td>
<td>只显示 <code>--stat</code> 中最后的行数修改添加移除统计</td>
</tr>
<tr>
<td><code>--name-only</code></td>
<td>仅在提交信息后显示已修改的文件清单</td>
</tr>
<tr>
<td><code>--name-status</code></td>
<td>显示新增、修改、删除的文件清单</td>
</tr>
<tr>
<td><code>--abbrev-commit</code></td>
<td>仅显示 <code>SHA-1</code> 的前几个字符，而非所有的 <code>40</code> 个字符</td>
</tr>
<tr>
<td><code>--relative-date</code></td>
<td>使用较短的相对时间显示（比如：<code>2 weeks ago</code>）</td>
</tr>
<tr>
<td><code>--graph</code></td>
<td>显示 <code>ASCII</code> 图形表示的分支合并历史</td>
</tr>
<tr>
<td><code>--pretty</code></td>
<td>使用其他格式显示历史提交信息。可用的选项包括 <code>oneline, short, full, fuller</code> 和 <code>format</code>（后跟指定格式）</td>
</tr>
<tr>
<td><code>--oneline</code></td>
<td><code>--pretty=oneline --abbrev-commit</code> 的简化用法</td>
</tr>
</tbody>
</table>
<h1 id="项目准备"><a href="#项目准备" class="headerlink" title="项目准备"></a>项目准备</h1><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">// 此处以 vue 做演示</span><br><span class="line">$ <span class="built_in">cd</span> ~/Desktop/</span><br><span class="line">$ git <span class="built_in">clone</span> https://github.com/vuejs/vue.git</span><br><span class="line">Cloning into <span class="string">&#x27;vue&#x27;</span>...</span><br><span class="line">remote: Enumerating objects: 89, <span class="keyword">done</span>.</span><br><span class="line">remote: Counting objects: 100% (89/89), <span class="keyword">done</span>.</span><br><span class="line">remote: Compressing objects: 100% (64/64), <span class="keyword">done</span>.</span><br><span class="line">remote: Total 53631 (delta 38), reused 51 (delta 25), pack-reused 53542</span><br><span class="line">Receiving objects: 100% (53631/53631), 25.20 MiB | 1.76 MiB/s, <span class="keyword">done</span>.</span><br><span class="line">Resolving deltas: 100% (37410/37410), <span class="keyword">done</span>.</span><br><span class="line">$ <span class="built_in">cd</span> vue</span><br></pre></td></tr></table></figure>
<h1 id="普通格式查看"><a href="#普通格式查看" class="headerlink" title="普通格式查看"></a>普通格式查看</h1><h2 id="查看当前分支的所有简略日志"><a href="#查看当前分支的所有简略日志" class="headerlink" title="查看当前分支的所有简略日志"></a>查看当前分支的所有简略日志</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">commit 38e967b8067441ff37cb3b923200023a6b842759 (HEAD -&gt; dev, origin/dev, origin/HEAD)</span><br><span class="line">Author: Xin Du (Clark) &lt;clark.duxin@gmail.com&gt;</span><br><span class="line">Date:   Wed Dec 12 16:41:45 2018 +0000</span><br><span class="line"></span><br><span class="line">    refactor: tiny cleanup changes (<span class="comment">#9193)</span></span><br><span class="line"></span><br><span class="line">commit af9e2b3f0f4156fd52ed4444b96e2b8c0932c658</span><br><span class="line">Author: Nick Hall &lt;iamssb@gmail.com&gt;</span><br><span class="line">Date:   Thu Dec 13 01:41:36 2018 +0900</span><br><span class="line"></span><br><span class="line">    chore: minor comment cleanup (<span class="comment">#9191)</span></span><br><span class="line">    ...</span><br></pre></td></tr></table></figure>
<h2 id="查看所有分支的所有简略日志"><a href="#查看所有分支的所有简略日志" class="headerlink" title="查看所有分支的所有简略日志"></a>查看所有分支的所有简略日志</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ git <span class="built_in">log</span> --all</span><br><span class="line">commit ce35159d6d6e9c3607bd3232e386b5b994d0ec49 (origin/2.6)</span><br><span class="line">Author: Evan You &lt;yyx990803@gmail.com&gt;</span><br><span class="line">Date:   Wed Dec 26 17:22:32 2018 -0500</span><br><span class="line"></span><br><span class="line">    chore: fix types</span><br><span class="line"></span><br><span class="line">commit c7c13c2a156269d29fd9c9f8f6a3e53a2f2cac3d</span><br><span class="line">Author: Evan You &lt;yyx990803@gmail.com&gt;</span><br><span class="line">Date:   Wed Dec 26 17:17:30 2018 -0500</span><br><span class="line"></span><br><span class="line">    fix(scoped-slots): ensure <span class="variable">$scopedSlots</span> calls always <span class="built_in">return</span> Arrays</span><br><span class="line"></span><br><span class="line">    Also allow render <span class="built_in">functions</span> to <span class="built_in">return</span> an Array of a single element.</span><br><span class="line">    Close <span class="comment">#8056</span></span><br><span class="line"></span><br><span class="line">commit d747469e1ae26190d364e5cc9c8112d3d865a0b9</span><br><span class="line">Author: Evan You &lt;yyx990803@gmail.com&gt;</span><br><span class="line">Date:   Wed Dec 26 16:02:50 2018 -0500</span><br><span class="line"></span><br><span class="line">    <span class="built_in">test</span>: <span class="built_in">test</span> <span class="keyword">case</span> <span class="keyword">for</span> v-for native collection support</span><br><span class="line">    ...</span><br></pre></td></tr></table></figure>
<h2 id="查看某个文件变动的具体日志信息"><a href="#查看某个文件变动的具体日志信息" class="headerlink" title="查看某个文件变动的具体日志信息"></a>查看某个文件变动的具体日志信息</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ git <span class="built_in">log</span> -- src/core/index.js</span><br><span class="line">commit 9b22d86ab315a3c6061a6a4776eab1964304f92e</span><br><span class="line">Author: Evan You &lt;yyx990803@gmail.com&gt;</span><br><span class="line">Date:   Thu Mar 8 09:51:03 2018 -0500</span><br><span class="line"></span><br><span class="line">    fix: install ssr helpers <span class="keyword">for</span> functional context during SSR</span><br><span class="line"></span><br><span class="line">    close <span class="comment">#7443, ref nuxt/nuxt.js#2565</span></span><br><span class="line"></span><br><span class="line">commit 55816543c46e75aa53481ac95a89ff6f87a2d704</span><br><span class="line">Author: JK &lt;jingkai.zhao@foxmail.com&gt;</span><br><span class="line">Date:   Thu Jun 29 12:37:03 2017 +0800</span><br><span class="line"></span><br><span class="line">    fix(ssr): reference error when create <span class="variable">$ssrContext</span> <span class="keyword">for</span> root component (<span class="comment">#5981)</span></span><br><span class="line"></span><br><span class="line">    fix <span class="comment">#5941</span></span><br><span class="line">    ...</span><br></pre></td></tr></table></figure>
<h2 id="查看某个文件变动的具体日志信息和文件内容"><a href="#查看某个文件变动的具体日志信息和文件内容" class="headerlink" title="查看某个文件变动的具体日志信息和文件内容"></a>查看某个文件变动的具体日志信息和文件内容</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ git <span class="built_in">log</span> --follow -p -- src/core/index.js</span><br><span class="line">commit 9b22d86ab315a3c6061a6a4776eab1964304f92e</span><br><span class="line">Author: Evan You &lt;yyx990803@gmail.com&gt;</span><br><span class="line">Date:   Thu Mar 8 09:51:03 2018 -0500</span><br><span class="line"></span><br><span class="line">    fix: install ssr helpers <span class="keyword">for</span> functional context during SSR</span><br><span class="line"></span><br><span class="line">    close <span class="comment">#7443, ref nuxt/nuxt.js#2565</span></span><br><span class="line"></span><br><span class="line">diff --git a/src/core/index.js b/src/core/index.js</span><br><span class="line">index b2a0cb8c..daf6203b 100644</span><br><span class="line">--- a/src/core/index.js</span><br><span class="line">+++ b/src/core/index.js</span><br><span class="line">@@ -1,6 +1,7 @@</span><br><span class="line"> import Vue from <span class="string">&#x27;./instance/index&#x27;</span></span><br><span class="line"> import &#123; initGlobalAPI &#125; from <span class="string">&#x27;./global-api/index&#x27;</span></span><br><span class="line"> import &#123; isServerRendering &#125; from <span class="string">&#x27;core/util/env&#x27;</span></span><br><span class="line">+import &#123; FunctionalRenderContext &#125; from <span class="string">&#x27;core/vdom/create-functional-component&#x27;</span></span><br><span class="line">...</span><br></pre></td></tr></table></figure>
<h2 id="查看最近两次更新的内容差异"><a href="#查看最近两次更新的内容差异" class="headerlink" title="查看最近两次更新的内容差异"></a>查看最近两次更新的内容差异</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ git <span class="built_in">log</span> -p -2</span><br><span class="line">commit 38e967b8067441ff37cb3b923200023a6b842759 (HEAD -&gt; dev, origin/dev, origin/HEAD)</span><br><span class="line">Author: Xin Du (Clark) &lt;clark.duxin@gmail.com&gt;</span><br><span class="line">Date:   Wed Dec 12 16:41:45 2018 +0000</span><br><span class="line"></span><br><span class="line">    refactor: tiny cleanup changes (<span class="comment">#9193)</span></span><br><span class="line"></span><br><span class="line">diff --git a/src/core/instance/events.js b/src/core/instance/events.js</span><br><span class="line">index 8225bdec..bb07a96b 100644</span><br><span class="line">--- a/src/core/instance/events.js</span><br><span class="line">+++ b/src/core/instance/events.js</span><br><span class="line">@@ -102,16 +102,14 @@ <span class="built_in">export</span> <span class="keyword">function</span> eventsMixin (Vue: Class&lt;Component&gt;) &#123;</span><br><span class="line">       vm._events[event] = null</span><br><span class="line">       <span class="built_in">return</span> vm</span><br><span class="line">     &#125;</span><br><span class="line">-    <span class="keyword">if</span> (fn) &#123;</span><br><span class="line">-      // specific handler</span><br><span class="line">-      <span class="built_in">let</span> cb</span><br><span class="line">-      <span class="built_in">let</span> i = cbs.length</span><br><span class="line">-      <span class="keyword">while</span> (i--) &#123;</span><br><span class="line">-        cb = cbs[i]</span><br><span class="line">-        <span class="keyword">if</span> (cb === fn || cb.fn === fn) &#123;</span><br><span class="line">-          cbs.splice(i, 1)</span><br><span class="line">-          <span class="built_in">break</span></span><br><span class="line">-        &#125;</span><br><span class="line">+    // specific handler</span><br><span class="line">+    <span class="built_in">let</span> cb</span><br><span class="line">+    <span class="built_in">let</span> i = cbs.length</span><br><span class="line">+    <span class="keyword">while</span> (i--) &#123;</span><br><span class="line">+      cb = cbs[i]</span><br><span class="line">+      <span class="keyword">if</span> (cb === fn || cb.fn === fn) &#123;</span><br><span class="line">+        cbs.splice(i, 1)</span><br><span class="line">+        <span class="built_in">break</span></span><br><span class="line">       &#125;</span><br><span class="line">     &#125;</span><br><span class="line">     <span class="built_in">return</span> vm</span><br><span class="line">...</span><br></pre></td></tr></table></figure>
<h2 id="查看最近的三条的简略日志"><a href="#查看最近的三条的简略日志" class="headerlink" title="查看最近的三条的简略日志"></a>查看最近的三条的简略日志</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ git <span class="built_in">log</span> --oneline -n3</span><br><span class="line">38e967b8 (HEAD -&gt; dev, origin/dev, origin/HEAD) refactor: tiny cleanup changes (<span class="comment">#9193)</span></span><br><span class="line">af9e2b3f chore: minor comment cleanup (<span class="comment">#9191)</span></span><br><span class="line">b06c784b fix(ssr): support rendering comment (<span class="comment">#9128)</span></span><br></pre></td></tr></table></figure>
<h2 id="显示简要的增改行数统计"><a href="#显示简要的增改行数统计" class="headerlink" title="显示简要的增改行数统计"></a>显示简要的增改行数统计</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ git <span class="built_in">log</span> --<span class="built_in">stat</span></span><br><span class="line">commit 38e967b8067441ff37cb3b923200023a6b842759 (HEAD -&gt; dev, origin/dev, origin/HEAD)</span><br><span class="line">Author: Xin Du (Clark) &lt;clark.duxin@gmail.com&gt;</span><br><span class="line">Date:   Wed Dec 12 16:41:45 2018 +0000</span><br><span class="line"></span><br><span class="line">    refactor: tiny cleanup changes (<span class="comment">#9193)</span></span><br><span class="line"></span><br><span class="line"> src/core/instance/events.js           | 18 ++++++++----------</span><br><span class="line"> src/core/util/debug.js                |  2 +-</span><br><span class="line"> src/server/template-renderer/index.js |  2 +-</span><br><span class="line"> 3 files changed, 10 insertions(+), 12 deletions(-)</span><br><span class="line"></span><br><span class="line">commit af9e2b3f0f4156fd52ed4444b96e2b8c0932c658</span><br><span class="line">Author: Nick Hall &lt;iamssb@gmail.com&gt;</span><br><span class="line">Date:   Thu Dec 13 01:41:36 2018 +0900</span><br><span class="line"></span><br><span class="line">    chore: minor comment cleanup (<span class="comment">#9191)</span></span><br><span class="line"></span><br><span class="line"> src/core/observer/dep.js | 6 +++---</span><br><span class="line"> 1 file changed, 3 insertions(+), 3 deletions(-)</span><br><span class="line"></span><br><span class="line">commit b06c784b81a244e1bc2d028216fcd2ab873730b9</span><br><span class="line">Author: Xin Du (Clark) &lt;clark.duxin@gmail.com&gt;</span><br><span class="line">Date:   Wed Dec 12 16:41:08 2018 +0000</span><br><span class="line"></span><br><span class="line">    fix(ssr): support rendering comment (<span class="comment">#9128)</span></span><br><span class="line"></span><br><span class="line"> src/server/optimizing-compiler/codegen.js                  |  6 +++++-</span><br><span class="line"> <span class="built_in">test</span>/unit/modules/server-compiler/compiler-options.spec.js | 13 +++++++++++++</span><br><span class="line"> 2 files changed, 18 insertions(+), 1 deletion(-)</span><br></pre></td></tr></table></figure>
<h2 id="显示最后一次提交信息"><a href="#显示最后一次提交信息" class="headerlink" title="显示最后一次提交信息"></a>显示最后一次提交信息</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ git <span class="built_in">log</span> -1 HEAD</span><br><span class="line"> commit 38e967b8067441ff37cb3b923200023a6b842759 (HEAD -&gt; dev, origin/dev, origin/HEAD)</span><br><span class="line">Author: Xin Du (Clark) &lt;clark.duxin@gmail.com&gt;</span><br><span class="line">Date:   Wed Dec 12 16:41:45 2018 +0000</span><br><span class="line"></span><br><span class="line">    refactor: tiny cleanup changes (<span class="comment">#9193)</span></span><br></pre></td></tr></table></figure>
<h2 id="查看文件改变信息"><a href="#查看文件改变信息" class="headerlink" title="查看文件改变信息"></a>查看文件改变信息</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ git <span class="built_in">log</span> --name-status</span><br><span class="line">commit 38e967b8067441ff37cb3b923200023a6b842759 (HEAD -&gt; dev, origin/dev, origin/HEAD)</span><br><span class="line">Author: Xin Du (Clark) &lt;clark.duxin@gmail.com&gt;</span><br><span class="line">Date:   Wed Dec 12 16:41:45 2018 +0000</span><br><span class="line"></span><br><span class="line">    refactor: tiny cleanup changes (<span class="comment">#9193)</span></span><br><span class="line"></span><br><span class="line">M       src/core/instance/events.js</span><br><span class="line">M       src/core/util/debug.js</span><br><span class="line">M       src/server/template-renderer/index.js</span><br><span class="line"></span><br><span class="line">commit af9e2b3f0f4156fd52ed4444b96e2b8c0932c658</span><br><span class="line">Author: Nick Hall &lt;iamssb@gmail.com&gt;</span><br><span class="line">Date:   Thu Dec 13 01:41:36 2018 +0900</span><br><span class="line"></span><br><span class="line">    chore: minor comment cleanup (<span class="comment">#9191)</span></span><br><span class="line"></span><br><span class="line">M       src/core/observer/dep.js</span><br><span class="line"></span><br><span class="line">commit b06c784b81a244e1bc2d028216fcd2ab873730b9</span><br><span class="line">Author: Xin Du (Clark) &lt;clark.duxin@gmail.com&gt;</span><br><span class="line">Date:   Wed Dec 12 16:41:08 2018 +0000</span><br><span class="line"></span><br><span class="line">    fix(ssr): support rendering comment (<span class="comment">#9128)</span></span><br><span class="line"></span><br><span class="line">M       src/server/optimizing-compiler/codegen.js</span><br><span class="line">A       <span class="built_in">test</span>/unit/modules/server-compiler/compiler-options.spec.js</span><br></pre></td></tr></table></figure>
<h1 id="指定格式查看"><a href="#指定格式查看" class="headerlink" title="指定格式查看"></a>指定格式查看</h1><p><code>git log --pretty=format</code> 常用的选项：</p>
<table>
<thead>
<tr>
<th>选项</th>
<th>说明</th>
</tr>
</thead>
<tbody>
<tr>
<td><code>%H</code></td>
<td>提交对象（<code>commit</code>）的完整哈希字串</td>
</tr>
<tr>
<td><code>%h</code></td>
<td>提交对象的简短哈希字串</td>
</tr>
<tr>
<td><code>%T</code></td>
<td>树对象（tree）的完整哈希字串</td>
</tr>
<tr>
<td><code>%t</code></td>
<td>树对象的简短哈希字串</td>
</tr>
<tr>
<td><code>%P</code></td>
<td>父对象（parent）的完整哈希字串</td>
</tr>
<tr>
<td><code>%p</code></td>
<td>父对象的简短哈希字串</td>
</tr>
<tr>
<td><code>%an</code></td>
<td>作者（author）的名字</td>
</tr>
<tr>
<td><code>%ae</code></td>
<td>作者的电子邮件地址</td>
</tr>
<tr>
<td><code>%ad</code></td>
<td>作者修订日期（可以用 <code>-date=</code> 选项定制格式）</td>
</tr>
<tr>
<td><code>%ar</code></td>
<td>作者修订日期，按多久以前的方式显示</td>
</tr>
<tr>
<td><code>%cn</code></td>
<td>提交者（committer）的名字</td>
</tr>
<tr>
<td><code>%ce</code></td>
<td>提交者的电子邮件地址</td>
</tr>
<tr>
<td><code>%cd</code></td>
<td>提交日期</td>
</tr>
<tr>
<td><code>%cr</code></td>
<td>提交日期，按多久以前的方式显示</td>
</tr>
<tr>
<td><code>%s</code></td>
<td>提交说明</td>
</tr>
</tbody>
</table>
<p><code>git log</code> 输出的选项：</p>
<table>
<thead>
<tr>
<th>选项</th>
<th>说明</th>
</tr>
</thead>
<tbody>
<tr>
<td><code>-(n)</code></td>
<td>仅显示最近的 n 条提交</td>
</tr>
<tr>
<td><code>--since, --after</code></td>
<td>仅显示指定时间之后的提交</td>
</tr>
<tr>
<td><code>--until, --before</code></td>
<td>仅显示指定时间之前的提交</td>
</tr>
<tr>
<td><code>--author</code></td>
<td>仅显示指定作者相关的提交</td>
</tr>
<tr>
<td><code>--committer</code></td>
<td>仅显示指定提交者相关的提交</td>
</tr>
<tr>
<td><code>--grep</code></td>
<td>仅显示含指定关键字的提交</td>
</tr>
<tr>
<td><code>-S</code></td>
<td>仅显示添加或移除了某个关键字的提交</td>
</tr>
</tbody>
</table>
<h2 id="用-oneline-将每个提交放在一行显示"><a href="#用-oneline-将每个提交放在一行显示" class="headerlink" title="用 oneline 将每个提交放在一行显示"></a>用 oneline 将每个提交放在一行显示</h2><blockquote>
<p>这在提交数很大时非常有用。另外还有 <code>short</code>，<code>full</code> 和 <code>fuller</code> 可选。</p>
</blockquote>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ git <span class="built_in">log</span> --pretty=oneline</span><br><span class="line">38e967b8067441ff37cb3b923200023a6b842759 (HEAD -&gt; dev, origin/dev, origin/HEAD) refactor: tiny cleanup changes (<span class="comment">#9193)</span></span><br><span class="line">af9e2b3f0f4156fd52ed4444b96e2b8c0932c658 chore: minor comment cleanup (<span class="comment">#9191)</span></span><br><span class="line">b06c784b81a244e1bc2d028216fcd2ab873730b9 fix(ssr): support rendering comment (<span class="comment">#9128)</span></span><br><span class="line">70754084ec2d84e44effeb8f82efda3397a08b0d (tag: v2.5.21) build: release 2.5.21</span><br><span class="line">...</span><br></pre></td></tr></table></figure>
<h2 id="自定义格式查看日志"><a href="#自定义格式查看日志" class="headerlink" title="自定义格式查看日志"></a>自定义格式查看日志</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ git <span class="built_in">log</span> --pretty=format:<span class="string">&quot;%h - %an, %ar : %s&quot;</span></span><br><span class="line">38e967b8 - Xin Du (Clark), 3 weeks ago : refactor: tiny cleanup changes (<span class="comment">#9193)</span></span><br><span class="line">af9e2b3f - Nick Hall, 3 weeks ago : chore: minor comment cleanup (<span class="comment">#9191)</span></span><br><span class="line">b06c784b - Xi   n Du (Clark), 3 weeks ago : fix(ssr): support rendering comment (<span class="comment">#9128)</span></span><br><span class="line">70754084 - Evan You, 3 weeks ago : build: release 2.5.21</span><br><span class="line"></span><br><span class="line">$ git <span class="built_in">log</span> --color --graph --pretty=format:<span class="string">&#x27;%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)&lt;%an&gt;%Creset&#x27;</span> --abbrev-commit</span><br><span class="line">* 38e967b8 - (HEAD -&gt; dev, origin/dev, origin/HEAD) refactor: tiny cleanup changes (<span class="comment">#9193) (3 weeks ago) &lt;Xin Du (Clark)&gt;</span></span><br><span class="line">* af9e2b3f - chore: minor comment cleanup (<span class="comment">#9191) (3 weeks ago) &lt;Nick Hall&gt;</span></span><br><span class="line">* b06c784b - fix(ssr): support rendering comment (<span class="comment">#9128) (3 weeks ago) &lt;Xin Du (Clark)&gt;</span></span><br><span class="line">* 70754084 - (tag: v2.5.21) build: release 2.5.21 (3 weeks ago) &lt;Evan You&gt;</span><br><span class="line">* b449e17e - build: build 2.5.21 (3 weeks ago) &lt;Evan You&gt;</span><br></pre></td></tr></table></figure>
<h2 id="图文格式查看"><a href="#图文格式查看" class="headerlink" title="图文格式查看"></a>图文格式查看</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ git <span class="built_in">log</span> --pretty=oneline --graph --abbrev-commit</span><br><span class="line">*   5f737e836e (HEAD -&gt; master, origin/master, origin/HEAD) feature <span class="comment">#29613 [VarDumper] Use hyperlinks in CliDescriptor (ogizanagi)</span></span><br><span class="line">|\</span><br><span class="line">| * e54e21933a [VarDumper] Use hyperlinks <span class="keyword">in</span> CliDescriptor</span><br><span class="line">* |   55113775c0 Merge branch <span class="string">&#x27;4.2&#x27;</span></span><br><span class="line">|\ \</span><br><span class="line">| * | 9ade0a7605 [Cache] fix <span class="built_in">test</span></span><br><span class="line">* | |   96285882cf Merge branch <span class="string">&#x27;4.2&#x27;</span></span><br><span class="line">|\ \ \</span><br><span class="line">| |/ /</span><br><span class="line">| * |   43dfbe2df9 bug <span class="comment">#29648 [Cache] fix Simple\Psr6Cache proxying of metadata (nicolas-grekas)</span></span><br><span class="line">| |\ \</span><br><span class="line">| | * | 02edc9b049 [Cache] fix Simple\Psr6Cache proxying of metadata</span><br><span class="line">| |/ /</span><br><span class="line"></span><br><span class="line">$ git <span class="built_in">log</span> --pretty=format:<span class="string">&quot;%h %s&quot;</span> --graph</span><br><span class="line">*   5f737e836e feature <span class="comment">#29613 [VarDumper] Use hyperlinks in CliDescriptor (ogizanagi)</span></span><br><span class="line">|\</span><br><span class="line">| * e54e21933a [VarDumper] Use hyperlinks <span class="keyword">in</span> CliDescriptor</span><br><span class="line">* |   55113775c0 Merge branch <span class="string">&#x27;4.2&#x27;</span></span><br><span class="line">|\ \</span><br><span class="line">| * | 9ade0a7605 [Cache] fix <span class="built_in">test</span></span><br><span class="line">* | |   96285882cf Merge branch <span class="string">&#x27;4.2&#x27;</span></span><br></pre></td></tr></table></figure>
<h2 id="通过-ASCII-树形结构来展示所有的分支"><a href="#通过-ASCII-树形结构来展示所有的分支" class="headerlink" title="通过 ASCII 树形结构来展示所有的分支"></a>通过 ASCII 树形结构来展示所有的分支</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ git <span class="built_in">log</span> --graph --oneline --decorate --all</span><br><span class="line">* 17d7a5f6 chore: update sponsors</span><br><span class="line">| * c8139015 (origin/feat-scoped-slot-passdown) <span class="built_in">test</span>: add slot <span class="built_in">test</span> <span class="keyword">case</span> (<span class="comment">#8344)</span></span><br><span class="line">| * bb06c75e feat(core): support passing down scopedSlots with v-bind</span><br><span class="line">| | * 636c9b4e (tag: v2.5.17, origin/hotfix) build: release 2.5.17</span><br><span class="line">| | * 7e75b79b build: build 2.5.17</span><br><span class="line">| | * b3c5e642 chore: minor tweaks</span><br><span class="line">| | * c28f7929 fix: fix potential xss vulnerability <span class="keyword">in</span> ssr</span><br><span class="line">| |/</span><br><span class="line">|/|</span><br><span class="line">* | 25342194 (tag: v2.5.16) build: release 2.5.16</span><br><span class="line">* | 90891709 build: build 2.5.16</span><br><span class="line">* | 62a922e8 fix: fix wrongly matched named slots <span class="keyword">in</span> functional components</span><br><span class="line">| | * 0f4e6a9a (origin/fix-component-insert-order) fix: invoke component node create hooks before insertion</span><br><span class="line">| |/</span><br><span class="line">|/|</span><br><span class="line">| | * 531cea58 (origin/perf-computed) perf: avoid unnecessary re-renders when computed property value did not change</span><br><span class="line">| |/</span><br><span class="line">|/|</span><br><span class="line">| | * ca2e6a74 (origin/fix-beforeupdate) fix: beforeUpdate should be called before render and allow state mutation</span><br><span class="line">| |/</span><br><span class="line">|/|</span><br></pre></td></tr></table></figure>
<h1 id="限制格式输出"><a href="#限制格式输出" class="headerlink" title="限制格式输出"></a>限制格式输出</h1><table>
<thead>
<tr>
<th>选项</th>
<th>说明</th>
</tr>
</thead>
<tbody>
<tr>
<td><code>-(n)</code></td>
<td>仅显示最近的 <code>n</code> 条提交</td>
</tr>
<tr>
<td><code>--since, --after</code></td>
<td>仅显示指定时间之后的提交</td>
</tr>
<tr>
<td><code>--until, --before</code></td>
<td>仅显示指定时间之前的提交</td>
</tr>
<tr>
<td><code>--author</code></td>
<td><code>仅显示指定作者相关的提交</code></td>
</tr>
<tr>
<td><code>--committer</code></td>
<td><code>仅显示指定提交者相关的提交</code></td>
</tr>
</tbody>
</table>
<h2 id="显示三周之后的提交"><a href="#显示三周之后的提交" class="headerlink" title="显示三周之后的提交"></a>显示三周之后的提交</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ git <span class="built_in">log</span> --after=3.weeks</span><br><span class="line">commit 38e967b8067441ff37cb3b923200023a6b842759 (HEAD -&gt; dev, origin/dev, origin/HEAD)</span><br><span class="line">Author: Xin Du (Clark) &lt;clark.duxin@gmail.com&gt;</span><br><span class="line">Date:   Wed Dec 12 16:41:45 2018 +0000</span><br><span class="line"></span><br><span class="line">    refactor: tiny cleanup changes (<span class="comment">#9193)</span></span><br><span class="line"></span><br><span class="line">commit af9e2b3f0f4156fd52ed4444b96e2b8c0932c658</span><br><span class="line">Author: Nick Hall &lt;iamssb@gmail.com&gt;</span><br><span class="line">Date:   Thu Dec 13 01:41:36 2018 +0900</span><br><span class="line"></span><br><span class="line">    chore: minor comment cleanup (<span class="comment">#9191)</span></span><br></pre></td></tr></table></figure>
<h2 id="显示两周之前的提交"><a href="#显示两周之前的提交" class="headerlink" title="显示两周之前的提交"></a>显示两周之前的提交</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ git <span class="built_in">log</span> --before=2.weeks</span><br><span class="line">commit 38e967b8067441ff37cb3b923200023a6b842759 (HEAD -&gt; dev, origin/dev, origin/HEAD)</span><br><span class="line">Author: Xin Du (Clark) &lt;clark.duxin@gmail.com&gt;</span><br><span class="line">Date:   Wed Dec 12 16:41:45 2018 +0000</span><br><span class="line"></span><br><span class="line">    refactor: tiny cleanup changes (<span class="comment">#9193)</span></span><br><span class="line"></span><br><span class="line">commit af9e2b3f0f4156fd52ed4444b96e2b8c0932c658</span><br><span class="line">Author: Nick Hall &lt;iamssb@gmail.com&gt;</span><br><span class="line">Date:   Thu Dec 13 01:41:36 2018 +0900</span><br><span class="line"></span><br><span class="line">    chore: minor comment cleanup (<span class="comment">#9191)</span></span><br></pre></td></tr></table></figure>
<h2 id="显示指定人提交日志"><a href="#显示指定人提交日志" class="headerlink" title="显示指定人提交日志"></a>显示指定人提交日志</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">// 查看 2018 年元月期间，Evan You 提交的但未合并的位于项目 ./src 目录下的代码</span><br><span class="line">$ git <span class="built_in">log</span> --pretty=<span class="string">&quot;%h - %s&quot;</span> --author=<span class="string">&#x27;Evan You&#x27;</span> --after=<span class="string">&quot;2018-12-01&quot;</span> \</span><br><span class="line">--before=<span class="string">&quot;2018-12-31&quot;</span> --no-merges -- ./src</span><br><span class="line">847e4937 - fix: fix single v-for child optimization</span><br><span class="line">4074104f - perf: skip normalization on single child element v-for</span><br><span class="line">47487607 - fix: fix v-for component with undefined value</span><br><span class="line">0d4b35f5 - fix(vdom): remove unnecessary sameVnode condition</span><br><span class="line">5d721a42 - revert: fix(sfc): avoid deindent when pad option is specified (<span class="comment">#7647)</span></span><br><span class="line">780dac56 - fix(ssr): should not warn <span class="keyword">for</span> custom directives that <span class="keyword">do</span> not have ssr implementation</span><br><span class="line">8a2dbf50 - fix(transition-group): fix activeInstance regression</span><br><span class="line">f077ed17 - fix(ssr): fix ssr template publicPath generation</span><br><span class="line">1b4a8a0c - fix(compiler): fix codegen <span class="keyword">for</span> v-for component inside template</span><br><span class="line">e4b1b57f - fix(ssr): adjust call stack size defer threshold</span><br><span class="line">530ca1b2 - fix(core): properly handle reused vnodes</span><br><span class="line">097f6229 - fix(core): avoid mutating original children when cloning vnode</span><br><span class="line"></span><br><span class="line">$ git <span class="built_in">log</span> --before=&#123;2,weeks,ago&#125; --after=&#123;2018-11-30&#125; --oneline</span><br><span class="line">38e967b8 (HEAD -&gt; dev, origin/dev, origin/HEAD) refactor: tiny cleanup changes (<span class="comment">#9193)</span></span><br><span class="line">af9e2b3f chore: minor comment cleanup (<span class="comment">#9191)</span></span><br><span class="line">b06c784b fix(ssr): support rendering comment (<span class="comment">#9128)</span></span><br><span class="line">70754084 (tag: v2.5.21) build: release 2.5.21</span><br><span class="line">b449e17e build: build 2.5.21</span><br><span class="line">...</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>git</category>
      </categories>
      <tags>
        <tag>git</tag>
      </tags>
  </entry>
  <entry>
    <title>Git 中一个客户端设置多个账号</title>
    <url>/2018/01/27/git-multiple-accounts/</url>
    <content><![CDATA[<p>😢 最近遇到这样的需求，需要在一台电脑上同时使用两个 <code>github</code> 账号，负责不同的用途，比如：一个用来写个人项目，一个用来写公司的项目。</p>
<span id="more"></span>
<ul>
<li><a href="https://imajinyun.xyz/2018/01/22/git-started/"><code>Git 起步</code></a></li>
<li><a href="https://imajinyun.xyz/2018/01/23/git-basic/"><code>Git 基本操作</code></a></li>
<li><a href="https://imajinyun.xyz/2018/01/24/git-log/"><code>Git 查看日志</code></a></li>
<li><a href="https://imajinyun.xyz/2018/01/25/git-branch/"><code>Git 分支</code></a></li>
<li><a href="https://imajinyun.xyz/2018/01/27/git-multiple-accounts/"><strong>Git 中一个客户端设置多个账号</strong></a></li>
<li><a href="https://imajinyun.xyz/2018/05/01/git-workflow/"><code>Git Workflow</code></a></li>
<li><a href="https://imajinyun.xyz/2020/09/07/git-collection-command/"><code>Git 命令大全</code></a></li>
</ul>
<h1 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h1><h2 id="注册两个-git-账号"><a href="#注册两个-git-账号" class="headerlink" title="注册两个 git 账号"></a>注册两个 git 账号</h2><blockquote>
<p>选择一个平台注册两个账号即可。</p>
</blockquote>
<ul>
<li><a href="https://github.com/"><code>GitHub</code></a></li>
<li><a href="https://gitee.com/"><code>Gitee</code></a></li>
<li><a href="https://coding.net/"><code>Coding</code></a></li>
<li><a href="https://bitbucket.org/"><code>Bitbucket</code></a></li>
<li><a href="https://gitlab.com/explore"><code>GitLab</code></a></li>
</ul>
<h2 id="取消全局设置的用户名和邮箱"><a href="#取消全局设置的用户名和邮箱" class="headerlink" title="取消全局设置的用户名和邮箱"></a>取消全局设置的用户名和邮箱</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">// 取消全局用户名和邮箱</span><br><span class="line">$ git config --global --<span class="built_in">unset</span> user.name</span><br><span class="line">$ git config --global --<span class="built_in">unset</span> user.email</span><br></pre></td></tr></table></figure>
<h1 id="SSH-配置"><a href="#SSH-配置" class="headerlink" title="SSH 配置"></a>SSH 配置</h1><h2 id="生成私钥和公钥"><a href="#生成私钥和公钥" class="headerlink" title="生成私钥和公钥"></a>生成私钥和公钥</h2><blockquote>
<p>如果用户家目录下没有 <code>.ssh</code> 目录，请自行创建<br>由于我注册多家平台的 <code>git</code> 账号，所以对其进行了一个文件目录分类</p>
</blockquote>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ mkdir -pv ~/.ssh/github <span class="comment"># gitee|coding|bitbucket|gitlab</span></span><br><span class="line">$ ssh-keygen -t rsa -C <span class="string">&quot;myfirst@gmail.com&quot;</span> <span class="comment"># 在回车提示中输入完整路径，如：/path/to/user/.ssh/github/id_myfirst_rsa</span></span><br><span class="line">Generating public/private rsa key pair.</span><br><span class="line">Enter file <span class="keyword">in</span> <span class="built_in">which</span> to save the key (/path/to/user/.ssh/id_rsa):/path/to/user/.ssh/github/id_myfirst_rsa</span><br><span class="line">$ ssh-keygen -t rsa -C <span class="string">&quot;mysecond@gmail.com&quot;</span> <span class="comment"># 在回车提示中输入完整路径，如：/path/to/user/.ssh/github/id_mysecond_rsa</span></span><br><span class="line">Generating public/private rsa key pair.</span><br><span class="line">Enter file <span class="keyword">in</span> <span class="built_in">which</span> to save the key (/path/to/user/.ssh/id_rsa):/path/to/user/.ssh/github/id_mysecond_rsa</span><br></pre></td></tr></table></figure>
<h2 id="分别配置两个账号的-SSH-and-GPG-keys"><a href="#分别配置两个账号的-SSH-and-GPG-keys" class="headerlink" title="分别配置两个账号的 SSH and GPG keys"></a>分别配置两个账号的 SSH and GPG keys</h2><p>在 <code>Settings</code> 控制面板中找到 <code>SSH and GPG keys</code>，点击 <code>New SSH Key</code> 进行添加，<code>Title</code> 请自行决定。</p>
<p><img src="https://inotes.oss-cn-beijing.aliyuncs.com/git/201901/github-new-ssh-key.jpg" alt="github-new-ssh-key.jpg"></p>
<h2 id="将密钥添加到-ssh-agent-的会话中"><a href="#将密钥添加到-ssh-agent-的会话中" class="headerlink" title="将密钥添加到 ssh-agent 的会话中"></a>将密钥添加到 ssh-agent 的会话中</h2><blockquote>
<p>如果执行 <code>ssh-add</code> 时显示错误 <code>Could not open a connection to your authentication agent.</code> 那么执行 <code>eval ssh-agent -s</code>。</p>
</blockquote>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ ssh-add -K ~/.ssh/github/id_myfirst_rsa</span><br><span class="line">Identity added: /path/to/.ssh/github/id_myfirst_rsa (/path/to/.ssh/github/id_myfirst_rsa)</span><br><span class="line">$ ssh-add -K ~/.ssh/github/id_mysecond_rsa</span><br><span class="line">Identity added: /path/to/.ssh/github/id_mysecond_rsa (/path/to/.ssh/github/id_mysecond_rsa)</span><br></pre></td></tr></table></figure>
<h2 id="查看-ssh-key-的设置"><a href="#查看-ssh-key-的设置" class="headerlink" title="查看 ssh key 的设置"></a>查看 ssh key 的设置</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ ssh-add -l</span><br><span class="line">2048 SHA256:ai3jRoAfkqgB2LYtJuQR8QZN1F5XXXXXXXXXXXXXXXX /path/to/.ssh/github/id_myfirst_rsa (RSA)</span><br><span class="line">2048 SHA256:AL2jRoAfkqgB2LYtJuQR8QZN1F5XXXXXXXXXXXXXXXX /path/to/.ssh/github/id_mysecond_rsa (RSA)</span><br></pre></td></tr></table></figure>
<h2 id="修改-ssh-config-文件"><a href="#修改-ssh-config-文件" class="headerlink" title="修改 ssh config 文件"></a>修改 ssh config 文件</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ vim ~/.ssh/config</span><br><span class="line">Host *</span><br><span class="line">    KexAlgorithms +diffie-hellman-group1-sha1</span><br><span class="line"><span class="comment"># default: myfirst</span></span><br><span class="line">Host github.com</span><br><span class="line">    HostName github.com</span><br><span class="line">    User myfirst</span><br><span class="line">    PreferredAuthentications publickey</span><br><span class="line">    IdentityFile ~/.ssh/github/id_myfirst_rsa</span><br><span class="line"><span class="comment"># mysecond</span></span><br><span class="line">Host mysecond.github.com</span><br><span class="line">    HostName github.com</span><br><span class="line">    User mysecond</span><br><span class="line">    PreferredAuthentications publickey</span><br><span class="line">    IdentityFile ~/.ssh/github/id_mysecond_rsa</span><br></pre></td></tr></table></figure>
<h2 id="测试连通性"><a href="#测试连通性" class="headerlink" title="测试连通性"></a>测试连通性</h2><blockquote>
<p><code>mysecond.github.com</code> 需要配置 <code>GitHub</code> 的 <code>Host</code>。</p>
</blockquote>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">// 测试默认用户 myfirst 的连接性</span><br><span class="line">$ ssh -T git@github.com</span><br><span class="line">Hi myfirst! You\<span class="string">&#x27;ve successfully authenticated, but GitHub does not provide shell access.</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">// 测试另一个用户 mysecond 的连接性</span></span><br><span class="line"><span class="string">$ ssh -T git@mysecond.github.com</span></span><br><span class="line"><span class="string">Hi mysecond! You\&#x27;</span>ve successfully authenticated, but GitHub does not provide shell access.</span><br></pre></td></tr></table></figure>
<h1 id="项目测试"><a href="#项目测试" class="headerlink" title="项目测试"></a>项目测试</h1><h2 id="创建两个项目目录"><a href="#创建两个项目目录" class="headerlink" title="创建两个项目目录"></a>创建两个项目目录</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ <span class="built_in">cd</span> ~/ &amp;&amp; mkdir -pv &#123;a,b&#125;</span><br></pre></td></tr></table></figure>
<h2 id="初始化项目-a"><a href="#初始化项目-a" class="headerlink" title="初始化项目 a"></a>初始化项目 a</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ <span class="built_in">cd</span> ~/a</span><br><span class="line">$ git init</span><br><span class="line">$ <span class="built_in">echo</span> <span class="string">&quot;myfirst&quot;</span> &gt; README.md</span><br><span class="line">$ git add README.md</span><br><span class="line">$ git config user.name <span class="string">&quot;myfirst&quot;</span></span><br><span class="line">$ git config user.email <span class="string">&quot;myfirst@gmail.com&quot;</span></span><br><span class="line">$ git remote add github git@github.com:myfirst/test.git</span><br><span class="line">$ git push -u github master</span><br><span class="line">Counting objects: 3, <span class="keyword">done</span>.</span><br><span class="line">Writing objects: 100% (3/3), 213 bytes | 213.00 KiB/s, <span class="keyword">done</span>.</span><br><span class="line">Total 3 (delta 0), reused 0 (delta 0)</span><br><span class="line">To github.com:myfirst/test.git</span><br><span class="line"> * [new branch]      master -&gt; master</span><br><span class="line">Branch master <span class="built_in">set</span> up to track remote branch master from github.</span><br></pre></td></tr></table></figure>
<h2 id="初始化项目-b"><a href="#初始化项目-b" class="headerlink" title="初始化项目 b"></a>初始化项目 b</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ <span class="built_in">cd</span> ~/b</span><br><span class="line">$ git init</span><br><span class="line">$ <span class="built_in">echo</span> <span class="string">&quot;mysecond&quot;</span> &gt; README.md</span><br><span class="line">$ git add README.md</span><br><span class="line">$ git config user.name <span class="string">&quot;mysecond&quot;</span></span><br><span class="line">$ git config user.email <span class="string">&quot;mysecond@gmail.com&quot;</span></span><br><span class="line">$ git remote add github git@mysecond.github.com:mysecond/test.git</span><br><span class="line">$ git push -u github master</span><br><span class="line">Counting objects: 3, <span class="keyword">done</span>.</span><br><span class="line">Writing objects: 100% (3/3), 218 bytes | 218.00 KiB/s, <span class="keyword">done</span>.</span><br><span class="line">Total 3 (delta 0), reused 0 (delta 0)</span><br><span class="line">To mysecond.github.com:mysecond/test.git</span><br><span class="line"> * [new branch]      master -&gt; master</span><br><span class="line">Branch master <span class="built_in">set</span> up to track remote branch master from github.</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>git</category>
      </categories>
      <tags>
        <tag>git</tag>
      </tags>
  </entry>
  <entry>
    <title>Git 起步</title>
    <url>/2018/01/22/git-started/</url>
    <content><![CDATA[<p>🍯 Git 是一种在全球范围都广受欢迎的版本控制系统。在开发过程中，为了跟踪代码，文档，项目等信息中的变化，版本控制变得前所未有的重要。但跟踪变化远远不能满足现代软件开发行业的协同需求，基于 Git 的 Workflow 满足了合作编程的需求，让开发从此变得更加高效和有趣。相比集中式版本控制系统如 SVN ，分布式版本控制系统 Git 拥有更强大的分支管理与合并能力，支持离线开发，并良好地保留了提交过程，让您和您的团队在开发过程中如虎添翼。</p>
<span id="more"></span>
<ul>
<li><a href="https://imajinyun.xyz/2018/01/22/git-started/"><strong>Git 起步</strong></a></li>
<li><a href="https://imajinyun.xyz/2018/01/23/git-basic/"><code>Git 基本操作</code></a></li>
<li><a href="https://imajinyun.xyz/2018/01/24/git-log/"><code>Git 查看日志</code></a></li>
<li><a href="https://imajinyun.xyz/2018/01/25/git-branch/"><code>Git 分支</code></a></li>
<li><a href="https://imajinyun.xyz/2018/01/27/git-multiple-accounts/"><code>Git 中一个客户端设置多个账号</code></a></li>
<li><a href="https://imajinyun.xyz/2018/05/01/git-workflow/"><code>Git Workflow</code></a></li>
<li><a href="https://imajinyun.xyz/2020/09/07/git-collection-command/"><code>Git 命令大全</code></a></li>
</ul>
<h1 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h1><h2 id="设计初衷"><a href="#设计初衷" class="headerlink" title="设计初衷"></a>设计初衷</h2><ul>
<li>为速度而生</li>
<li>简单的设计</li>
<li>对非线性开发模式的强力支持（允许上千个并行开发的分支）</li>
<li>完全分布式</li>
<li>有能力高效管理类似 <code>Linux</code> 内核一样的超大规模的项目（速度和数量）</li>
</ul>
<h2 id="一些特性"><a href="#一些特性" class="headerlink" title="一些特性"></a>一些特性</h2><ul>
<li>优越的存储能力</li>
<li>直接记录快照，而非差异比较</li>
<li>离线操作，几乎所有操作都是本地执行</li>
<li>时刻保持数据完整性</li>
<li>多数操作仅添加数据</li>
<li>开源</li>
</ul>
<p><code>git</code> 中文件的三种状态：工作目录，暂存区域和本地仓库：</p>
<p><img src="https://inotes.oss-cn-beijing.aliyuncs.com/git/201812/git-three-status.png" alt="git-three-status.png"></p>
<h2 id="工作流程"><a href="#工作流程" class="headerlink" title="工作流程"></a>工作流程</h2><ul>
<li>在工作目录中修改某些文件</li>
<li>对修改后的文件进行快照，然后保存到暂存区域</li>
<li>提交更新，将保存在暂存区域的文件快照永久转储到 <code>git</code> 目录中</li>
</ul>
<h1 id="关于版本控制"><a href="#关于版本控制" class="headerlink" title="关于版本控制"></a>关于版本控制</h1><h2 id="集中化的版本控制系统"><a href="#集中化的版本控制系统" class="headerlink" title="集中化的版本控制系统"></a>集中化的版本控制系统</h2><p><code>CVCS - Centralized Version Control Systems</code></p>
<p><img src="https://inotes.oss-cn-beijing.aliyuncs.com/git/201812/centralized-vcs.png" alt="centralized-vcs.png"></p>
<h2 id="分布式版本控制系统"><a href="#分布式版本控制系统" class="headerlink" title="分布式版本控制系统"></a>分布式版本控制系统</h2><p><code>DVCS - Distributed Version Control System</code></p>
<p><img src="https://inotes.oss-cn-beijing.aliyuncs.com/git/201812/distributed-vcs.png" alt="distributed-vcs.png"></p>
<h1 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h1><h2 id="Linux-安装"><a href="#Linux-安装" class="headerlink" title="Linux 安装"></a>Linux 安装</h2><h3 id="安装依赖"><a href="#安装依赖" class="headerlink" title="安装依赖"></a>安装依赖</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">// CentOS</span><br><span class="line">$ sudo yum install curl-devel expat-devel gettext-devel openssl-devel zlib-devel</span><br><span class="line"></span><br><span class="line">// Ubuntu</span><br><span class="line">$ sudo apt-get install libcurl4-gnutls-dev libexpat1-dev gettext libz-dev libssl-dev</span><br></pre></td></tr></table></figure>
<h3 id="手动编译安装"><a href="#手动编译安装" class="headerlink" title="手动编译安装"></a>手动编译安装</h3><blockquote>
<p><a href="https://github.com/git/git/releases">去这里下载 <code>git</code></a></p>
</blockquote>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">// 解压后进行编译安装</span><br><span class="line">$ tar -zxf v2.16.1.tar.gz</span><br><span class="line">$ <span class="built_in">cd</span> v2.16.1</span><br><span class="line">$ make prefix=/usr/<span class="built_in">local</span> all</span><br><span class="line">$ sudo make prefix=/usr/<span class="built_in">local</span> install</span><br></pre></td></tr></table></figure>
<h3 id="包管理器安装"><a href="#包管理器安装" class="headerlink" title="包管理器安装"></a>包管理器安装</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">// CentOS</span><br><span class="line">$ yum install git-core</span><br><span class="line"></span><br><span class="line">// Ubuntu</span><br><span class="line">$ apt-get install git</span><br></pre></td></tr></table></figure>
<h2 id="Mac-安装"><a href="#Mac-安装" class="headerlink" title="Mac 安装"></a>Mac 安装</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">// 使用 brew 安装 git</span><br><span class="line">$ brew install git</span><br></pre></td></tr></table></figure>
<h2 id="Windows-安装"><a href="#Windows-安装" class="headerlink" title="Windows 安装"></a>Windows 安装</h2><blockquote>
<p><a href="http://gitforwindows.org/"><code>We bring the awesome Git SCM to Windows</code></a></p>
</blockquote>
<h1 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h1><h2 id="三种配置"><a href="#三种配置" class="headerlink" title="三种配置"></a>三种配置</h2><ul>
<li>全局配置：当前用户的所有仓库有效，存储配置的文件为 <code>~/.gitconfig</code></li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">// 查看全局配置</span><br><span class="line">$ git config --global -l</span><br><span class="line">或</span><br><span class="line">$ git config --list --global</span><br></pre></td></tr></table></figure>
<ul>
<li>局部配置：当前用户的某个仓库有效，存储配置的文件为 <code>.git/config</code></li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">// 查看局部配置</span><br><span class="line">$ git config --<span class="built_in">local</span> -l</span><br><span class="line">或</span><br><span class="line">$ git config --list --<span class="built_in">local</span></span><br></pre></td></tr></table></figure>
<ul>
<li>系统配置：系统所有用户有效，存储配置的文件为 <code>/etc/gitconfig</code></li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">// 查看系统配置</span><br><span class="line">$ git config --system -l</span><br><span class="line">或</span><br><span class="line">$ git config --list --system</span><br></pre></td></tr></table></figure>
<h2 id="用户信息"><a href="#用户信息" class="headerlink" title="用户信息"></a>用户信息</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">// 配置全局的用户名称</span><br><span class="line">$ git config --global user.name <span class="string">&quot;Your Name&quot;</span></span><br><span class="line"></span><br><span class="line">// 配置全局的邮箱地址</span><br><span class="line">$ git config --global user.email <span class="string">&quot;Your Email&quot;</span></span><br><span class="line"></span><br><span class="line">// 取消全局配置的用户名称</span><br><span class="line">$ git config --global --<span class="built_in">unset</span> user.name</span><br><span class="line"></span><br><span class="line">// 取消全局配置的邮箱地址</span><br><span class="line">$ git config --global --<span class="built_in">unset</span> user.email</span><br><span class="line"></span><br><span class="line">// 配置某个仓库的用户名称</span><br><span class="line">$ git config --<span class="built_in">local</span> user.name <span class="string">&quot;Your Name&quot;</span></span><br><span class="line"></span><br><span class="line">// 配置某个仓库的邮箱地址</span><br><span class="line">$ git config --<span class="built_in">local</span> user.email <span class="string">&quot;Your Email&quot;</span></span><br></pre></td></tr></table></figure>
<h2 id="文本编辑器"><a href="#文本编辑器" class="headerlink" title="文本编辑器"></a>文本编辑器</h2><blockquote>
<p><a href="https://github.com/VundleVim/Vundle.vim/issues/167"><code>Git Commit Problem: &quot;error: There was a problem with the editor &#39;vi&#39;&quot;</code></a></p>
</blockquote>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">// 配置 vim 为 git 默认的编辑器，为满足在 git 中输入一些额外消息的时候，自动调用一个外部文本编辑器的需要</span><br><span class="line">$ git config --global core.editor $(<span class="built_in">which</span> vim)</span><br></pre></td></tr></table></figure>
<h2 id="差异分析工具"><a href="#差异分析工具" class="headerlink" title="差异分析工具"></a>差异分析工具</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">// 配置解决合并冲突时使用哪种差异分析工具</span><br><span class="line">$ git config --global merge.tool vimdiff</span><br></pre></td></tr></table></figure>
<h2 id="换行符配置"><a href="#换行符配置" class="headerlink" title="换行符配置"></a>换行符配置</h2><blockquote>
<p>操作系统对回车 <code>CR</code> 和换行 <code>LF</code> 定义是有差异的。</p>
</blockquote>
<h3 id="AutoCRLF"><a href="#AutoCRLF" class="headerlink" title="AutoCRLF"></a>AutoCRLF</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">// 提交时转换为 LF，检出时转换为 CRLF</span><br><span class="line">$ git config --global core.autocrlf <span class="literal">true</span></span><br><span class="line"></span><br><span class="line">// 提交时转换为 LF，检出时不转换</span><br><span class="line">$ git config --global core.autocrlf input</span><br><span class="line"></span><br><span class="line">// 提交检出均不转换</span><br><span class="line">$ git config --global core.autocrlf <span class="literal">false</span></span><br></pre></td></tr></table></figure>
<h3 id="SafeCRLF"><a href="#SafeCRLF" class="headerlink" title="SafeCRLF"></a>SafeCRLF</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">// 拒绝提交包含混合换行符的文件</span><br><span class="line">$ git config --global core.safecrlf <span class="literal">true</span></span><br><span class="line"></span><br><span class="line">// 允许提交包含混合换行符的文件</span><br><span class="line">$ git config --global core.safecrlf <span class="literal">false</span></span><br><span class="line"></span><br><span class="line">// 提交包含混合换行符的文件时给出警告</span><br><span class="line">$ git config --global core.safecrlf warn</span><br></pre></td></tr></table></figure>
<h2 id="修正空白符"><a href="#修正空白符" class="headerlink" title="修正空白符"></a>修正空白符</h2><p><code>git</code> 预先设置了一些选项来探测和修正空白问题</p>
<blockquote>
<ul>
<li>默认打开的 <code>2</code> 个选项是 <code>trailing-space</code> 和 <code>space-before-tab</code>，<code>trailing-space</code> 会查找每行结尾的空格，<code>space-before-tab</code> 会查找每行开头的制表符前的空格</li>
<li>默认关闭的 <code>2</code> 个选项是 <code>indent-with-non-tab</code> 和 <code>cr-at-eol</code>，<code>indent-with-non-tab</code> 会查找 <code>8</code> 个以上空格（非制表符）开头的行，<code>cr-at-eol</code> 让 <code>git</code> 知道行尾回车符是合法的</li>
</ul>
</blockquote>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">// 全局配置修正空白符</span><br><span class="line">$ git config --global core.whitespace trailing-space,space-before-tab</span><br></pre></td></tr></table></figure>
<h2 id="配置快捷操作"><a href="#配置快捷操作" class="headerlink" title="配置快捷操作"></a>配置快捷操作</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">// 为 git 命令创建一个快捷方式</span><br><span class="line">$ git config --global <span class="built_in">alias</span>.&lt;alias-name&gt; &lt;git-command&gt;</span><br><span class="line"></span><br><span class="line">// 检出快捷方式设置</span><br><span class="line">$ git config --global alias.co checkout</span><br><span class="line"></span><br><span class="line">// 提交快捷方式设置</span><br><span class="line">$ git config --global alias.ci commit</span><br><span class="line"></span><br><span class="line">// 状态快捷方式设置</span><br><span class="line">$ git config --global alias.st status</span><br><span class="line"></span><br><span class="line">// 分支快捷方式设置</span><br><span class="line">$ git config --global alias.br branch</span><br></pre></td></tr></table></figure>
<h2 id="配置在-Windows-下-ASCII-字符的文件名正确显示"><a href="#配置在-Windows-下-ASCII-字符的文件名正确显示" class="headerlink" title="配置在 Windows 下 ASCII 字符的文件名正确显示"></a>配置在 Windows 下 ASCII 字符的文件名正确显示</h2><p><a href="https://blog.zengrong.net/post/1249.html">git 乱码解决方案汇总</a></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">// 一个显示乱码的实例</span><br><span class="line">$ git status</span><br><span class="line">On branch master</span><br><span class="line">Your branch is up to date with <span class="string">&#x27;gitee/master&#x27;</span>.</span><br><span class="line"></span><br><span class="line">Changes not staged <span class="keyword">for</span> commit:</span><br><span class="line">  (use <span class="string">&quot;git add/rm &lt;file&gt;...&quot;</span> to update what will be committed)</span><br><span class="line">  (use <span class="string">&quot;git checkout -- &lt;file&gt;...&quot;</span> to discard changes <span class="keyword">in</span> working directory)</span><br><span class="line">  (commit or discard the untracked or modified content <span class="keyword">in</span> submodules)</span><br><span class="line"></span><br><span class="line">   deleted:    <span class="string">&quot;xxx-\345\210\235\350\257\206.xx&quot;</span> // 中文文件名显示不正常</span><br><span class="line"></span><br><span class="line">Untracked files:</span><br><span class="line">  (use <span class="string">&quot;git add &lt;file&gt;...&quot;</span> to include <span class="keyword">in</span> what will be committed)</span><br><span class="line"></span><br><span class="line">// 全局配置以解决 Windows Git Bash、Linux 下的中文转码问题</span><br><span class="line">$ git config --global core.quotepath <span class="literal">false</span></span><br></pre></td></tr></table></figure>
<h2 id="配置对大小写敏感"><a href="#配置对大小写敏感" class="headerlink" title="配置对大小写敏感"></a>配置对大小写敏感</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">// 全局配置对大小写敏感，保持 Mac/Win/Linux 一致性</span><br><span class="line">$ git config --global core.ignorecase <span class="literal">false</span></span><br></pre></td></tr></table></figure>
<h2 id="配置菜色显示"><a href="#配置菜色显示" class="headerlink" title="配置菜色显示"></a>配置菜色显示</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">// 全局配置菜色显示</span><br><span class="line">$ git config --global color.ui auto</span><br></pre></td></tr></table></figure>
<h2 id="以-https-方式进行连接时，记住密码"><a href="#以-https-方式进行连接时，记住密码" class="headerlink" title="以 https 方式进行连接时，记住密码"></a>以 https 方式进行连接时，记住密码</h2><blockquote>
<p>为当前仓库设置记住密码，设置后，只要在推送一次，以后就不需要用户名和密码了</p>
</blockquote>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">// 设置保存密码到硬盘，如果是 macOS，选项可以改为 osxkeychain</span><br><span class="line">$ git config credential.helper store</span><br><span class="line"></span><br><span class="line">// 设置保存密码的超时时间</span><br><span class="line">$ git config credential.helper <span class="string">&#x27;cache --timeout=36000&#x27;</span></span><br><span class="line"></span><br><span class="line">// 查看密码文件（以明文的方式保存的）</span><br><span class="line">$ cat ~/.git-credentials</span><br></pre></td></tr></table></figure>
<h2 id="查看配置信息"><a href="#查看配置信息" class="headerlink" title="查看配置信息"></a>查看配置信息</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ git config --list</span><br><span class="line">或</span><br><span class="line">$ git config -l</span><br></pre></td></tr></table></figure>
<h2 id="解决目录卡顿问题"><a href="#解决目录卡顿问题" class="headerlink" title="解决目录卡顿问题"></a>解决目录卡顿问题</h2><p>主要解决在 <code>zsh</code> 下，在 <code>git</code> 版本控制的目录输入命令执行缓慢的问题。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">// 不读取文件变化信息（针对当前用户当前项目）</span><br><span class="line">$ git config --add oh-my-zsh.hide-dirty 1</span><br></pre></td></tr></table></figure>
<p><img src="https://inotes.oss-cn-beijing.aliyuncs.com/git/201812/git-zsh-dirty.png" alt="git-zsh-dirty.png"></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">// 不读取任何 git 信息（针对当前用户所有项目）</span><br><span class="line">$ git config --global --add oh-my-zsh.hide-status 1</span><br></pre></td></tr></table></figure>
<p><img src="https://inotes.oss-cn-beijing.aliyuncs.com/git/201812/git-zsh-status.png" alt="git-zsh-status.png"></p>
<h2 id="帮助命令"><a href="#帮助命令" class="headerlink" title="帮助命令"></a>帮助命令</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ git <span class="built_in">help</span> &lt;verb&gt;</span><br><span class="line">或</span><br><span class="line">$ git &lt;verb&gt; --<span class="built_in">help</span></span><br><span class="line">或</span><br><span class="line">$ man git</span><br><span class="line"></span><br><span class="line">// 查看帮助命令</span><br><span class="line">$ git --<span class="built_in">help</span></span><br><span class="line">usage: git [--version] [--<span class="built_in">help</span>] [-C &lt;path&gt;] [-c &lt;name&gt;=&lt;value&gt;]</span><br><span class="line">           [--exec-path[=&lt;path&gt;]] [--html-path] [--man-path] [--info-path]</span><br><span class="line">           [-p | --paginate | --no-pager] [--no-replace-objects] [--bare]</span><br><span class="line">           [--git-dir=&lt;path&gt;] [--work-tree=&lt;path&gt;] [--namespace=&lt;name&gt;]</span><br><span class="line">           &lt;<span class="built_in">command</span>&gt; [&lt;args&gt;]</span><br><span class="line"></span><br><span class="line">These are common Git commands used <span class="keyword">in</span> various situations:</span><br><span class="line"></span><br><span class="line">start a working area (see also: git <span class="built_in">help</span> tutorial)</span><br><span class="line">   <span class="built_in">clone</span>      Clone a repository into a new directory</span><br><span class="line">   init       Create an empty Git repository or reinitialize an existing one</span><br><span class="line"></span><br><span class="line">work on the current change (see also: git <span class="built_in">help</span> everyday)</span><br><span class="line">   add        Add file contents to the index</span><br><span class="line">   mv         Move or rename a file, a directory, or a symlink</span><br><span class="line">   reset      Reset current HEAD to the specified state</span><br><span class="line">   rm         Remove files from the working tree and from the index</span><br><span class="line"></span><br><span class="line">examine the <span class="built_in">history</span> and state (see also: git <span class="built_in">help</span> revisions)</span><br><span class="line">   bisect     Use binary search to find the commit that introduced a bug</span><br><span class="line">   grep       Print lines matching a pattern</span><br><span class="line">   <span class="built_in">log</span>        Show commit logs</span><br><span class="line">   show       Show various types of objects</span><br><span class="line">   status     Show the working tree status</span><br><span class="line"></span><br><span class="line">grow, mark and tweak your common <span class="built_in">history</span></span><br><span class="line">   branch     List, create, or delete branches</span><br><span class="line">   checkout   Switch branches or restore working tree files</span><br><span class="line">   commit     Record changes to the repository</span><br><span class="line">   diff       Show changes between commits, commit and working tree, etc</span><br><span class="line">   merge      Join two or more development histories together</span><br><span class="line">   rebase     Reapply commits on top of another base tip</span><br><span class="line">   tag        Create, list, delete or verify a tag object signed with GPG</span><br><span class="line"></span><br><span class="line">collaborate (see also: git <span class="built_in">help</span> workflows)</span><br><span class="line">   fetch      Download objects and refs from another repository</span><br><span class="line">   pull       Fetch from and integrate with another repository or a <span class="built_in">local</span> branch</span><br><span class="line">   push       Update remote refs along with associated objects</span><br><span class="line"></span><br><span class="line"><span class="string">&#x27;git help -a&#x27;</span> and <span class="string">&#x27;git help -g&#x27;</span> list available subcommands and some</span><br><span class="line">concept guides. See <span class="string">&#x27;git help &lt;command&gt;&#x27;</span> or <span class="string">&#x27;git help &lt;concept&gt;&#x27;</span></span><br><span class="line">to <span class="built_in">read</span> about a specific subcommand or concept.</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>git</category>
      </categories>
      <tags>
        <tag>git</tag>
      </tags>
  </entry>
  <entry>
    <title>Go 连接字符串</title>
    <url>/2021/07/25/go-concat-string/</url>
    <content><![CDATA[<p>🍹 Go 中连接字符串的方法有很多种，其实掌握一两种较为高效的方法就足够了，其它权当看热闹。</p>
<span id="more"></span>
<ul>
<li><a href="https://imajinyun.xyz/2021/06/26/go-get-started/">Go 起步</a></li>
<li><a href="https://imajinyun.xyz/2021/07/02/go-data-type/">Go 数据类型</a></li>
<li><a href="https://imajinyun.xyz/2021/07/11/go-date-time/">Go 日期时间</a></li>
<li><a href="https://imajinyun.xyz/2021/07/14/go-random-number/">Go 随机数</a></li>
<li><a href="https://imajinyun.xyz/2021/07/16/go-unit-test/">Go 单元测试</a></li>
<li><a href="https://imajinyun.xyz/2021/07/17/go-benchmark-test/">Go 基准测试</a></li>
<li><a href="https://imajinyun.xyz/2021/07/22/go-other-test/">Go 其它测试</a></li>
<li><a href="https://imajinyun.xyz/2021/07/24/go-correct-posture/">Go 正确姿势</a></li>
<li><strong>Go 连接字符串</strong></li>
</ul>
<h2 id="几种连接方式"><a href="#几种连接方式" class="headerlink" title="几种连接方式"></a>几种连接方式</h2><h3 id="Concat"><a href="#Concat" class="headerlink" title="Concat"></a>Concat</h3><figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> hello</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> <span class="string">&quot;testing&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">=== RUN   TestStringConcat</span></span><br><span class="line"><span class="comment">    /Users/xxx/Codes/go/src/github.com/xxx/hello/hello_test.go:20: Hello World!</span></span><br><span class="line"><span class="comment">--- PASS: TestStringConcat (0.00s)</span></span><br><span class="line"><span class="comment">PASS</span></span><br><span class="line"><span class="comment">ok  	example.com/hello	0.014s</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">TestStringConcat</span><span class="params">(t *testing.T)</span></span> &#123;</span><br><span class="line">  s := <span class="string">&quot;Hello &quot;</span></span><br><span class="line">  s += <span class="string">&quot;World!&quot;</span></span><br><span class="line">  t.Log(s)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="Sprintf"><a href="#Sprintf" class="headerlink" title="Sprintf"></a>Sprintf</h3><figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> hello</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line">  <span class="string">&quot;fmt&quot;</span></span><br><span class="line">  <span class="string">&quot;testing&quot;</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">=== RUN   TestStringSprintf</span></span><br><span class="line"><span class="comment">    /Users/xxx/Codes/go/src/github.com/xxx/hello/hello_test.go:18: Hello World!</span></span><br><span class="line"><span class="comment">--- PASS: TestStringSprintf (0.00s)</span></span><br><span class="line"><span class="comment">PASS</span></span><br><span class="line"><span class="comment">ok  	example.com/hello	0.010s</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">TestStringSprintf</span><span class="params">(t *testing.T)</span></span> &#123;</span><br><span class="line">  s := <span class="string">&quot;Hello &quot;</span></span><br><span class="line">  s = fmt.Sprintf(<span class="string">&quot;%s%s&quot;</span>, s, <span class="string">&quot;World!&quot;</span>)</span><br><span class="line">  t.Log(s)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="Join"><a href="#Join" class="headerlink" title="Join"></a>Join</h3><figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> hello</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line">  <span class="string">&quot;strings&quot;</span></span><br><span class="line">  <span class="string">&quot;testing&quot;</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">=== RUN   TestStringJoin</span></span><br><span class="line"><span class="comment">    /Users/xxx/Codes/go/src/github.com/xxx/hello/hello_test.go:18: Hello World!</span></span><br><span class="line"><span class="comment">--- PASS: TestStringJoin (0.00s)</span></span><br><span class="line"><span class="comment">PASS</span></span><br><span class="line"><span class="comment">ok  	example.com/hello	0.008s</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">TestStringJoin</span><span class="params">(t *testing.T)</span></span> &#123;</span><br><span class="line">  s := <span class="string">&quot;Hello &quot;</span></span><br><span class="line">  s = strings.Join([]<span class="keyword">string</span>&#123;s, <span class="string">&quot;World!&quot;</span>&#125;, <span class="string">&quot;&quot;</span>)</span><br><span class="line">  t.Log(s)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="Buffer-Write"><a href="#Buffer-Write" class="headerlink" title="Buffer Write"></a>Buffer Write</h3><figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> hello</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line">  <span class="string">&quot;bytes&quot;</span></span><br><span class="line">  <span class="string">&quot;testing&quot;</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">=== RUN   TestBufferWrite</span></span><br><span class="line"><span class="comment">    /Users/xxx/Codes/go/src/github.com/xxx/hello/hello_test.go:20: Hello World!</span></span><br><span class="line"><span class="comment">--- PASS: TestBufferWrite (0.00s)</span></span><br><span class="line"><span class="comment">PASS</span></span><br><span class="line"><span class="comment">ok  	example.com/hello	0.010s</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">TestBufferWrite</span><span class="params">(t *testing.T)</span></span> &#123;</span><br><span class="line">  buf := <span class="built_in">new</span>(bytes.Buffer)</span><br><span class="line">  buf.WriteString(<span class="string">&quot;Hello &quot;</span>)</span><br><span class="line">  buf.WriteString(<span class="string">&quot;World!&quot;</span>)</span><br><span class="line">  s := buf.String()</span><br><span class="line">  t.Log(s)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="Bytes-Append"><a href="#Bytes-Append" class="headerlink" title="Bytes Append"></a>Bytes Append</h3><figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> hello</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> <span class="string">&quot;testing&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">=== RUN   TestBytesAppend</span></span><br><span class="line"><span class="comment">    /Users/xxx/Codes/go/src/github.com/xxx/hello/hello_test.go:18: Hello</span></span><br><span class="line"><span class="comment">--- PASS: TestBytesAppend (0.00s)</span></span><br><span class="line"><span class="comment">PASS</span></span><br><span class="line"><span class="comment">ok  	example.com/hello</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">TestBytesAppend</span><span class="params">(t *testing.T)</span></span> &#123;</span><br><span class="line">  <span class="keyword">var</span> b []<span class="keyword">byte</span></span><br><span class="line">  s := <span class="string">&quot;Hello &quot;</span></span><br><span class="line">  b = <span class="built_in">append</span>(b, <span class="string">&quot;World!&quot;</span>...)</span><br><span class="line">  t.Log(<span class="keyword">string</span>(s))</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="Copy"><a href="#Copy" class="headerlink" title="Copy"></a>Copy</h3><figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> hello</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> <span class="string">&quot;testing&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">=== RUN   TestStringCopy</span></span><br><span class="line"><span class="comment">    /Users/xxx/Codes/go/src/github.com/xxx/hello/hello_test.go:18: Hello World!</span></span><br><span class="line"><span class="comment">--- PASS: TestStringCopy (0.00s)</span></span><br><span class="line"><span class="comment">PASS</span></span><br><span class="line"><span class="comment">ok  	example.com/hello	(cached)</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">TestStringCopy</span><span class="params">(t *testing.T)</span></span> &#123;</span><br><span class="line">  b := <span class="built_in">make</span>([]<span class="keyword">byte</span>, <span class="number">0</span>)</span><br><span class="line">  b = mycopy(b, <span class="string">&quot;Hello &quot;</span>)</span><br><span class="line">  b = mycopy(b, <span class="string">&quot;World!&quot;</span>)</span><br><span class="line">  t.Log(<span class="keyword">string</span>(b))</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">mycopy</span><span class="params">(b []<span class="keyword">byte</span>, s <span class="keyword">string</span>)</span> []<span class="title">byte</span></span> &#123;</span><br><span class="line">  n := <span class="built_in">len</span>(b)</span><br><span class="line">  <span class="keyword">if</span> n+<span class="built_in">len</span>(s) &gt; <span class="built_in">cap</span>(b) &#123;</span><br><span class="line">    t := <span class="built_in">make</span>([]<span class="keyword">byte</span>, <span class="number">2</span>*<span class="built_in">cap</span>(b)+<span class="built_in">len</span>(s))</span><br><span class="line">    <span class="built_in">copy</span>(t, b)</span><br><span class="line">    b = t</span><br><span class="line">  &#125;</span><br><span class="line">  b = b[<span class="number">0</span> : n+<span class="built_in">len</span>(s)]</span><br><span class="line">  <span class="built_in">copy</span>(b[n:], s)</span><br><span class="line">  <span class="keyword">return</span> b</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="String-Builder"><a href="#String-Builder" class="headerlink" title="String Builder"></a>String Builder</h3><figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> hello</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line">  <span class="string">&quot;strings&quot;</span></span><br><span class="line">  <span class="string">&quot;testing&quot;</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">=== RUN   TestStringBuilder</span></span><br><span class="line"><span class="comment">    /Users/xxx/Codes/go/src/github.com/xxx/hello/hello_test.go:20: Hello World!</span></span><br><span class="line"><span class="comment">--- PASS: TestStringBuilder (0.00s)</span></span><br><span class="line"><span class="comment">PASS</span></span><br><span class="line"><span class="comment">ok  	example.com/hello	0.013s</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">TestStringBuilder</span><span class="params">(t *testing.T)</span></span> &#123;</span><br><span class="line">  <span class="keyword">var</span> builder strings.Builder</span><br><span class="line">  builder.WriteString(<span class="string">&quot;Hello &quot;</span>)</span><br><span class="line">  builder.WriteString(<span class="string">&quot;World!&quot;</span>)</span><br><span class="line">  s := builder.String()</span><br><span class="line">  t.Log(s)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="性能测试"><a href="#性能测试" class="headerlink" title="性能测试"></a>性能测试</h2><figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> hello</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line">  <span class="string">&quot;bytes&quot;</span></span><br><span class="line">  <span class="string">&quot;fmt&quot;</span></span><br><span class="line">  <span class="string">&quot;strings&quot;</span></span><br><span class="line">  <span class="string">&quot;testing&quot;</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> (</span><br><span class="line">  src = <span class="string">&quot;Hello World!&quot;</span></span><br><span class="line">  cnt = <span class="number">10000</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> expected = strings.Repeat(src, cnt)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">mycopy</span><span class="params">(b []<span class="keyword">byte</span>, s <span class="keyword">string</span>)</span> []<span class="title">byte</span></span> &#123;</span><br><span class="line">  n := <span class="built_in">len</span>(b)</span><br><span class="line">  <span class="keyword">if</span> n+<span class="built_in">len</span>(s) &gt; <span class="built_in">cap</span>(b) &#123;</span><br><span class="line">    t := <span class="built_in">make</span>([]<span class="keyword">byte</span>, <span class="number">2</span>*<span class="built_in">cap</span>(b)+<span class="built_in">len</span>(s))</span><br><span class="line">    <span class="built_in">copy</span>(t, b)</span><br><span class="line">    b = t</span><br><span class="line">  &#125;</span><br><span class="line">  b = b[<span class="number">0</span> : n+<span class="built_in">len</span>(s)]</span><br><span class="line">  <span class="built_in">copy</span>(b[n:], s)</span><br><span class="line">  <span class="keyword">return</span> b</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">BenchmarkStringConcat</span><span class="params">(b *testing.B)</span></span> &#123;</span><br><span class="line">  <span class="keyword">var</span> res <span class="keyword">string</span></span><br><span class="line">  <span class="keyword">for</span> n := <span class="number">0</span>; n &lt; b.N; n++ &#123;</span><br><span class="line">    <span class="keyword">var</span> str <span class="keyword">string</span></span><br><span class="line">    <span class="keyword">for</span> i := <span class="number">0</span>; i &lt; cnt; i++ &#123;</span><br><span class="line">      str += src</span><br><span class="line">    &#125;</span><br><span class="line">    res = str</span><br><span class="line">  &#125;</span><br><span class="line">  b.StopTimer()</span><br><span class="line">  <span class="keyword">if</span> res != expected &#123;</span><br><span class="line">    b.Errorf(<span class="string">&quot;got=%s, want=%s&quot;</span>, <span class="keyword">string</span>(res), expected)</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">BenchmarkStringSprintf</span><span class="params">(b *testing.B)</span></span> &#123;</span><br><span class="line">  <span class="keyword">var</span> res <span class="keyword">string</span></span><br><span class="line">  <span class="keyword">for</span> n := <span class="number">0</span>; n &lt; b.N; n++ &#123;</span><br><span class="line">    <span class="keyword">var</span> str <span class="keyword">string</span></span><br><span class="line">    <span class="keyword">for</span> i := <span class="number">0</span>; i &lt; cnt; i++ &#123;</span><br><span class="line">      str = fmt.Sprintf(<span class="string">&quot;%s%s&quot;</span>, str, src)</span><br><span class="line">    &#125;</span><br><span class="line">    res = str</span><br><span class="line">  &#125;</span><br><span class="line">  b.StopTimer()</span><br><span class="line">  <span class="keyword">if</span> res != expected &#123;</span><br><span class="line">    b.Errorf(<span class="string">&quot;got=%s, want=%s&quot;</span>, <span class="keyword">string</span>(res), expected)</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">BenchmarkStringJoin</span><span class="params">(b *testing.B)</span></span> &#123;</span><br><span class="line">  <span class="keyword">var</span> res <span class="keyword">string</span></span><br><span class="line">  <span class="keyword">for</span> n := <span class="number">0</span>; n &lt; b.N; n++ &#123;</span><br><span class="line">    <span class="keyword">var</span> str <span class="keyword">string</span></span><br><span class="line">    <span class="keyword">for</span> i := <span class="number">0</span>; i &lt; cnt; i++ &#123;</span><br><span class="line">      str = strings.Join([]<span class="keyword">string</span>&#123;str, src&#125;, <span class="string">&quot;&quot;</span>)</span><br><span class="line">    &#125;</span><br><span class="line">    res = str</span><br><span class="line">  &#125;</span><br><span class="line">  b.StopTimer()</span><br><span class="line">  <span class="keyword">if</span> res != expected &#123;</span><br><span class="line">    b.Errorf(<span class="string">&quot;got=%s, want=%s&quot;</span>, res, expected)</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">BenchmarkBufferWrite</span><span class="params">(b *testing.B)</span></span> &#123;</span><br><span class="line">  <span class="keyword">var</span> res <span class="keyword">string</span></span><br><span class="line">  <span class="keyword">for</span> n := <span class="number">0</span>; n &lt; b.N; n++ &#123;</span><br><span class="line">    buf := <span class="built_in">new</span>(bytes.Buffer)</span><br><span class="line">    <span class="keyword">for</span> i := <span class="number">0</span>; i &lt; cnt; i++ &#123;</span><br><span class="line">      buf.WriteString(src)</span><br><span class="line">    &#125;</span><br><span class="line">    res = buf.String()</span><br><span class="line">  &#125;</span><br><span class="line">  b.StopTimer()</span><br><span class="line">  <span class="keyword">if</span> res != expected &#123;</span><br><span class="line">    b.Errorf(<span class="string">&quot;got=%s, want=%s&quot;</span>, <span class="keyword">string</span>(res), expected)</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">BenchmarkBytesAppend</span><span class="params">(b *testing.B)</span></span> &#123;</span><br><span class="line">  <span class="keyword">var</span> res <span class="keyword">string</span></span><br><span class="line">  <span class="keyword">for</span> n := <span class="number">0</span>; n &lt; b.N; n++ &#123;</span><br><span class="line">    <span class="keyword">var</span> bytes []<span class="keyword">byte</span></span><br><span class="line">    <span class="keyword">for</span> i := <span class="number">0</span>; i &lt; cnt; i++ &#123;</span><br><span class="line">      bytes = <span class="built_in">append</span>(bytes, src...)</span><br><span class="line">    &#125;</span><br><span class="line">    res = <span class="keyword">string</span>(bytes)</span><br><span class="line">  &#125;</span><br><span class="line">  b.StopTimer()</span><br><span class="line">  <span class="keyword">if</span> res != expected &#123;</span><br><span class="l